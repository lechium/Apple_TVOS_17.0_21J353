//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSHashTable, NSMutableSet, NSSet, NSString, PBAutoPIPTransaction, PBCoordinatedTransitionToken, PBMediaRemoteObserver, PBPIPRootViewController, PBPictureInPictureOverlayCoordinator, PBSPictureInPictureState, PBSplitViewController, PBSystemGestureHandle, PGPictureInPictureController, TVSStateMachine, UIApplicationSceneDeactivationAssertion;
@protocol OS_dispatch_queue, PBSystemUIServiceSplitViewStatePublishing;

@interface PBPictureInPictureManager : NSObject
{
    _Bool _swapping;	// 8 = 0x8
    _Bool _stashingEnabled;	// 9 = 0x9
    _Bool _stashed;	// 10 = 0xa
    _Bool _shouldShowControlsHintOnActivation;	// 11 = 0xb
    _Bool _shouldAvoidFocusOnNextUpdate;	// 12 = 0xc
    _Bool _shouldAvoidNestingPiPOnNextSplitViewPresentation;	// 13 = 0xd
    _Bool _shouldResumePlaybackOnInterruptionEnd;	// 14 = 0xe
    _Bool _stoppingFromSystemShell;	// 15 = 0xf
    struct os_unfair_lock_s _observersLock;	// 16 = 0x10
    id <PBSystemUIServiceSplitViewStatePublishing> _splitViewStatePublisher;	// 24 = 0x18
    PBSplitViewController *_splitViewController;	// 32 = 0x20
    PBAutoPIPTransaction *_deferredAutoPipTransaction;	// 40 = 0x28
    TVSStateMachine *_stateMachine;	// 48 = 0x30
    PGPictureInPictureController *_pictureInPictureController;	// 56 = 0x38
    PBPIPRootViewController *_pipRootViewController;	// 64 = 0x40
    NSHashTable *_observers;	// 72 = 0x48
    PBPictureInPictureOverlayCoordinator *_overlayCoordinator;	// 80 = 0x50
    PBMediaRemoteObserver *_mediaRemoteObserver;	// 88 = 0x58
    long long _currentQuadrant;	// 96 = 0x60
    NSDate *_currentQuadrantStartDate;	// 104 = 0x68
    NSMutableSet *_activeInterruptions;	// 112 = 0x70
    UIApplicationSceneDeactivationAssertion *_pipSceneDeactivationAssertion;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *_mediaRemoteQueue;	// 128 = 0x80
    NSDate *_sessionStartDate;	// 136 = 0x88
    PBSystemGestureHandle *_toggleEditingControlsGesture;	// 144 = 0x90
    PBCoordinatedTransitionToken *_editingControlsTransitionToken;	// 152 = 0x98
}

+ (id)sharedInstance;	// IMP=0x00200000000589d2
+ (id)dependencyDescription;	// IMP=0x00100000000587be
- (void).cxx_destruct;	// IMP=0x002000000005ee18
@property(readonly, nonatomic) PBCoordinatedTransitionToken *editingControlsTransitionToken; // @synthesize editingControlsTransitionToken=_editingControlsTransitionToken;
@property(readonly, nonatomic) PBSystemGestureHandle *toggleEditingControlsGesture; // @synthesize toggleEditingControlsGesture=_toggleEditingControlsGesture;
@property(nonatomic, getter=isStoppingFromSystemShell) _Bool stoppingFromSystemShell; // @synthesize stoppingFromSystemShell=_stoppingFromSystemShell;
@property(retain, nonatomic) NSDate *sessionStartDate; // @synthesize sessionStartDate=_sessionStartDate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *mediaRemoteQueue; // @synthesize mediaRemoteQueue=_mediaRemoteQueue;
@property(retain, nonatomic) UIApplicationSceneDeactivationAssertion *pipSceneDeactivationAssertion; // @synthesize pipSceneDeactivationAssertion=_pipSceneDeactivationAssertion;
@property(readonly, nonatomic) _Bool shouldResumePlaybackOnInterruptionEnd; // @synthesize shouldResumePlaybackOnInterruptionEnd=_shouldResumePlaybackOnInterruptionEnd;
@property(readonly, nonatomic) NSMutableSet *activeInterruptions; // @synthesize activeInterruptions=_activeInterruptions;
@property(readonly, nonatomic) _Bool shouldAvoidNestingPiPOnNextSplitViewPresentation; // @synthesize shouldAvoidNestingPiPOnNextSplitViewPresentation=_shouldAvoidNestingPiPOnNextSplitViewPresentation;
@property(readonly, nonatomic) _Bool shouldAvoidFocusOnNextUpdate; // @synthesize shouldAvoidFocusOnNextUpdate=_shouldAvoidFocusOnNextUpdate;
@property(retain, nonatomic) NSDate *currentQuadrantStartDate; // @synthesize currentQuadrantStartDate=_currentQuadrantStartDate;
@property(readonly, nonatomic) long long currentQuadrant; // @synthesize currentQuadrant=_currentQuadrant;
@property(readonly, nonatomic) PBMediaRemoteObserver *mediaRemoteObserver; // @synthesize mediaRemoteObserver=_mediaRemoteObserver;
@property(readonly, nonatomic) PBPictureInPictureOverlayCoordinator *overlayCoordinator; // @synthesize overlayCoordinator=_overlayCoordinator;
@property(readonly, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(readonly, nonatomic) struct os_unfair_lock_s observersLock; // @synthesize observersLock=_observersLock;
@property(readonly, nonatomic) _Bool shouldShowControlsHintOnActivation; // @synthesize shouldShowControlsHintOnActivation=_shouldShowControlsHintOnActivation;
@property(retain, nonatomic, setter=setPIPRootViewController:) PBPIPRootViewController *pipRootViewController; // @synthesize pipRootViewController=_pipRootViewController;
@property(readonly, nonatomic) PGPictureInPictureController *pictureInPictureController; // @synthesize pictureInPictureController=_pictureInPictureController;
@property(readonly, nonatomic) TVSStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain, nonatomic) PBAutoPIPTransaction *deferredAutoPipTransaction; // @synthesize deferredAutoPipTransaction=_deferredAutoPipTransaction;
@property(readonly, nonatomic) PBSplitViewController *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(readonly, nonatomic, getter=isStashed) _Bool stashed; // @synthesize stashed=_stashed;
@property(nonatomic, getter=isStashingEnabled) _Bool stashingEnabled; // @synthesize stashingEnabled=_stashingEnabled;
@property(nonatomic, getter=isSwapping) _Bool swapping; // @synthesize swapping=_swapping;
@property(retain, nonatomic) id <PBSystemUIServiceSplitViewStatePublishing> splitViewStatePublisher; // @synthesize splitViewStatePublisher=_splitViewStatePublisher;
- (void);	// IMP=0x001000000005e9e9
- (void)stopObservingMediaRemoteChanges;	// IMP=0x001000000005e987
- (void)startObservingMediaRemoteChanges;	// IMP=0x001000000005e8fe
- (void)getPictureInPicturePlayerPath:(CDUnknownBlockType)arg1;	// IMP=0x001000000005e520
- (id)transitionCoordinator:(id)arg1 willDismissTransitionWithToken:(id)arg2 withContext:(id)arg3;	// IMP=0x001000000005e304
- (void)controlCenterManagerDidDeactivateFullScreenOverlay:(id)arg1;	// IMP=0x001000000005e29f
- (void)controlCenterManagerDidActivateFullScreenOverlay:(id)arg1;	// IMP=0x001000000005e23a
- (void)screenSaverManagerWillDismissScreenSaver:(id)arg1;	// IMP=0x001000000005e220
- (void)screenSaverManagerWillPresentScreenSaver:(id)arg1;	// IMP=0x001000000005e206
- (void)bulletinManager:(id)arg1 didEndFocusOnBulletinViewController:(id)arg2;	// IMP=0x001000000005e1a1
- (void)bulletinManager:(id)arg1 didBeginFocusOnBulletinViewController:(id)arg2;	// IMP=0x001000000005e13c
- (void)bulletinManager:(id)arg1 didDismissBulletinViewController:(id)arg2;	// IMP=0x001000000005e0e7
- (void)bulletinManager:(id)arg1 willPresentBulletinViewController:(id)arg2 withActivationActions:(unsigned long long)arg3;	// IMP=0x001000000005e038
- (void)siriManagerDidUnhideSiriWindow:(id)arg1;	// IMP=0x001000000005dfec
- (void)siriManager:(id)arg1 didUpdateVisibleState:(long long)arg2;	// IMP=0x001000000005dfa5
- (_Bool)_shouldInterruptForLayoutLevel:(long long)arg1;	// IMP=0x001000000005de9e
- (void)presentationElementFocusCoordinator:(id)arg1 didUpdateToActiveLayoutLevel:(long long)arg2 fromLevel:(long long)arg3;	// IMP=0x001000000005dda9
- (_Bool)_shouldAvoidFocusForLayoutLevel:(long long)arg1;	// IMP=0x001000000005dd02
- (_Bool)_shouldAdjustInsetsForLayoutLevel:(long long)arg1;	// IMP=0x001000000005dc35
- (void)sceneManager:(id)arg1 didReceiveCompactSceneRequestForScene:(id)arg2;	// IMP=0x001000000005dab5
- (void)sceneManager:(id)arg1 didChangeCurrentApplicationFromSceneHandle:(id)arg2 toSceneHandle:(id)arg3;	// IMP=0x001000000005da37
- (void)sceneManager:(id)arg1 didUpdateFocusedFrame:(struct CGRect)arg2 forFocusedScene:(id)arg3;	// IMP=0x001000000005d9d1
- (void)sceneManager:(id)arg1 didUpdateOverlayInsets:(struct UIEdgeInsets)arg2 forFocusedScene:(id)arg3;	// IMP=0x001000000005d8b8
- (void)overlayController:(id)arg1 didDismissSession:(id)arg2;	// IMP=0x001000000005d8a3
- (void)overlayController:(id)arg1 willDismissSession:(id)arg2 withContext:(id)arg3;	// IMP=0x001000000005d889
- (void)overlayController:(id)arg1 didPresentSession:(id)arg2;	// IMP=0x001000000005d86f
- (id)fetchCurrentPictureInPictureState;	// IMP=0x001000000005d84c
- (void)_notifyObserversDidCancelForApplication:(id)arg1;	// IMP=0x001000000005d763
- (void)_notifyObserversDidStopForApplication:(id)arg1;	// IMP=0x001000000005d67a
- (void)_notifyObserversSendPictureInPicturePlaybackCommand:(unsigned long long)arg1;	// IMP=0x001000000005d5d0
- (void)_notifyObserversPictureInPictureDidUpdateState;	// IMP=0x001000000005d4fe
- (void)_enumerateObserversUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000005d3b3
- (void)removeObserver:(id)arg1;	// IMP=0x001000000005d333
- (void)addObserver:(id)arg1;	// IMP=0x001000000005d2b3
- (void)splitViewControllerWillUnhide:(id)arg1;	// IMP=0x001000000005d23b
- (void)splitViewControllerDidHide:(id)arg1;	// IMP=0x001000000005d21f
- (void)splitViewControllerWillHide:(id)arg1;	// IMP=0x001000000005d1d6
- (void)splitViewControllerDidDismiss:(id)arg1;	// IMP=0x001000000005d156
- (void)splitViewControllerWillDismiss:(id)arg1;	// IMP=0x001000000005d11d
- (void)splitViewControllerWillPresent:(id)arg1;	// IMP=0x001000000005cf96
- (_Bool)splitViewController:(id)arg1 startPictureInPictureForApplication:(id)arg2;	// IMP=0x001000000005ce83
- (_Bool)splitViewController:(id)arg1 shouldShowStartPictureInPictureForApplication:(id)arg2;	// IMP=0x001000000005cdf6
- (void)splitViewController:(id)arg1 requestsApplicationLaunch:(id)arg2;	// IMP=0x001000000005cd53
- (void)_endNestingPiPInsideSplitView;	// IMP=0x001000000005cd14
- (void)_beginNestingPiPInsideSplitView:(id)arg1;	// IMP=0x001000000005ccae
- (void)rootViewControllerDidEndSwapAnimation:(id)arg1;	// IMP=0x001000000005cca8
- (void)rootViewControllerDidStartSwapAnimation:(id)arg1;	// IMP=0x001000000005cca2
- (void)rootViewControllerDidRequestTogglePlayPause:(id)arg1;	// IMP=0x001000000005cc85
- (void)rootViewController:(id)arg1 didMovePictureInPictureToQuadrant:(long long)arg2;	// IMP=0x001000000005cbfc
- (void)rootViewController:(id)arg1 didCancelPictureInPictureForApplication:(id)arg2;	// IMP=0x001000000005ca9a
- (void)rootViewController:(id)arg1 didUpdatePresentationState:(unsigned long long)arg2;	// IMP=0x001000000005ca87
- (void)rootViewControllerDidRequestEnterSplitView:(id)arg1 forApplication:(id)arg2;	// IMP=0x001000000005c953
- (void)rootViewControllerDidToggleStashing:(id)arg1;	// IMP=0x001000000005c8c9
- (void)rootViewController:(id)arg1 didStopPictureInPictureForApplication:(id)arg2;	// IMP=0x001000000005c6b2
- (void)rootViewController:(id)arg1 didRequestEditingControlsDismissalWithStyle:(long long)arg2;	// IMP=0x001000000005c698
- (_Bool)pictureInPictureController:(id)arg1 shouldDenyNewConnection:(id)arg2;	// IMP=0x001000000005c690
- (_Bool)pictureInPictureControllerCanBackgroundStartForFaceTimeVideoCall:(id)arg1;	// IMP=0x001000000005c688
- (_Bool)pictureInPictureController:(id)arg1 shouldAuthorizeBackgroundPIPForAppWithBundleIdentifier:(id)arg2;	// IMP=0x001000000005c45d
- (_Bool)pictureInPictureController:(id)arg1 shouldCancelPictureInPictureForApplication:(id)arg2 whenStartingPictureInPictureForApplication:(id)arg3;	// IMP=0x001000000005c455
- (void)pictureInPictureController:(id)arg1 willDestroyPictureInPictureViewController:(id)arg2;	// IMP=0x001000000005c37a
- (void)pictureInPictureController:(id)arg1 didCreatePictureInPictureViewController:(id)arg2;	// IMP=0x001000000005c2a9
- (void)controlsProvider:(id)arg1 didRequestEditingControlsDismissalWithAnimationStyle:(long long)arg2;	// IMP=0x001000000005c28f
- (void)_runDeferredAutoPipIfRequired;	// IMP=0x001000000005c25c
- (id)_controlsProvider;	// IMP=0x001000000005c209
- (void)_setupSystemGesturesWithManager:(id)arg1;	// IMP=0x001000000005c0d9
- (void)_dismiss;	// IMP=0x001000000005c0c0
- (void)_present;	// IMP=0x001000000005c0a5
- (void)_setAcceptsEventFocus:(_Bool)arg1;	// IMP=0x001000000005be92
- (_Bool)_acceptsEventFocus;	// IMP=0x001000000005be7b
- (CDUnknownBlockType)_machineStateChangeHandler;	// IMP=0x001000000005bb02
- (id)_createStateMachine;	// IMP=0x001000000005a97c
- (void)_handleInterruptionsEnded;	// IMP=0x001000000005a88e
- (void)_handleInterruptionsStarted;	// IMP=0x001000000005a874
- (void)pictureInPictureInterruptionEnded:(id)arg1;	// IMP=0x001000000005a789
- (void)pictureInPictureInterruptionBegan:(id)arg1;	// IMP=0x001000000005a69e
- (void)movePictureInPicture;	// IMP=0x001000000005a596
- (void)expandPictureInPicture;	// IMP=0x001000000005a49d
- (void)didStartSimultaneousPlayback;	// IMP=0x001000000005a33b
- (void)sendPictureInPicturePlaybackCommand:(unsigned long long)arg1;	// IMP=0x001000000005a281
- (void)cancelPictureInPictureWithReason:(id)arg1 sourceBundleID:(id)arg2 sourcePlayerInterface:(long long)arg3;	// IMP=0x001000000005a063
- (void)_dismissEditingControlsWithReason:(id)arg1 animationStyle:(long long)arg2;	// IMP=0x0010000000059eb1
- (void)dismissEditingControlsWithReason:(id)arg1;	// IMP=0x0010000000059e99
- (void)presentEditingControlsWithReason:(id)arg1;	// IMP=0x0010000000059c07
@property(readonly, nonatomic, getter=isEditing) _Bool editing;
@property(readonly, nonatomic) NSSet *activePictureInPictureApplicationBundleIDs;
- (id)_startSplitViewTransactionWithApplication:(id)arg1;	// IMP=0x0010000000059946
- (id)startPIPTransactionForSceneHandleEnteringBackground:(id)arg1;	// IMP=0x0010000000059555
@property(readonly, nonatomic) long long appearanceStyle;
- (void)setHidden:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000059440
@property(nonatomic, getter=isHidden) _Bool hidden;
@property(readonly, nonatomic) PBSPictureInPictureState *currentState;
@property(readonly, nonatomic, getter=isPresenting) _Bool presenting;
- (void)dealloc;	// IMP=0x0010000000059025
- (id)init;	// IMP=0x0010000000058a59

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

