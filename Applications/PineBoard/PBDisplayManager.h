//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSNumber, NSSet, NSString, NSUserDefaults, PBBulletinService, PBCableSignalInfo, PBMultiLatch, PBSDisplayMode;
@protocol BSInvalidatable, OS_dispatch_queue, OS_dispatch_source;

@interface PBDisplayManager : NSObject
{
    _Bool _filteredUsingdPineBoardPolicy;	// 8 = 0x8
    _Bool _canHandleHighBandwidthModes;	// 9 = 0x9
    _Bool _shouldModeSwitchForDynamicRange;	// 10 = 0xa
    _Bool _shouldModeSwitchForFrameRate;	// 11 = 0xb
    _Bool _atmosEnabled;	// 12 = 0xc
    _Bool _detectedPoorCableConnection;	// 13 = 0xd
    _Bool _deemed4KCapable;	// 14 = 0xe
    _Bool _usesDolbyLowLatency;	// 15 = 0xf
    double _baseCableCheckTimeInterval;	// 16 = 0x10
    NSArray *_blackScreenRecoveryDisplayModes;	// 24 = 0x18
    id <BSInvalidatable> _stateCaptureHandle;	// 32 = 0x20
    NSMutableDictionary *_nextEstablishModePerDisplays;	// 40 = 0x28
    NSHashTable *_stateObservers;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_reloadStateSource;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_notifyClientsSource;	// 64 = 0x40
    NSNumber *_displayConnectionToNotify;	// 72 = 0x48
    PBBulletinService *_bulletinService;	// 80 = 0x50
    PBMultiLatch *_wakeProgressLatch;	// 88 = 0x58
    NSObject<OS_dispatch_source> *_displayIDStabilizer;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_displayUpdateQueue;	// 104 = 0x68
    double _localeRefreshRate;	// 112 = 0x70
    NSArray *_sortedDisplayModes;	// 120 = 0x78
    PBSDisplayMode *_currentDisplayMode;	// 128 = 0x80
    PBSDisplayMode *_fallbackDisplayMode;	// 136 = 0x88
    PBSDisplayMode *_userSelectedDisplayMode;	// 144 = 0x90
    NSSet *_seenDisplayIDs;	// 152 = 0x98
    NSString *_currentDisplayID;	// 160 = 0xa0
    long long _displayConnection;	// 168 = 0xa8
    long long _lastCablePollStatus;	// 176 = 0xb0
    NSDictionary *_audioLatencies;	// 184 = 0xb8
    long long _eARCStatus;	// 192 = 0xc0
    double _userPreferredRefreshRate;	// 200 = 0xc8
    NSSet *_encodedPromotedDisplayModes;	// 208 = 0xd0
    NSNumber *_presentedDisplayAssistantKind;	// 216 = 0xd8
    NSUserDefaults *_defaults;	// 224 = 0xe0
    NSDictionary *_memoryStore;	// 232 = 0xe8
    NSString *_currentDisplayIdentifier;	// 240 = 0xf0
    NSObject<OS_dispatch_source> *_cableCheckTimer;	// 248 = 0xf8
    PBCableSignalInfo *_lastCableErrorInfo;	// 256 = 0x100
    NSMutableArray *_matchContentRequestedModes;	// 264 = 0x108
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x0020000000225d7f
+ (unsigned long long)migrateWithContext:(id)arg1 error:(id *)arg2;	// IMP=0x00100000002259e2
+ (unsigned long long)migrateDisplayModes:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000225011
+ (unsigned long long)migratePreferenceKeyToDisplayIdentifier:(id)arg1;	// IMP=0x0010000000224c96
+ (void)reevaluateAtmosCapabilities;	// IMP=0x001000000021dfc6
+ (id)sharedInstanceIfExists;	// IMP=0x001000000021dfb4
+ (id)sharedInstance;	// IMP=0x001000000021df19
+ (id)dependencyDescription;	// IMP=0x001000000021ddca
+ (_Bool)shouldAllowModeSwitchForDynamicFrameRate;	// IMP=0x001000000008b7fe
+ (_Bool)shouldAllowModeSwitchForDynamicRange;	// IMP=0x001000000008b767
+ (void)enumerateMutableDisplayPreferencesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000012f7df
- (void).cxx_destruct;	// IMP=0x00100000002269cd
@property(retain, nonatomic) NSMutableArray *matchContentRequestedModes; // @synthesize matchContentRequestedModes=_matchContentRequestedModes;
@property(copy, nonatomic) PBCableSignalInfo *lastCableErrorInfo; // @synthesize lastCableErrorInfo=_lastCableErrorInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *cableCheckTimer; // @synthesize cableCheckTimer=_cableCheckTimer;
@property(copy, nonatomic) NSString *currentDisplayIdentifier; // @synthesize currentDisplayIdentifier=_currentDisplayIdentifier;
@property(retain, nonatomic) NSDictionary *memoryStore; // @synthesize memoryStore=_memoryStore;
@property(retain, nonatomic) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(readonly, nonatomic) _Bool usesDolbyLowLatency; // @synthesize usesDolbyLowLatency=_usesDolbyLowLatency;
@property(retain, nonatomic) NSNumber *presentedDisplayAssistantKind; // @synthesize presentedDisplayAssistantKind=_presentedDisplayAssistantKind;
@property(nonatomic) _Bool deemed4KCapable; // @synthesize deemed4KCapable=_deemed4KCapable;
@property(copy, nonatomic) NSSet *encodedPromotedDisplayModes; // @synthesize encodedPromotedDisplayModes=_encodedPromotedDisplayModes;
@property(nonatomic) double userPreferredRefreshRate; // @synthesize userPreferredRefreshRate=_userPreferredRefreshRate;
@property(nonatomic) long long eARCStatus; // @synthesize eARCStatus=_eARCStatus;
@property(retain, nonatomic) NSDictionary *audioLatencies; // @synthesize audioLatencies=_audioLatencies;
@property(nonatomic) long long lastCablePollStatus; // @synthesize lastCablePollStatus=_lastCablePollStatus;
@property(nonatomic) _Bool detectedPoorCableConnection; // @synthesize detectedPoorCableConnection=_detectedPoorCableConnection;
@property(nonatomic) long long displayConnection; // @synthesize displayConnection=_displayConnection;
@property(nonatomic) _Bool atmosEnabled; // @synthesize atmosEnabled=_atmosEnabled;
@property(nonatomic) _Bool shouldModeSwitchForFrameRate; // @synthesize shouldModeSwitchForFrameRate=_shouldModeSwitchForFrameRate;
@property(nonatomic) _Bool shouldModeSwitchForDynamicRange; // @synthesize shouldModeSwitchForDynamicRange=_shouldModeSwitchForDynamicRange;
@property(nonatomic) _Bool canHandleHighBandwidthModes; // @synthesize canHandleHighBandwidthModes=_canHandleHighBandwidthModes;
@property(copy, nonatomic) NSString *currentDisplayID; // @synthesize currentDisplayID=_currentDisplayID;
@property(copy, nonatomic) NSSet *seenDisplayIDs; // @synthesize seenDisplayIDs=_seenDisplayIDs;
@property(copy, nonatomic) PBSDisplayMode *userSelectedDisplayMode; // @synthesize userSelectedDisplayMode=_userSelectedDisplayMode;
@property(copy, nonatomic) PBSDisplayMode *fallbackDisplayMode; // @synthesize fallbackDisplayMode=_fallbackDisplayMode;
@property(copy, nonatomic) PBSDisplayMode *currentDisplayMode; // @synthesize currentDisplayMode=_currentDisplayMode;
@property(copy, nonatomic) NSArray *sortedDisplayModes; // @synthesize sortedDisplayModes=_sortedDisplayModes;
@property(nonatomic) double localeRefreshRate; // @synthesize localeRefreshRate=_localeRefreshRate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *displayUpdateQueue; // @synthesize displayUpdateQueue=_displayUpdateQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *displayIDStabilizer; // @synthesize displayIDStabilizer=_displayIDStabilizer;
@property(readonly, nonatomic) PBMultiLatch *wakeProgressLatch; // @synthesize wakeProgressLatch=_wakeProgressLatch;
@property(retain, nonatomic) PBBulletinService *bulletinService; // @synthesize bulletinService=_bulletinService;
@property(retain, nonatomic) NSNumber *displayConnectionToNotify; // @synthesize displayConnectionToNotify=_displayConnectionToNotify;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *notifyClientsSource; // @synthesize notifyClientsSource=_notifyClientsSource;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *reloadStateSource; // @synthesize reloadStateSource=_reloadStateSource;
@property(retain, nonatomic) NSHashTable *stateObservers; // @synthesize stateObservers=_stateObservers;
@property(retain, nonatomic) NSMutableDictionary *nextEstablishModePerDisplays; // @synthesize nextEstablishModePerDisplays=_nextEstablishModePerDisplays;
@property(nonatomic) _Bool filteredUsingdPineBoardPolicy; // @synthesize filteredUsingdPineBoardPolicy=_filteredUsingdPineBoardPolicy;
@property(readonly, nonatomic) id <BSInvalidatable> stateCaptureHandle; // @synthesize stateCaptureHandle=_stateCaptureHandle;
@property(copy, nonatomic) NSArray *blackScreenRecoveryDisplayModes; // @synthesize blackScreenRecoveryDisplayModes=_blackScreenRecoveryDisplayModes;
@property(nonatomic) double baseCableCheckTimeInterval; // @synthesize baseCableCheckTimeInterval=_baseCableCheckTimeInterval;
- (id)stateDumpBuilder;	// IMP=0x0010000000226658
- (void)sceneManager:(id)arg1 didChangeCurrentApplicationFromSceneHandle:(id)arg2 toSceneHandle:(id)arg3;	// IMP=0x001000000022660d
- (void)presentationElementFocusCoordinator:(id)arg1 didUpdateToActiveLayoutLevel:(long long)arg2 fromLevel:(long long)arg3;	// IMP=0x0010000000226277
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0010000000225f9b
- (void)setDisplayStabilizationTimer:(double)arg1;	// IMP=0x0010000000225f5f
- (void)removeStateObserver:(id)arg1;	// IMP=0x0010000000225d12
- (void)addStateObserver:(id)arg1;	// IMP=0x0010000000225ca5
- (void)notifyStateChangeForDisplayConnection:(long long)arg1;	// IMP=0x0010000000225ae5
- (void)displayConnectionUpdated:(long long)arg1;	// IMP=0x0010000000225ab6
- (id)audioLatencyForDisplayMode:(id)arg1;	// IMP=0x0010000000224c78
- (void)setAudioLatency:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000224c65
- (_Bool)didCompleteDisplayAssistantForCurrentDisplay;	// IMP=0x0010000000224c52
- (void)displayAssistantDidCompleteForKind:(id)arg1 fromUserInteraction:(_Bool)arg2;	// IMP=0x0010000000224b27
- (void)removeCableCheckHistory;	// IMP=0x0010000000224b14
- (void)forgetDisplaysForDisplayAssistant;	// IMP=0x0010000000224b01
- (void)displayAssistantDidCompleteForKind:(id)arg1;	// IMP=0x0010000000224aec
- (void)displayAssistantDidStartForKind:(id)arg1;	// IMP=0x0010000000224ad9
- (void)presentDisplayAssistantWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000224940
- (void)handleRegionChangeWithNewCountryCode:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000022492d
- (void)wakeDisplayWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000224913
- (void)sleepDisplayWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000224819
- (void)completeDisplayTransition:(long long)arg1 error:(id)arg2 withReply:(CDUnknownBlockType)arg3;	// IMP=0x00100000002244d9
- (void)_resetSettingsForCurrentDisplay;	// IMP=0x0010000000224314
- (void)_recalculateDefaultDisplayMode:(CDUnknownBlockType)arg1;	// IMP=0x001000000022396d
- (id)_recalculatedBlackScreenRecoveryDisplayModes;	// IMP=0x0010000000223475
- (id)_recalculatedDisplayModesFromCoreAnimationModes:(id)arg1;	// IMP=0x0010000000222eb4
- (void)_applyAudioLatencyIfNeeded;	// IMP=0x0010000000222c00
- (void)_completeReloadingState;	// IMP=0x0010000000222886
- (void)reloadState;	// IMP=0x001000000022199d
- (void)updateDisplayManagerWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000002208cf
- (void)updateCurrentCADisplayFromDisplayMode:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000021ff1e
- (void)enableAtmos:(_Bool)arg1;	// IMP=0x001000000021ff0b
- (void)enableModeSwitchingForFrameRate:(_Bool)arg1;	// IMP=0x001000000021fef8
- (void)enableModeSwitchingForDynamicRange:(_Bool)arg1;	// IMP=0x001000000021fee5
- (id)findMatchingCAMode:(id)arg1;	// IMP=0x001000000021fbdd
- (id)findMatchingLocaleMode:(id)arg1 enforceVirtualCheck:(_Bool)arg2;	// IMP=0x001000000021fbbd
- (id)findFirstMode:(CDUnknownBlockType)arg1;	// IMP=0x001000000021fb9f
- (id)filterModes:(CDUnknownBlockType)arg1;	// IMP=0x001000000021fb81
- (void)fetchCurrentDisplayStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000021fb1c
@property(readonly, nonatomic) NSDictionary *serialisedState;
@property(readonly, nonatomic) _Bool isPresentingDisplayAssistant;
- (_Bool)isAdvertisingHDMI2;	// IMP=0x001000000021f4d4
- (id)promotedVirtualDisplayModes;	// IMP=0x001000000021f2de
- (void)dealloc;	// IMP=0x001000000021e8c5
- (id)_init;	// IMP=0x001000000021e08f
- (id)init;	// IMP=0x001000000021e032
- (double)recalculatedCurrentLocaleRefreshRate;	// IMP=0x001000000005ff93
- (void)updateDisplayForNewRegionWithCountryCode:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005fcb8
- (_Bool)_isModeSwitchInProgress;	// IMP=0x001000000008d4fd
- (void)_notifyDisplayModeChange:(_Bool)arg1;	// IMP=0x001000000008d343
- (void)_notifyDisplayModeChangeDidFinish;	// IMP=0x001000000008d32e
- (void)_considerDisplayModeSwitchFinished:(id)arg1;	// IMP=0x001000000008d2e5
- (long long)reportingValueForMatchFrameRate;	// IMP=0x001000000008d2cb
- (long long)reportingValueForMatchDynamicRange;	// IMP=0x001000000008d2b1
- (id)_bestSDRDisplayMode;	// IMP=0x001000000008cfa0
- (_Bool)_shouldModeSwitchForBundleIdentifier:(id)arg1;	// IMP=0x001000000008cd78
- (void)_updateDisplayManagerWithDisplayMode:(id)arg1;	// IMP=0x001000000008cb73
- (id)_findDisplayModeFromPredicate:(id)arg1;	// IMP=0x001000000008c852
- (id)_bestDisplayModeForDynamicRange:(long long)arg1 frameRate:(double)arg2;	// IMP=0x001000000008c6c5
- (id)_fallbackPredicatesForDynamicRange:(long long)arg1 frameRates:(id)arg2;	// IMP=0x001000000008c44b
- (id)_displayModePredicatesForDynamicRange:(long long)arg1 frameRate:(double)arg2;	// IMP=0x001000000008c12e
- (id)preferredDisplayModeForBundleIdentifier:(id)arg1;	// IMP=0x001000000008bdf3
- (void)performModeSwitchForDisplayConfigurationRequest:(id)arg1;	// IMP=0x001000000008bab0
- (void)performModeSwitchForBundleIdentifierIfNeeded:(id)arg1;	// IMP=0x001000000008b93c
- (_Bool)isModeSwitchNeededForTransitionToBundleIdentifier:(id)arg1;	// IMP=0x001000000008b895
- (void)removeNativeAndPerformanceObservers;	// IMP=0x001000000008b713
- (void)addNativeAndPerformanceObservers;	// IMP=0x001000000008b54e
- (void)runSleepWakeModeSetCycleToMode:(id)arg1 oldMode:(id)arg2 forDisplayIdentifier:(id)arg3 replyBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000001035a8
- (void)_saveDisplayMode:(id)arg1 forDisplayID:(id)arg2;	// IMP=0x0010000000132184
- (id)_displayModeForDisplayID:(id)arg1;	// IMP=0x0010000000132096
- (void)removeDisplayModeForKey:(id)arg1 persisted:(_Bool)arg2;	// IMP=0x0010000000131fed
- (id)_readDisplayModeForKey:(id)arg1 persisted:(_Bool)arg2;	// IMP=0x0010000000131e90
- (void)_saveDisplayMode:(id)arg1 forKey:(id)arg2 persisted:(_Bool)arg3;	// IMP=0x0010000000131da1
- (void)_saveCurrentResolutionsPreferences:(id)arg1 toPersistentStore:(_Bool)arg2 forDisplayID:(id)arg3;	// IMP=0x0010000000131aee
- (void)_saveCurrentResolutionsPreferences:(id)arg1 toPersistentStore:(_Bool)arg2;	// IMP=0x0010000000131a78
- (id)_currentResolutionsPreferencesFromPersistentStore:(_Bool)arg1 forDisplayID:(id)arg2;	// IMP=0x0010000000131757
- (id)_currentResolutionsPreferencesFromPersistentStore:(_Bool)arg1;	// IMP=0x00100000001316f4
- (id)_locateLikelyOriginalDisplayPrefsForNewIdentifier:(id)arg1 fromSet:(id)arg2;	// IMP=0x0010000000131514
- (double)readCableAlertIntervalOverride;	// IMP=0x00100000001314bd
- (int)readCableScoreOverride;	// IMP=0x0010000000131443
- (double)readCableErrorPollingIntervalOverride;	// IMP=0x00100000001313ec
- (double)readCableHistoryWindowOverride;	// IMP=0x0010000000131395
- (_Bool)_debugAlwaysSaveModeEnabled;	// IMP=0x001000000013134a
- (_Bool)_shouldPreferDolbyVisionLowLatency;	// IMP=0x00100000001312ff
- (void)resetCableCheckCumulativeTime;	// IMP=0x00100000001312ba
- (double)readCableCheckCumulativeTime;	// IMP=0x0010000000131263
- (void)saveCableCheckCumulativeTime:(double)arg1;	// IMP=0x001000000013120c
- (_Bool)readDetectedPoorCableConnection;	// IMP=0x00100000001311c1
- (void)saveDetectedPoorCableConnection:(_Bool)arg1;	// IMP=0x001000000013116f
- (void)removeLastCableErrorInfo;	// IMP=0x001000000013112a
- (id)readLastCableErrorInfo;	// IMP=0x0010000000131006
- (void)saveLastCableErrorInfo:(id)arg1;	// IMP=0x0010000000130eea
- (id)readAudioLatencies;	// IMP=0x0010000000130e33
- (void)adjustAtmos:(id)arg1;	// IMP=0x0010000000130c75
- (void)removeAudioLatencies;	// IMP=0x0010000000130bc1
- (void)saveNewAudioLatency:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000130a87
- (id)readEncodedPromotedDisplayModes;	// IMP=0x0010000000130990
- (void)removePromotedDisplayModes;	// IMP=0x00100000001308dc
- (void)saveNewPromotedDisplayMode:(id)arg1;	// IMP=0x00100000001306d9
- (void)removeAllCompleteDisplayAssistants;	// IMP=0x0010000000130642
- (_Bool)readDidCompleteDisplayAssistant;	// IMP=0x00100000001305a5
- (void)saveDidCompleteDisplayAssistant:(_Bool)arg1;	// IMP=0x00100000001304eb
- (double)readUserPreferredRefreshRate;	// IMP=0x0010000000130442
- (void)saveUserPreferredRefreshRate:(double)arg1;	// IMP=0x00100000001303c1
- (_Bool)readAtmosEnabled;	// IMP=0x0010000000130326
- (_Bool)readShouldModeSwitchForFrameRate;	// IMP=0x0010000000130289
- (void)saveAtmosEnabled:(_Bool)arg1;	// IMP=0x00100000001301cf
- (void)saveShouldModeSwitchForFrameRate:(_Bool)arg1;	// IMP=0x0010000000130115
- (_Bool)readShouldModeSwitchForDynamicRange;	// IMP=0x0010000000130078
- (void)saveShouldModeSwitchForDynamicRange:(_Bool)arg1;	// IMP=0x001000000012ffbe
- (_Bool)readCanDoHighBandwidth;	// IMP=0x001000000012ff21
- (void)saveCanHandleHighBandwidthModes:(_Bool)arg1;	// IMP=0x001000000012fe67
- (id)readSeenDisplayIDs;	// IMP=0x001000000012fd3b
- (void)saveCurrentDisplayID:(id)arg1;	// IMP=0x001000000012fc4a
- (void)removeUserSelectedDisplayMode;	// IMP=0x001000000012fbc2
- (id)readUserSelectedDisplayMode;	// IMP=0x001000000012faf7
- (void)saveUserSelectedDisplayMode:(id)arg1;	// IMP=0x001000000012fa25
- (double)_historyWindowInterval;	// IMP=0x00100000001475a5
- (double)_pollingInterval;	// IMP=0x0010000000147511
- (void)_stopBackgroundMonitoring;	// IMP=0x00100000001473e0
- (void)_startBackgroundMonitoringAndIgnoreFirstPoll:(_Bool)arg1;	// IMP=0x00100000001473da
- (void)_resetTimer;	// IMP=0x00100000001473ad
- (void)registerModeSwitch;	// IMP=0x001000000014739a
- (void)resetCableInfoHistory;	// IMP=0x00100000001472a9
- (void)_processCurrentCableInfo;	// IMP=0x00100000001472a3
- (void)stopMonitoringCable;	// IMP=0x001000000014729d
- (void)startMonitoringCable;	// IMP=0x0010000000147297

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

