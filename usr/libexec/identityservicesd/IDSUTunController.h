//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDeviceConnectionInfo, IDSLinkManager, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface IDSUTunController : NSObject
{
    struct SimpleNSStringToObjectTable _deviceConnectionInfoTableByCbuuid;	// 8 = 0x8
    struct _opaque_pthread_mutex_t _deviceConnectionInfoTableByCbuuidLock;	// 32 = 0x20
    IDSLinkManager *_linkManager;	// 96 = 0x60
    _Bool _logPackets;	// 104 = 0x68
    _Bool _vifShouldReadMultiple;	// 105 = 0x69
    unsigned int _vifMaxPendingPackets;	// 108 = 0x6c
    _Bool _vifUseChannel;	// 112 = 0x70
    _Bool _hasFixedDestination;	// 113 = 0x71
    _Bool _encryptionEnabled;	// 114 = 0x72
    _Bool _controlChannelEncryptionDisabled;	// 115 = 0x73
    struct os_unfair_lock_s _controlChannelVersionCacheLock;	// 116 = 0x74
    NSMutableDictionary *_controlChannelVersionCache;	// 120 = 0x78
    _Bool _isSimulateResetLoopTest;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_ipsecQueue;	// 136 = 0x88
    _Bool _useBTDatagramPipe;	// 144 = 0x90
    _Bool _ignoreUTunChannelWriteSignal;	// 145 = 0x91
    IDSDeviceConnectionInfo *_testDeviceConnectionInfo;	// 152 = 0x98
}

+ (id)sharedInstance;	// IMP=0x0020000000370ae7
- (void).cxx_destruct;	// IMP=0x0020000000392b39
@property(readonly, nonatomic) IDSLinkManager *linkManager; // @synthesize linkManager=_linkManager;
- (void)onTransportThread_StopBTDatagramLinkForDefaultPairedDevice;	// IMP=0x0010000000392b05
- (unsigned long long)onTransportThread_SendWithConnectionContext:(id)arg1 packetBuffer:(CDStruct_a8d8a807 *)arg2;	// IMP=0x00100000003929d3
- (void)clearStats;	// IMP=0x001000000039281a
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x00100000003923dd
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x00100000003923d7
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x00000000003923c5
- (void)link:(id)arg1 hasSpaceAvailable:(_Bool)arg2 deviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000003923bf
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x0010000000392132
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x001000000039212c
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_a8d8a807 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x0010000000391e0b
- (void)sendSuspendOTRNegotiationMessage:(id)arg1;	// IMP=0x0010000000391c6f
- (void)sendOTRNegotiationMessage:(id)arg1 negotiationCount:(unsigned int)arg2 negotiationData:(id)arg3;	// IMP=0x0010000000391a4c
- (void)setLinkPreferences:(id)arg1;	// IMP=0x0010000000391930
- (void)setPreferInfraWiFi:(_Bool)arg1;	// IMP=0x00100000003917c8
- (unsigned long long)totalPacketsReceivedForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003914b2
- (unsigned long long)totalPacketsSentForDevice:(id)arg1 services:(id)arg2;	// IMP=0x001000000039119c
- (id)perServiceDataReceivedForDevice:(id)arg1 services:(id)arg2;	// IMP=0x0010000000390c47
- (id)perServiceDataSentForDevice:(id)arg1 services:(id)arg2;	// IMP=0x00100000003906f2
- (id)perServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;	// IMP=0x0010000000390476
- (id)onTransportThread_PerServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;	// IMP=0x001000000038fe2f
- (void)clearPluginCacheForSession:(id)arg1;	// IMP=0x001000000038fca3
- (id)copyLinkStatsDict;	// IMP=0x001000000038fb0a
- (void)deletePairedDevice:(id)arg1;	// IMP=0x001000000038f97e
- (void)connectPairedDevice:(id)arg1;	// IMP=0x001000000038f7f2
- (void)addPairedDevice:(id)arg1 shouldPairDirectlyOverIPsec:(_Bool)arg2;	// IMP=0x001000000038f61e
- (void)addPairedDevice:(id)arg1;	// IMP=0x001000000038f60a
- (void)tearDownEncryptionForDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;	// IMP=0x001000000038f47e
- (void)obliterateConnectionInfoForCBUUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 completionQueue:(id)arg3;	// IMP=0x001000000038efd4
- (void)obliterateConnectionInfoWithCompletionBlock:(CDUnknownBlockType)arg1 completionQueue:(id)arg2;	// IMP=0x001000000038efb2
- (void)obliterateConnectionInfoForCBUUID:(id)arg1;	// IMP=0x001000000038ee92
- (void)startLocalSetup;	// IMP=0x001000000038ee31
- (void)onTransportThread_requestChildConnectionIDForLinkID:(BOOL)arg1 sessionID:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;	// IMP=0x001000000038ee1b
- (void)onTransportThread_setClientUniquePID:(unsigned long long)arg1 sessionID:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;	// IMP=0x001000000038ee05
- (void)onTransportThread_reportLinkEventForSessionID:(id)arg1 eventName:(id)arg2 linkID:(unsigned char)arg3;	// IMP=0x001000000038edef
- (void)onTransportThread_sendConnectedLinkInfoToAVCForSessionID:(id)arg1;	// IMP=0x001000000038edd9
- (void)onTransportThread_updateParticipantType:(unsigned short)arg1 forSessionID:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 sessionStateCounter:(unsigned int)arg5;	// IMP=0x001000000038edc3
- (unsigned long long)onTransportThread_createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2 sessionID:(id)arg3 relayGroupID:(id)arg4 relaySessionID:(id)arg5;	// IMP=0x001000000038edad
- (unsigned long long)onTransportThread_participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2 sessionID:(id)arg3 relayGroupID:(id)arg4 relaySessionID:(id)arg5;	// IMP=0x001000000038ed97
- (void)onTransportThread_registerPluginForGroup:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 options:(id)arg4;	// IMP=0x001000000038ed81
- (void)onTransportThread_setUPlusOneModeForSessionID:(id)arg1 isUPlusOneEnabled:(_Bool)arg2;	// IMP=0x001000000038ed6b
- (void)onTransportThread_updateSessionURIToParticipantIDs:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 sessionInfo:(id)arg4;	// IMP=0x001000000038ed55
- (void)onTransportThread_updateSessionParticipants:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 participants:(id)arg4;	// IMP=0x001000000038ed3f
- (void)onTransportThread_getSessionInfo:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 options:(id)arg4;	// IMP=0x001000000038ed29
- (void)onTransportThread_setRemoteDeviceVersion:(id)arg1 version:(unsigned int)arg2;	// IMP=0x001000000038ed13
- (void)onTransportThread_removeParticipantIDsWithSessionID:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 participantIDs:(id)arg4 sessionStateCounter:(unsigned int)arg5;	// IMP=0x001000000038ecfd
- (void)onTransportThread_manageDesignatedDestinationsWithSessionID:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 destinations:(id)arg4 withType:(unsigned short)arg5 sessionStateCounter:(unsigned int)arg6;	// IMP=0x001000000038ece7
- (unsigned long long)onTransportThread_getLinkType:(id)arg1;	// IMP=0x001000000038ecd1
- (void)onTransportThread_sendStatsRequestWithOptions:(id)arg1 options:(id)arg2;	// IMP=0x001000000038ecbb
- (void)onTransportThread_sendStatsRequest:(id)arg1 options:(id)arg2;	// IMP=0x001000000038eca5
- (void)onTransportThread_flushLinkProbingStatus:(id)arg1 options:(id)arg2;	// IMP=0x001000000038ec8f
- (void)onTransportThread_queryLinkProbingStatus:(id)arg1 options:(id)arg2;	// IMP=0x001000000038ec79
- (void)onTransportThread_stopLinkProbing:(id)arg1 options:(id)arg2;	// IMP=0x001000000038ec63
- (void)onTransportThread_startLinkProbing:(id)arg1 options:(id)arg2;	// IMP=0x001000000038ec4d
- (void)onTransportThread_CurrentCellularSignalStrength:(id)arg1 signalRaw:(int *)arg2 signalStrength:(int *)arg3 signalGrade:(int *)arg4;	// IMP=0x001000000038ebe5
- (void)onTransportThread_receiveJoinNotificationFromAParticipant:(id)arg1;	// IMP=0x001000000038ebcf
- (void)onTransportThread_setWiFiAssistState:(id)arg1 isWiFiAssistEnabled:(_Bool)arg2;	// IMP=0x001000000038ebb9
- (void)onTransportThread_StopKeepAlive:(id)arg1 linkIDs:(id)arg2;	// IMP=0x001000000038eba3
- (void)onTransportThread_UpdateProtocolQualityOfService:(id)arg1 linkID:(BOOL)arg2 isGood:(_Bool)arg3;	// IMP=0x001000000038eb8d
- (void)onTransportThread_DropIPPackets:(id)arg1 linkID:(BOOL)arg2 payloadArray:(id)arg3;	// IMP=0x001000000038eb77
- (void)onTransportThread_SetPacketNotificationFilter:(id)arg1 linkID:(BOOL)arg2 uniqueTag:(unsigned int)arg3 isEnabled:(_Bool)arg4;	// IMP=0x001000000038eb61
- (void)onTransportThread_SetDefaultUnderlyingLink:(id)arg1 linkID:(BOOL)arg2;	// IMP=0x001000000038eb4b
- (void)onTransportThread_requestMaterialsForSession:(id)arg1 participantIDs:(id)arg2 materialType:(int)arg3;	// IMP=0x001000000038eb35
- (void)onTransportThread_setServerDesiredMaterialsForSession:(id)arg1 materials:(id)arg2 signer:(CDUnknownBlockType)arg3;	// IMP=0x001000000038eb1f
- (void)onTransportThread_SendKeyMaterialMessage:(id)arg1 relayGroupID:(id)arg2 keyMaterialMessageData:(id)arg3 destinationURIs:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000038eb09
- (void)onTransportThread_SendSKEData:(id)arg1 skeData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000038eaf3
- (void)getLinkInformationForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000038e952
- (void)handleAllocateRequestFailureForDevice:(id)arg1 requestID:(id)arg2 errorCode:(int)arg3;	// IMP=0x001000000038e872
- (void)setSharedSessionHadJoined:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x001000000038e7c1
- (void)setAllowP2PforIDSSession:(id)arg1 isEnabled:(_Bool)arg2;	// IMP=0x001000000038e710
- (void)setIsReliableUnicastSession:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x001000000038e65f
- (void)setTimeBase:(id)arg1 forIDSSession:(id)arg2;	// IMP=0x001000000038e58e
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x001000000038e4dd
- (void)setAcceptedRelaySession:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;	// IMP=0x001000000038e3d9
- (void)disconnectGlobalLinkForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000038e23d
- (void)connectGlobalLinkForDevice:(id)arg1 sessionInfo:(id)arg2 connectReadyHandler:(CDUnknownBlockType)arg3 withLocalInterfacePreference:(int)arg4;	// IMP=0x001000000038e089
- (void)startGlobalLinkForDevice:(id)arg1;	// IMP=0x001000000038dfdf
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBufferArray:(struct **)arg2 arraySize:(int)arg3;	// IMP=0x001000000038df43
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBuffer:(CDStruct_a8d8a807 *)arg2;	// IMP=0x001000000038df18
- (void)stopGlobalLinkForDevice:(id)arg1;	// IMP=0x001000000038dcd9
- (void)startConnectionForDevice:(id)arg1 isInitiator:(_Bool)arg2 remotePartyID:(id)arg3 useStunMICheck:(_Bool)arg4;	// IMP=0x001000000038dbe3
- (void)processRemoteConnectionDataForDevice:(id)arg1 remoteConnectionData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000038dad8
- (void)createConnectionDataForDevice:(id)arg1 localPartyID:(id)arg2 dataReadyHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000038d9cd
- (void)stopUDPGlobalLinkForDevice:(id)arg1;	// IMP=0x001000000038d78e
- (void)startUDPGlobalLinkForDevice:(id)arg1;	// IMP=0x001000000038d6e4
- (void)releasePortIfNecessary:(struct IDSPortMap *)arg1 port:(unsigned short)arg2;	// IMP=0x001000000038d619
- (void)resumeSocketWithOptions:(id)arg1 shouldLogCall:(_Bool)arg2;	// IMP=0x001000000038d0fb
- (void)suspendSocketWithOptions:(id)arg1;	// IMP=0x001000000038cdb5
- (void)checkSuspendTrafficForDevice:(id)arg1 wait:(_Bool)arg2;	// IMP=0x001000000038caf4
- (void)doCheckSuspendTrafficForDevice:(id)arg1;	// IMP=0x001000000038c693
- (void)closeSocketWithOptions:(id)arg1;	// IMP=0x001000000038c67c
- (void)closeSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000038beb9
- (void)cleanupSocketsForClient:(id)arg1;	// IMP=0x001000000038b335
- (void)openSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000389f65
- (void)prepareDefaultPairedConnectionInfoWithDeviceUniqueID:(id)arg1 shouldUseIPsecLink:(_Bool)arg2;	// IMP=0x0010000000389aba
- (id)_prepareConnectionInfoWithCBUUID:(id)arg1 deviceUniqueID:(id)arg2 shouldUseIPsecLink:(_Bool)arg3 identityPair:(id)arg4 remoteDeviceEncryptionInfo:(id)arg5;	// IMP=0x0010000000389994
- (id)defaultPairedDeviceIdentityPair;	// IMP=0x001000000038998c
- (void)closeDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;	// IMP=0x001000000038955b
- (void)setupDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;	// IMP=0x00100000003874dd
- (id)controlChannelVersionForCbuuid:(id)arg1;	// IMP=0x0010000000387476
- (void)receiveControlChannelMessage:(id)arg1 fromCbuuid:(id)arg2 deviceUniqueID:(id)arg3;	// IMP=0x0010000000381293
- (id)stringComponentsForServiceConnectorService:(id)arg1;	// IMP=0x0010000000381277
- (void)startCompressionForConnection:(id)arg1 deviceConnectionInfo:(id)arg2;	// IMP=0x0010000000380a4d
- (int)processCompressionResponse:(id)arg1 fromDeviceConnectionInfo:(id)arg2;	// IMP=0x001000000037fbd4
- (int)processCompressionRequest:(id)arg1 fromDeviceConnectionInfo:(id)arg2;	// IMP=0x001000000037ea86
- (void)internalOpenSocketWithDestination:(id)arg1 localSA:(id)arg2 remoteSA:(id)arg3 protocol:(int)arg4 trafficClass:(int)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000037e31f
- (_Bool)handleIncomingPacket:(CDStruct_a8d8a807 *)arg1 fromDeviceToken:(id)arg2;	// IMP=0x001000000037c0c8
- (void)resetAllConnectionsForDevice:(id)arg1;	// IMP=0x001000000037bddb
- (void)removeConnection:(id)arg1 fromDeviceConnectionInfo:(id)arg2 removeCode:(long long)arg3 removeReason:(id)arg4;	// IMP=0x001000000037b79c
- (id)initWithName:(id)arg1 address:(id)arg2 andTestTransport:(id)arg3;	// IMP=0x001000000037b78e
- (void)resetUTunTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x001000000037b4e1
- (void)resetIPsecTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x001000000037b39d
- (void)resetTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;	// IMP=0x001000000037b313
- (void)startControlChannelWithDevice:(id)arg1 endpoint:(id)arg2;	// IMP=0x001000000037a524
- (void)didConnectControlChannelForDeviceConnectionInfo:(id)arg1 connection:(id)arg2 error:(id)arg3;	// IMP=0x0010000000379669
- (void)prepareControlChannelForDeviceConnectionInfo:(id)arg1 genericConnection:(id)arg2;	// IMP=0x0010000000379521
- (void)internalStartConnectionWithEndpoint:(id)arg1 service:(const char *)arg2 parameters:(id)arg3 serviceConnector:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000379131
- (id)init;	// IMP=0x0010000000378d3e
- (id)setupNewDeviceConnectionInfoForCbuuid:(id)arg1 deviceUniqueID:(id)arg2 identityPair:(id)arg3 remoteDeviceEncryptionInfo:(id)arg4 shouldUseIPsecLink:(_Bool)arg5;	// IMP=0x0010000000377dda
- (_Bool)setupIPsecLinkForDeviceConnectionInfo:(id)arg1;	// IMP=0x0010000000377ba0
- (void)startDataChannelWithDevice:(id)arg1 genericConnection:(id)arg2 serviceConnectorService:(id)arg3 endpoint:(id)arg4;	// IMP=0x0010000000372cea
- (_Bool)setupUTunForDeviceConnectionInfo:(id)arg1;	// IMP=0x0010000000372810
- (unsigned char)handleUtunChannelWrite:(id)arg1 source:(struct sockaddr *)arg2 destination:(struct sockaddr *)arg3 upperProtocol:(unsigned char)arg4 bytes:(const void *)arg5 bytesLen:(unsigned long long)arg6;	// IMP=0x0010000000372805
- (void)handleUtunChannelRead:(id)arg1 limit:(unsigned int)arg2;	// IMP=0x00100000003727ff
- (void)handleIPPayload:(const void *)arg1 bytesLength:(unsigned long long)arg2 source:(struct sockaddr *)arg3 destination:(struct sockaddr *)arg4 upperProtocol:(unsigned char)arg5 forDeviceConnectionInfo:(id)arg6 flush:(_Bool)arg7 callerShouldStop:(_Bool *)arg8;	// IMP=0x00100000003727f9
- (void)_getStallDetectorForConnection:(id)arg1 deviceConnecionInfo:(id)arg2;	// IMP=0x00100000003723cd
- (void)_reloadSettings;	// IMP=0x00100000003723c7
- (void)reloadSettings;	// IMP=0x0010000000370e59

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

