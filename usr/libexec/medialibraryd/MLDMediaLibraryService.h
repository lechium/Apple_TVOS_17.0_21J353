//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ML3DatabaseImportManager, ML3MediaLibraryWriter, MLDCacheDeleteController, MLDDatabaseValidationController, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString, NSTimer;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface MLDMediaLibraryService : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_spotlightIndexQueue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_writerBeginTransactionQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_writerUpdateQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 40 = 0x28
    struct os_unfair_lock_s _xpcLock;	// 48 = 0x30
    NSMutableDictionary *_xpcListeners;	// 56 = 0x38
    NSMutableDictionary *_xpcClients;	// 64 = 0x40
    ML3MediaLibraryWriter *_writer;	// 72 = 0x48
    ML3DatabaseImportManager *_importManager;	// 80 = 0x50
    MLDCacheDeleteController *_cacheDeleteController;	// 88 = 0x58
    MLDDatabaseValidationController *_validationController;	// 96 = 0x60
    NSOperationQueue *_maintenanceTasksOperationQueue;	// 104 = 0x68
    NSOperationQueue *_databaseRecoveryOperationQueue;	// 112 = 0x70
    NSMutableArray *_databaseRecoveryCompletionHandlers;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_signalDispatchSource;	// 128 = 0x80
    NSObject<OS_dispatch_source> *_spotlightIndexCoalescingTimer;	// 136 = 0x88
    NSTimer *_idleTimer;	// 144 = 0x90
    NSMutableDictionary *_mediaLibraries;	// 152 = 0x98
    NSString *_deviceSharedLibraryPath;	// 160 = 0xa0
    NSMutableDictionary *_transactionInfoForID;	// 168 = 0xa8
    unsigned long long _stateHandle;	// 176 = 0xb0
    _Bool _databaseLocked;	// 184 = 0xb8
    long long _currentLockReason;	// 192 = 0xc0
}

+ (id)sharedInstance;	// IMP=0x0020000000010248
- (void).cxx_destruct;	// IMP=0x002000000000c73c
- (void)faultForQuery:(id)arg1 fromClientBundleID:(id)arg2 onTrustError:(id)arg3;	// IMP=0x001000000000c3ed
- (void)_updateSiriIndexMetadataForLibraryAtPath:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c2be
- (_Bool)_isMediaPath:(id)arg1 selector:(SEL)arg2 resolvedPath:(id *)arg3;	// IMP=0x001000000000be81
- (_Bool)_platformSupportsSiriIndexing;	// IMP=0x001000000000be79
- (_Bool)_platformSupportsSpotlightIndexing;	// IMP=0x001000000000be71
- (void)_unregisterServiceOriginatedTransactionWithConnection:(id)arg1;	// IMP=0x001000000000bdc9
- (void)_validateDatabaseAtPath:(id)arg1 forConnection:(id)arg2 byTruncatingFirst:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x001000000000bb85
- (void)_validateDatabaseAtPath:(id)arg1 byTruncatingFirst:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000bb6b
- (_Bool)_validateTransactionIdentifier:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000000b9a2
- (void)_unregisterTransactionInfoForIdentifier:(id)arg1;	// IMP=0x001000000000b90c
- (void)_registerTransactionInfo:(id)arg1 forIdentitifer:(id)arg2;	// IMP=0x001000000000b838
- (void)_performMaintenanceOnDatabaseAtPath:(id)arg1 withActivity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000b677
- (void)_stopIdleTimer;	// IMP=0x001000000000b5c9
- (void)_resetIdleTimer;	// IMP=0x001000000000b4f5
- (void)_idleTimerFired:(id)arg1;	// IMP=0x001000000000b3cd
- (void)_startIdleTimer;	// IMP=0x001000000000b271
- (void)_tearDownLibraryDidChangeNotifications;	// IMP=0x001000000000b18d
- (void)_updateSpotlightIndexForNotification:(id)arg1;	// IMP=0x001000000000b17b
- (void)_updateSiriIndexForNotification:(id)arg1;	// IMP=0x001000000000b0a6
- (void)_handleLibraryDidChangeNotification:(id)arg1;	// IMP=0x001000000000b035
- (void)_registerForLibraryDidChangeNotifications;	// IMP=0x001000000000af43
- (void)_writeDiagnosticToDisk:(id)arg1;	// IMP=0x001000000000ad57
- (void)_performDiagnosticWithReason:(id)arg1;	// IMP=0x001000000000abdf
- (void)_handleDebugSignal;	// IMP=0x001000000000ab5c
- (void)_tearDownSignalHandler;	// IMP=0x001000000000ab4b
- (void)_setupSignalHandler;	// IMP=0x001000000000aa41
- (id)_clientForConnection:(id)arg1;	// IMP=0x001000000000a916
- (id)_currentXPCClient;	// IMP=0x001000000000a897
- (void)_handleXPCDisconnect:(id)arg1;	// IMP=0x001000000000a7af
- (id)_deviceSharedLibraryPath;	// IMP=0x001000000000a753
- (id)_allMediaLibraries;	// IMP=0x001000000000a69a
- (id)_mediaLibraryForPath:(id)arg1;	// IMP=0x001000000000a504
- (long long)_MLDSupportedServiceForXPCListener:(id)arg1;	// IMP=0x001000000000a478
- (id)_XPCListenerForService:(long long)arg1;	// IMP=0x001000000000a3b3
- (void)_setupCacheDeleteController;	// IMP=0x001000000000a33e
- (void)_setupActivityHandlers;	// IMP=0x001000000000a26a
- (void);	// IMP=0x001000000000a264
- (void)_logPrivacyAccessWithTransactionIdentifier:(id)arg1;	// IMP=0x001000000000a1d7
- (void)_reconnectLibraries:(id)arg1;	// IMP=0x0010000000009f1e
- (void)_disconnectLibraries:(id)arg1;	// IMP=0x0010000000009c1b
@property(nonatomic) long long currentLockReason; // @synthesize currentLockReason=_currentLockReason;
@property(nonatomic, getter=isDatabaseLocked) _Bool databaseLocked; // @synthesize databaseLocked=_databaseLocked;
- (void)start;	// IMP=0x001000000000996d
- (void)collectDiagnostic:(id)arg1;	// IMP=0x001000000000988b
- (void)mediaLibraryWriter:(id)arg1 terminatedTransaction:(id)arg2 withError:(id)arg3;	// IMP=0x001000000000977c
- (void)library:(id)arg1 didRollbackDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x0010000000009767
- (void)library:(id)arg1 didCommitDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x0010000000009752
- (void)library:(id)arg1 didBeginDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x0010000000009678
- (_Bool)_shouldAcceptConnectionForMediaLibraryService:(id)arg1;	// IMP=0x0010000000009304
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00100000000090d3
- (void)getClientImportServiceListenerEndpointWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000008f78
- (void)getMediaLibraryResourcesServiceListenerEndpointWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000008e1d
- (void)performMaintenanceTasksForDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000008d23
- (void)updateSiriIndexMetadataForAllLibrariesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000008893
- (void)updateSpotlightIndexMetadataForItemsWithIdentifiers:(id)arg1 bundleID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000081e8
- (void)updateSpotlightIndexForBundleID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000081ce
- (void)getLanguageResourcesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000007ff7
- (void)unlockDatabaseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000007f6a
- (void)lockDatabaseForReason:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000007e5c
- (void)cancelImportOperation:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000007d3f
- (void)performImport:(id)arg1 fromSource:(unsigned long long)arg2 withUUID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000007a0f
- (void)setOptions:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000078d4
- (void)performDatabaseOperation:(unsigned long long)arg1 withAttributes:(id)arg2 options:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000072a7
- (_Bool)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000000716f
- (void)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000000700c
- (void)executeQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 withCompletionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000006ca7
- (void)executeUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000069e3
- (id)beginTransactionForDatabaseWithContext:(id)arg1 error:(id *)arg2;	// IMP=0x001000000000682c
- (void)beginTransactionForDatabaseWithContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000061d6
- (void)recreateDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000005f87
- (void)performDiagnosticWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000005dce
- (void)checkIntegrityOfDatabaseAtPath:(id)arg1 repairFaults:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000005ab3
- (void)attemptDatabaseFileRecoveryAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000057ff
- (void)validateDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000563b
- (void)dealloc;	// IMP=0x0010000000005595
- (id)_stateDump;	// IMP=0x001000000000551b
- (id)_init;	// IMP=0x0010000000005244
- (id)init;	// IMP=0x0010000000005202

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

