//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CBController, CNContact, CNContactStore, CUSystemMonitor, MISSING_TYPE, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableString, NSNumber, NSSet, NSString, SDAirDropServer, SDDeferrableOperation, SDSmartCoverMonitor, SFPowerSource, _TtC16DaemoniOSLibrary27SDAirDropContactHashManager;
@protocol OS_dispatch_source;

@interface SDStatusMonitor : NSObject
{
    _Bool _activateStarted;	// 8 = 0x8
    NSNumber *_airDropAllowed;	// 16 = 0x10
    int _airDropCount;	// 24 = 0x18
    int _airDropModeNotifyToken;	// 28 = 0x1c
    _Bool _airDropPublished;	// 32 = 0x20
    NSObject<OS_dispatch_source> *_airDropEveryoneModeExpiryTimer;	// 40 = 0x28
    NSString *_nextAirDropID;	// 48 = 0x30
    int _airPlayPrefsToken;	// 56 = 0x38
    NSNumber *_backlightOn;	// 64 = 0x40
    int _backlightLevelToken;	// 72 = 0x48
    NSString *_bonjourName;	// 80 = 0x50
    _Bool _carplayConnected;	// 88 = 0x58
    NSMutableDictionary *_certificates;	// 96 = 0x60
    NSString *_computerName;	// 104 = 0x68
    NSNumber *_computerToComputer;	// 112 = 0x70
    NSString *_consoleUser;	// 120 = 0x78
    unsigned int _consoleUserID;	// 128 = 0x80
    _TtC16DaemoniOSLibrary27SDAirDropContactHashManager *_contactHashManager;	// 136 = 0x88
    CNContactStore *_contactStore;	// 144 = 0x90
    NSString *_currentDiscoverableMode;	// 152 = 0x98
    NSString *_deviceInformation;	// 160 = 0xa0
    _Bool _deviceIsHighPriority;	// 168 = 0xa8
    NSNumber *_deviceKeyBagState;	// 176 = 0xb0
    NSNumber *_deviceSupportsWAPI;	// 184 = 0xb8
    NSNumber *_deviceUIUnlocked;	// 192 = 0xc0
    _Bool _deviceWasUnlockedOnce;	// 200 = 0xc8
    struct __CFRunLoopSource *_dynamicStoreSource;	// 208 = 0xd0
    _Bool _finderAirDropEnabled;	// 216 = 0xd8
    SDAirDropServer *_finderServer;	// 224 = 0xe0
    NSNumber *_handoffVisible;	// 232 = 0xe8
    NSMutableDictionary *_identities;	// 240 = 0xf0
    int _keyBagUnlockToken;	// 248 = 0xf8
    NSString *_localHostName;	// 256 = 0x100
    long long _mediaAccessControlSetting;	// 264 = 0x108
    NSDictionary *_mountPoints;	// 272 = 0x110
    NSString *_myAppleID;	// 280 = 0x118
    NSString *_myAppleIDCommonName;	// 288 = 0x120
    struct __SecCertificate *_myAppleIDIntermediateCertificate;	// 296 = 0x128
    struct __SecCertificate *_myAppleIDCertificate;	// 304 = 0x130
    struct __SecIdentity *_myAppleIDSecIdentity;	// 312 = 0x138
    NSMutableString *_myEmailHashes;	// 320 = 0x140
    NSMutableString *_myPhoneHashes;	// 328 = 0x148
    MISSING_TYPE *_nameMonitor;	// 336 = 0x150
    _Bool _needsExitForLocaleChange;	// 344 = 0x158
    NSString *_netbiosName;	// 352 = 0x160
    unsigned int _notifierObject;	// 360 = 0x168
    struct IONotificationPort *_notifyPortRef;	// 368 = 0x170
    NSDictionary *_odisksMountPoints;	// 376 = 0x178
    long long _pairedWatchWristState;	// 384 = 0x180
    _Bool _iCloudSharedPhotoLibraryEnabled;	// 392 = 0x188
    NSNumber *_personalHotspotAutoState;	// 400 = 0x190
    _Bool _personalHotspotFamilyEnabled;	// 408 = 0x198
    NSMutableDictionary *_personalHotspotFamilyStates;	// 416 = 0x1a0
    NSNumber *_personalHotspotAllowed;	// 424 = 0x1a8
    struct __IOPMConnection *_pmConnection;	// 432 = 0x1b0
    unsigned int _rootPort;	// 440 = 0x1b8
    NSNumber *_screenOn;	// 448 = 0x1c0
    NSMutableDictionary *_serverNames;	// 456 = 0x1c8
    _Bool _sleepModeOn;	// 464 = 0x1d0
    struct __SCPreferences *_smbPreferences;	// 472 = 0x1d8
    NSMutableDictionary *_ssidHashes;	// 480 = 0x1e0
    CUSystemMonitor *_systemMonitor;	// 488 = 0x1e8
    unsigned int _systemUIFlags;	// 496 = 0x1f0
    int _uiLockStatusToken;	// 500 = 0x1f4
    NSNumber *_wirelessAccessPoint;	// 504 = 0x1f8
    NSString *_workgroup;	// 512 = 0x200
    long long _watchWristState;	// 520 = 0x208
    SDDeferrableOperation *_preventLocaleRestart;	// 528 = 0x210
    SDSmartCoverMonitor *_smartCoverMonitor;	// 536 = 0x218
    NSString *_requestedDiscoverableMode;	// 544 = 0x220
    CBController *_bluetoothController;	// 552 = 0x228
    int _screenBlankedToken;	// 560 = 0x230
    _Bool _controlCenterVisible;	// 564 = 0x234
    _Bool _multipleUsersLoggedIn;	// 565 = 0x235
    _Bool _wirelessCritical;	// 566 = 0x236
    CNContact *___meCard;	// 568 = 0x238
    NSDictionary *_awdlState;	// 576 = 0x240
    NSDate *_lastDarkWakeDate;	// 584 = 0x248
    NSSet *_effectiveBlacklistedAppBundleIDs;	// 592 = 0x250
}

+ (_Bool)enableShareSheetVectorSlots;	// IMP=0x0020000000162d3a
+ (_Bool)enableOOBPCredentialLogging;	// IMP=0x0010000000162cb0
+ (_Bool)isBuddyCompleted;	// IMP=0x00100000001628bb
+ (_Bool)b332PairingEnabled;	// IMP=0x001000000016287f
+ (long long)shareSheetMaxSuggestions;	// IMP=0x001000000016245f
+ (long long)mrQLProgressUpdateFreqMsec;	// IMP=0x00100000001619f7
+ (double)b332BTAddressRotationDelay;	// IMP=0x001000000016179c
+ (float)airDropProgressUIMaxPercentage;	// IMP=0x001000000016109d
+ (id)sharedMonitor;	// IMP=0x001000000015bbc4
- (void).cxx_destruct;	// IMP=0x00200000001665f0
@property(readonly) _Bool wirelessCritical; // @synthesize wirelessCritical=_wirelessCritical;
@property(readonly) _Bool multipleUsersLoggedIn; // @synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn;
@property(readonly) _Bool controlCenterVisible; // @synthesize controlCenterVisible=_controlCenterVisible;
@property(readonly) NSSet *effectiveBlacklistedAppBundleIDs; // @synthesize effectiveBlacklistedAppBundleIDs=_effectiveBlacklistedAppBundleIDs;
@property(readonly) NSDate *lastDarkWakeDate; // @synthesize lastDarkWakeDate=_lastDarkWakeDate;
@property(readonly) NSDictionary *awdlState; // @synthesize awdlState=_awdlState;
- (double)_currentEveryoneModeExpiryInterval;	// IMP=0x001000000016652f
- (double)_everyoneModeExpiryInterval;	// IMP=0x001000000016648d
- (void)_cancelCheckForEveryoneModeExpiry;	// IMP=0x0010000000166393
- (void)_scheduleCheckForEveryoneModeExpiry;	// IMP=0x0010000000166186
- (void)_updateEveryoneModeExpiryDateOnChange:(id)arg1;	// IMP=0x0010000000165ff7
- (void)_expireEveryoneModeAndOnlySetDefault:(_Bool)arg1;	// IMP=0x0010000000165e33
- (void)_checkEveryoneModeExpiry;	// IMP=0x0010000000165d77
- (id)_everyoneModeExpiryDate;	// IMP=0x0010000000165bb6
- (_Bool)_isEveryoneModeExpired;	// IMP=0x0010000000165b07
- (void)logWiFiPowerState;	// IMP=0x0010000000165a55
- (void)clearWirelessState;	// IMP=0x0010000000165a18
- (void)clearOperationModeInfo;	// IMP=0x00100000001659c5
- (void)installSSIDCacheMonitor;	// IMP=0x00100000001657a0
- (void)installWiFiPasswordSharingMonitor;	// IMP=0x001000000016566d
- (void)handleWiFiPasswordSharingChanged;	// IMP=0x0010000000165649
- (id)stringForWatchWristState:(long long)arg1;	// IMP=0x001000000016562a
@property(readonly) long long watchWristState;
- (void)updateWatchWristState:(long long)arg1;	// IMP=0x0010000000165536
- (void)installWristStateMonitor;	// IMP=0x0010000000165530
- (void)installVolumesMonitor;	// IMP=0x001000000016552a
- (void)installUserPictureMonitor;	// IMP=0x0010000000165524
- (void)installUILockStatusMonitor;	// IMP=0x001000000016551e
- (void)installSystemUIMonitor;	// IMP=0x0010000000165518
- (void)installSpringBoardStateMonitor;	// IMP=0x00100000001653f3
- (_Bool)smbConfiguration:(struct __SCPreferences *)arg1 netBiosName:(id *)arg2 workgroup:(id *)arg3;	// IMP=0x00100000001653eb
- (void)reloadSMBConfInfo;	// IMP=0x0010000000165288
- (void)installSMBPreferencesMonitor;	// IMP=0x0010000000165282
- (void)installSleepWakeCallBack;	// IMP=0x00100000001651c2
- (void)installSleepNotification;	// IMP=0x00100000001651bc
- (void)handleSleepWakeCallBack:(unsigned int)arg1 messageArguement:(void *)arg2;	// IMP=0x0010000000164fc4
- (void)installSleepStateMonitor;	// IMP=0x0010000000164fbe
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x0010000000164fac
@property(readonly) SFPowerSource *localPowerSource;
- (void)updateLocalPowerSource:(id)arg1;	// IMP=0x0010000000164f1e
- (void)handleMISStateChanged:(id)arg1;	// IMP=0x0010000000164ea8
- (void)installMISMonitor;	// IMP=0x0010000000164ea2
- (void)updatePairedWatchLockState:(int)arg1;	// IMP=0x0010000000164df6
@property(readonly) int pairedWatchLockState;
- (void)updatePairedWatchWristState:(long long)arg1;	// IMP=0x0010000000164d18
@property(readonly) long long pairedWatchWristState;
- (void)handleNameMonitorCallBack:(const char *)arg1 flags:(unsigned int)arg2 error:(int)arg3;	// IMP=0x0010000000164c3b
- (void)updateBlacklistedAppBundleIDs;	// IMP=0x0010000000164b1c
- (void)managedConfigurationSettingsChanged:(id)arg1;	// IMP=0x0010000000164ae1
- (void)installManagedConfigurationMonitor;	// IMP=0x0010000000164a2c
- (void)installLocaleChangeMonitor;	// IMP=0x0010000000164834
- (void)installKeyBagUnlockMonitor;	// IMP=0x001000000016482e
- (void)installFinderSidebarPrefsMonitor;	// IMP=0x0010000000164828
- (void)installDynamicStoreCallBack;	// IMP=0x00100000001645cb
- (void)handleDynamicStoreCallback:(struct __SCDynamicStore *)arg1 changedKeys:(struct __CFArray *)arg2;	// IMP=0x0010000000164322
- (void)installDisplaySleepMonitor;	// IMP=0x00100000001641b9
- (void)installDisplayConfigurationMonitor;	// IMP=0x00100000001641b3
- (void)installCoreTelephonyMonitor;	// IMP=0x00100000001641ad
- (void)installContactsMonitor;	// IMP=0x0010000000164027
- (void)meCardChanged:(id)arg1;	// IMP=0x0010000000163f40
- (void)contactStoreDidChange:(id)arg1;	// IMP=0x0010000000163e6b
- (void)installSmartCoverStatusMonitor;	// IMP=0x0010000000163e3c
- (void)installClamshellStateChangeMonitor;	// IMP=0x0010000000163e36
- (void)uninstallCarPlayStatusMonitor;	// IMP=0x0010000000163e30
- (void)installWirelessCarPlayMonitor;	// IMP=0x0010000000163e2a
- (void)installCarPlayStatusMonitor;	// IMP=0x0010000000163e24
- (void)restartBonjourNameMonitor;	// IMP=0x0010000000163dd5
- (void)uninstallBonjourNameMonitor;	// IMP=0x0010000000163da9
- (void)installBonjourNameMonitor;	// IMP=0x0010000000163cab
- (void)retryInstallBluetoothMonitor;	// IMP=0x0010000000163bdc
- (void)bluetoothMonitorInvalidated;	// IMP=0x0010000000163b4c
- (void)bluetoothDidSetPowerStateWithError:(id)arg1;	// IMP=0x0010000000163a79
- (void)bluetoothActivatedWithError:(id)arg1;	// IMP=0x00100000001639a6
- (void)bluetoothStateChanged;	// IMP=0x00100000001638bf
- (void)installBluetoothMonitor;	// IMP=0x001000000016353e
- (void)bluetoothAddressChanged;	// IMP=0x00100000001634e2
- (void)airplaneModeChanged;	// IMP=0x00100000001634c9
- (void)installAirplaneModeMonitor;	// IMP=0x00100000001634c3
- (void)installBacklightMonitor;	// IMP=0x00100000001634bd
- (void)installWirelessMonitor;	// IMP=0x00100000001634b7
- (void)updateAWDLStateInfo;	// IMP=0x001000000016347e
- (void)handleAWDLState:(id)arg1;	// IMP=0x0010000000163478
- (void)installAppleIDAccountInfoMonitor;	// IMP=0x00100000001633be
- (void)appleIDAccountInfoChanged:(id)arg1;	// IMP=0x0010000000163323
- (void)installAppleIDUsernameMonitor;	// IMP=0x00100000001632a5
- (long long)mediaAccessControlSetting;	// IMP=0x0010000000163298
- (void)updateMediaAccessControlSetting:(_Bool)arg1;	// IMP=0x00100000001631d7
- (void)installAirPlayPreferencesMonitor;	// IMP=0x0010000000163149
- (void)logAirDropTransactionForClientServer:(_Bool)arg1 beginEnd:(_Bool)arg2 count:(int)arg3;	// IMP=0x001000000016306d
@property(readonly) _Bool asynchronousProxyLoadingEnabled;
@property(readonly) _Bool wirelessCarPlay;
@property(readonly) _Bool wirelessAccessPoint;
@property(readonly) _Bool wifiUserPowerPreference;
@property(readonly) _Bool testDiskFull;
@property(readonly) _Bool supportsXcodePairing;
@property(readonly) _Bool supportsFitnessPlusPairing;
@property(readonly) _Bool smartCoverIsClosed;
@property(readonly) _Bool sleepModeOn;
@property(readonly) _Bool signedIntoPrimaryiCloudAccount;
@property(readonly) _Bool showThisComputer;
@property(readonly) _Bool showMeInWormhole;
@property(readonly) _Bool screenOn;
@property(readonly) _Bool runningAsSetupUser;
@property(readonly) _Bool registerAllInterfaces;
@property(readonly) _Bool myAppleIDIsManaged;
@property(readonly) _Bool internetSharingEnabled;
@property(readonly) _Bool ignoreIconDiskCache;
@property(readonly) _Bool handoffVisible;
@property(readonly) _Bool forceP2P;
@property(readonly) _Bool forceAWDL;
@property(readonly) _Bool finderAirDropEnabled;
@property(readonly) _Bool enableXML;
@property(readonly) _Bool enableWebloc;
@property(readonly) _Bool enableStreamDebugging;
@property(readonly) _Bool enableStrangers;
@property(readonly) _Bool enablePKZipCompression;
@property(readonly) _Bool enablePKZip;
@property(readonly) _Bool enableHotspotFallback;
@property(readonly) _Bool enableDVZip;
@property(readonly) _Bool enableDemoMode;
@property(readonly) _Bool enableDebugMode;
@property(readonly) _Bool enableContinuity;
@property(readonly) _Bool enableBugs;
@property(readonly) _Bool enableAllRecents;
@property(readonly) _Bool enableAirDropReceiving;
@property(readonly) _Bool enableAirDropAdvertising;
@property(readonly) _Bool eduModeEnabled;
@property(readonly) _Bool dockHasDownloadsFolder;
@property(readonly) _Bool disableTLS;
@property(readonly) _Bool disableRotation;
@property(readonly) _Bool disableTransformingPhotosAssetBundlesToFolders;
@property(readonly) _Bool disableExtractMediaFromBundles;
@property(readonly) _Bool disableQuarantine;
@property(readonly) _Bool disablePipelining;
@property(readonly) _Bool disablePictureQuery;
@property(readonly) _Bool disablePeopleSuggestions;
@property(readonly) _Bool disableContinuityTLS;
@property(readonly) _Bool disableCompression;
@property(readonly) _Bool disableAutoAcceptForPhotosAssetBundles;
@property(readonly) _Bool disableAutoAccept;
@property(readonly) _Bool deviceWasUnlockedOnce;
@property(readonly) _Bool deviceUIUnlocked;
@property(readonly) _Bool deviceSupportsWAPI;
@property(readonly) _Bool deviceSupportsRanging;
@property(readonly) _Bool deviceSupportsContinuity;
@property(readonly) _Bool deviceRequiresNewRanging;
@property(readonly) _Bool deviceKeyBagUnlocked;
@property(readonly) _Bool deviceKeyBagLocking;
@property(readonly) _Bool deviceKeyBagLocked;
@property(readonly) _Bool deviceKeyBagDisabled;
@property(readonly) _Bool deviceIsInClassD;
@property(readonly) _Bool deviceInBiolockout;
@property(readonly) _Bool currentConsoleUser;
@property(readonly) _Bool connectedEnabled;
@property(readonly) _Bool computerToComputer;
@property(readonly) _Bool coalesceMe;
@property(readonly) _Bool carplayConnected;
@property(readonly) _Bool bypassLTKeyAbort;
@property(readonly) _Bool browseAllInterfaces;
@property(readonly) _Bool bonjourEnabled;
@property(readonly) _Bool backlightOn;
@property(readonly) _Bool alwaysSendPayload;
@property(readonly) _Bool alwaysAutoAccept;
@property(readonly) _Bool altDSIDNeedsFixing;
@property(readonly) _Bool allEnabled;
@property(readonly) _Bool iCloudSharedPhotoLibraryEnabled;
@property(readonly) _Bool lowPowerModeEnabled;
- (void)installLowPowerModeMonitor;	// IMP=0x0010000000162680
- (void)lowPowerModeStateChanged;	// IMP=0x001000000016267a
@property(readonly, getter=isAirDropAvailable) _Bool airdropAvailable;
- (void)updateAirDropAllowed;	// IMP=0x00100000001625a0
@property(readonly, getter=isAirDropAllowed) _Bool airdropAllowed;
@property(readonly) int workgroupThreshold;
@property(readonly) NSString *workgroup;
@property(readonly) unsigned int systemUIFlags;
@property(readonly) NSString *someComputerName;
@property(readonly) int sidebarMaxCount;
@property(readonly) NSString *netbiosName;
@property(readonly) NSData *myShortHashesForAirDrop;
@property(readonly) NSData *myMediumHashes;
@property(readonly) NSString *myPrimaryEmail;
@property(readonly) NSString *myGivenName;
@property(readonly) NSString *myName;
@property(readonly) NSString *myEmail;
@property(readonly) NSDictionary *myAppleIDValidationRecord;
@property(readonly) NSArray *myAppleIDPhoneNumbers;
@property(readonly) NSString *myAppleIDPhoneHash;
@property(readonly) NSString *myAppleIDEmailHash;
@property(readonly) NSArray *myAppleIDEmailAddresses;
@property(readonly) NSString *myAppleIDCommonName;
- (id)_myAppleID;	// IMP=0x0010000000161ac3
@property(readonly) NSString *myAppleID;
@property(readonly) NSString *myAltDSID;
@property(readonly) NSString *myAccountAppleID;
@property(readonly) NSString *modelName;
@property(readonly) NSString *modelCode;
@property(readonly) int minPersonImageSize;
- (void)clearLocalHostName;	// IMP=0x001000000016175f
@property(readonly) NSString *localHostName;
@property(readonly) long long deviceKeyBagState;
@property(readonly) NSString *deviceInformation;
- (void)clearConsoleUser;	// IMP=0x001000000016120a
@property(readonly) NSString *consoleUser;
- (void)clearComputerName;	// IMP=0x0010000000161199
@property(readonly) NSString *computerName;
@property(readonly) NSString *bonjourName;
@property(readonly) NSData *bluetoothAddress;
- (id)awdlStateInfo;	// IMP=0x00100000001610d0
@property(readonly) NSArray *awdlPeerList;
@property(readonly) NSDictionary *awdlInfo;
@property _Bool airplaneModeEnabled;
@property _Bool wirelessEnabled;
@property __weak SDAirDropServer *finderServer;
@property _Bool bluetoothEnabled;
@property NSString *nextAirDropID;
@property _Bool airDropPublished;
- (id)wifiSSIDForSSIDHash:(id)arg1;	// IMP=0x0010000000160cbb
- (unsigned int)wifiPasswordSharingAvailability;	// IMP=0x0010000000160ae2
- (id)defaultWiFiDevice;	// IMP=0x0010000000160ada
- (_Bool)_multipleUsersLoggedIn;	// IMP=0x0010000000160ad2
- (void)postNotification:(id)arg1;	// IMP=0x0010000000160abe
- (void)postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x0010000000160a2d
- (void)removePreventExitForLocaleReason:(id)arg1;	// IMP=0x00100000001608d0
- (void)pushDateForPreventExitForLocaleReason:(id)arg1 expirationDate:(id)arg2;	// IMP=0x0010000000160732
- (void)addPreventExitForLocaleReason:(id)arg1;	// IMP=0x00100000001605d5
@property(readonly) _Bool simStateReady;
- (long long)signalStrength;	// IMP=0x00100000001605c0
- (void)updatePersonalHotspotAllowed;	// IMP=0x00100000001604e4
@property(readonly) _Bool personalHotspotAllowed;
- (unsigned char)networkType;	// IMP=0x0010000000160439
@property(readonly) _Bool familyHotspotEnabled;
- (void)updateFamilyHotspotState;	// IMP=0x00100000001603e9
- (long long)familyHotspotStateForAltDSID:(id)arg1;	// IMP=0x00100000001603dc
- (_Bool)lteConnectionShows4G;	// IMP=0x00100000001603d4
- (void)cellularDataEnabled:(_Bool *)arg1 airplaneMode:(_Bool *)arg2;	// IMP=0x00100000001603be
- (void)updateAutoHotspotState;	// IMP=0x001000000016039b
- (long long)autoHotspotState;	// IMP=0x0010000000160393
- (id)phoneNumbersForContact:(id)arg1;	// IMP=0x001000000016018f
- (void)resetMeCardWithReason:(id)arg1;	// IMP=0x0010000000160038
@property(readonly, nonatomic) CNContact *meCard; // @synthesize meCard=___meCard;
- (id)instantMessageEmailsForContact:(id)arg1;	// IMP=0x001000000015fc0e
- (id)emailOrPhoneForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x001000000015fb69
- (id)emailsForContact:(id)arg1;	// IMP=0x001000000015f9a5
- (id)contactWithContactIdentifier:(id)arg1;	// IMP=0x001000000015f661
- (id)contactsWithPhoneNumberOrEmail:(id)arg1 keys:(id)arg2;	// IMP=0x001000000015f515
- (_Bool)isEmail:(id)arg1;	// IMP=0x001000000015f4f9
- (id)contactWithPreferredIdentifierForContacts:(id)arg1;	// IMP=0x001000000015f1db
- (_Bool)contactsContainsShortHashes:(id)arg1;	// IMP=0x001000000015f1c2
- (_Bool)contactIsBlocked:(id)arg1;	// IMP=0x001000000015f1ba
- (_Bool)contactIdentifierIsBlocked:(id)arg1;	// IMP=0x001000000015f1b2
- (id)contactIdentifierForMediumHashes:(id)arg1;	// IMP=0x001000000015f199
- (id)contactsForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x001000000015f080
- (void)clearMyIconAndHash;	// IMP=0x001000000015efb6
- (id)addAdditionalInformationToMeCard:(id)arg1;	// IMP=0x001000000015e793
- (id)awdlNetwork;	// IMP=0x001000000015e78b
- (id)awdlInfoForPeerWithServiceName:(id)arg1;	// IMP=0x001000000015e783
- (id)awdlDevice;	// IMP=0x001000000015e77b
- (id)verifiedIdentityForAppleID:(id)arg1;	// IMP=0x001000000015e6df
- (id)unifiedAppleIDInfo;	// IMP=0x001000000015e0b8
- (id)phoneNumbersForAppleID:(id)arg1;	// IMP=0x001000000015dff5
- (void)hsa2EnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000015dfe5
- (void)handleAppleAccountSignOut;	// IMP=0x001000000015df57
- (void)handleAppleAccountSignIn;	// IMP=0x001000000015dec9
- (void)fixAltDSIDIfNeeded;	// IMP=0x001000000015dc47
- (id)emailAddressesForAppleID:(id)arg1;	// IMP=0x001000000015db84
- (struct __SecIdentity *)_copyMyAppleIDSecIdentity;	// IMP=0x001000000015dad9
- (struct __SecIdentity *)copyMyAppleIDSecIdentity;	// IMP=0x001000000015da9d
- (struct __SecCertificate *)_copyMyAppleIDIntermediateCertificate;	// IMP=0x001000000015d9d3
- (struct __SecCertificate *)copyMyAppleIDIntermediateCertificate;	// IMP=0x001000000015d997
- (struct __SecCertificate *)_copyMyAppleIDCertificate;	// IMP=0x001000000015d8cf
- (struct __SecCertificate *)copyMyAppleIDCertificate;	// IMP=0x001000000015d893
- (struct __SecCertificate *)copyCertificateForRealName:(id)arg1;	// IMP=0x001000000015d7f1
- (id)commonNameForCertificate:(struct __SecCertificate *)arg1;	// IMP=0x001000000015d732
- (void)clearMyAppleIDInfo;	// IMP=0x001000000015d5d1
- (void)cacheIdentity:(id)arg1;	// IMP=0x001000000015d4f9
- (void)cacheCertificate:(struct __SecCertificate *)arg1 forRealName:(id)arg2;	// IMP=0x001000000015d44f
- (_Bool);	// IMP=0x001000000015d353
- (long long)appleIDAccountState;	// IMP=0x001000000015d1cb
- (void)updateDiscoverableMode;	// IMP=0x001000000015cfcb
- (void)setServerMountPoints:(id)arg1;	// IMP=0x001000000015cf3d
@property(retain) NSString *discoverableMode;
- (void)setODiskMountPoints:(id)arg1;	// IMP=0x001000000015ce2d
- (id)serverNameForHost:(id)arg1;	// IMP=0x001000000015cd7f
- (void)removeServerName:(id)arg1;	// IMP=0x001000000015ccee
- (id)reconciledDiscoverableMode;	// IMP=0x001000000015cb7a
- (id)odiskMountPointsForServer:(id)arg1;	// IMP=0x001000000015cae7
- (id)newDiscoverableMode;	// IMP=0x001000000015c90d
- (id)mountPointsForServer:(id)arg1;	// IMP=0x001000000015c87a
- (_Bool)isClarityBoardEnabled;	// IMP=0x001000000015c872
- (_Bool)isAirDropReady;	// IMP=0x001000000015c6ef
- (long long)discoverableLevel;	// IMP=0x001000000015c648
- (id)defaultDiscoverableMode;	// IMP=0x001000000015c62b
- (id)createHostNameKey:(id)arg1;	// IMP=0x001000000015c573
- (void)airDropTransactionEnd:(_Bool)arg1;	// IMP=0x001000000015c524
- (void)airDropTransactionBegin:(_Bool)arg1;	// IMP=0x001000000015c4d9
- (void)addServerName:(id)arg1 forHostName:(id)arg2;	// IMP=0x001000000015c40d
@property(readonly, copy) NSString *description;
- (void)clearMonitorCache;	// IMP=0x001000000015c0db
- (void)activate;	// IMP=0x001000000015beda
- (id)init;	// IMP=0x001000000015bc2d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

