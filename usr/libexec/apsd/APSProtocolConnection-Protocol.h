//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "NSObject-Protocol.h"

@class APSOutgoingMessage, NSArray, NSData, NSDictionary, NSError, NSNumber, NSString;
@protocol APSProtocolConnectionDataRecipient, APSProtocolConnectionStateListener;

@protocol APSProtocolConnection <NSObject>
@property(readonly, nonatomic) _Bool isPowerEfficientToUse;
@property(readonly, nonatomic) int linkQuality;
@property(readonly, nonatomic) NSString *serverHostname;
@property(readonly, nonatomic) NSString *serverIPAddress;
@property(readonly, nonatomic) _Bool secureHandshakeEnabled;
@property(readonly, nonatomic) _Bool isSuspended;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) long long connectionType;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic) NSNumber *maxLargeMessageSize;
@property(readonly, nonatomic) NSNumber *maxMessageSize;
@property(readonly, nonatomic) _Bool didPushCauseWake;
@property(readonly, nonatomic) _Bool isPreferredInterface;
- (NSError *)sendMessage:(APSOutgoingMessage *)arg1 topicHash:(NSData *)arg2 lastRTT:(NSNumber *)arg3 token:(NSData *)arg4 withCompletion:(void (^)(NSDictionary *, NSError *))arg5;
- (void)sendMessageTransportAcknowledgeMessage;
- (void)sendConnectMessageWithToken:(NSData *)arg1 state:(int)arg2 presenceFlags:(unsigned int)arg3 certificates:(NSArray *)arg4 nonce:(NSData *)arg5 signature:(NSData *)arg6 withCompletion:(void (^)(NSDictionary *, NSError *))arg7;
- (void)sendConnectMessageWithToken:(NSData *)arg1 presenceFlags:(unsigned int)arg2 certificates:(NSArray *)arg3 nonce:(NSData *)arg4 signature:(NSData *)arg5 withCompletion:(void (^)(NSDictionary *, NSError *))arg6;
- (void)sendConnectMessageWithToken:(NSData *)arg1 state:(int)arg2 presenceFlags:(unsigned int)arg3 hwVersion:(NSString *)arg4 swVersion:(NSString *)arg5 swBuild:(NSString *)arg6 certificates:(NSArray *)arg7 nonce:(NSData *)arg8 signature:(NSData *)arg9 withCompletion:(void (^)(NSDictionary *, NSError *))arg10;
- (void)sendTokenGenerateMessageWithTopicHash:(NSData *)arg1 baseToken:(NSData *)arg2 appId:(unsigned short)arg3 expirationTTL:(unsigned int)arg4 vapidPublicKeyHash:(NSData *)arg5 type:(long long)arg6 withCompletion:(void (^)(NSDictionary *, NSError *))arg7;
- (void)sendFilterMessageWithEnabledTopicsByHash:(NSDictionary *)arg1 ignoredTopicsByHash:(NSDictionary *)arg2 opportunisticTopicsByHash:(NSDictionary *)arg3 nonWakingTopicsByHash:(NSDictionary *)arg4 pausedTopicsByHash:(NSDictionary *)arg5 saltsByTopic:(NSDictionary *)arg6 token:(NSData *)arg7 version:(unsigned long long)arg8 expectsResponse:(_Bool)arg9 withCompletion:(void (^)(NSDictionary *, NSError *))arg10;
- (void)sendTaskControlMessageWithMetadata:(NSData *)arg1 messageId:(unsigned long long)arg2;
- (void)sendMessageAcknowledgeMessageWithResponse:(long long)arg1 messageId:(NSData *)arg2 generation:(long long)arg3 token:(NSData *)arg4;
- (void)sendActivityTrackingRequestWithMessageID:(unsigned long long)arg1 pushToken:(NSData *)arg2 salt:(unsigned long long)arg3 trackingFlag:(unsigned int)arg4 timestamp:(unsigned long long)arg5;
- (void)sendPubSubChannelListWithMetadata:(NSData *)arg1 baseToken:(NSData *)arg2 messageID:(unsigned int)arg3;
- (void)sendMessageTracingAckWithTopicHash:(NSData *)arg1 topic:(NSString *)arg2 tracingUUID:(NSData *)arg3 status:(int)arg4 token:(NSData *)arg5;
- (void)sendSetActiveState:(_Bool)arg1 forInterval:(unsigned int)arg2;
- (_Bool)generationMatches:(unsigned long long)arg1;
- (void)noteConnectionFailureWithReason:(unsigned int)arg1;
- (void)disconnectWithReason:(unsigned int)arg1;
- (void)noteConnected;
- (void)removeDataListener:(id <APSProtocolConnectionDataRecipient>)arg1;
- (void)addDataListener:(id <APSProtocolConnectionDataRecipient>)arg1;
- (void)removeStateListener:(id <APSProtocolConnectionStateListener>)arg1;
- (void)addStateListener:(id <APSProtocolConnectionStateListener>)arg1;
@end

