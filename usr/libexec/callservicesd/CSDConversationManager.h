//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDConversationProviderManager, CSDDeviceLockStateObserver, CSDIDSService, CSDPendingMembershipTracker, CSDReportingController, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, NSDictionary, NSMapTable, NSMutableDictionary, NSString, TUCallProviderManager;
@protocol CSDConversationInvitationResolving, CSDParticipantUpdateSanitizer, CSDVoucherManager, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDPendingMembershipTracker *_pendingMembershipTracker;	// 8 = 0x8
    NSMutableDictionary *_mutableConversationsByUUID;	// 16 = 0x10
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;	// 24 = 0x18
    NSMutableDictionary *_mutablePseudonymsByCallUUID;	// 32 = 0x20
    NSMutableDictionary *_mutablePseudonymsByRequestIdentifiers;	// 40 = 0x28
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;	// 48 = 0x30
    NSMutableDictionary *_mutableConversationsRequestingUpgradeWithPreferences;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;	// 64 = 0x40
    NSMapTable *_delegateToQueue;	// 72 = 0x48
    CSDConversationPersistenceController *_persistenceController;	// 80 = 0x50
    CSDDeviceLockStateObserver *_lockStateObserver;	// 88 = 0x58
    TUCallProviderManager *_callProviderManager;	// 96 = 0x60
    CSDConversationLinkManager *_linkManager;	// 104 = 0x68
    CSDReportingController *_reportingController;	// 112 = 0x70
    id <TUFeatureFlags> _featureFlags;	// 120 = 0x78
    CSDConversationNoticeManager *_conversationNoticeManger;	// 128 = 0x80
    CSDSharedConversationServerBag *_serverBag;	// 136 = 0x88
    id <CSDConversationInvitationResolving> _invitationResolver;	// 144 = 0x90
    NSMutableDictionary *_screenCaptureQueue;	// 152 = 0x98
    id <CSDVoucherManager> _voucherManager;	// 160 = 0xa0
    id <CSDParticipantUpdateSanitizer> _participantUpdateSanitizer;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_queue;	// 176 = 0xb0
    CSDIDSService *_service;	// 184 = 0xb8
    CDUnknownBlockType _groupSessionProviderCreationBlock;	// 192 = 0xc0
    FTDeviceSupport *_deviceSupport;	// 200 = 0xc8
    CDUnknownBlockType _conversationCreationBlock;	// 208 = 0xd0
    CDUnknownBlockType _sendDataBlock;	// 216 = 0xd8
    CDUnknownBlockType _getPersonalNicknameBlock;	// 224 = 0xe0
    CSDConversationProviderManager *_conversationProviderManager;	// 232 = 0xe8
    CDUnknownBlockType _lockdownModeEnabled;	// 240 = 0xf0
    CDUnknownBlockType _activeLocalHandles;	// 248 = 0xf8
    CDUnknownBlockType _activeLocalHandlesForProvider;	// 256 = 0x100
    CDUnknownBlockType _localCallerID;	// 264 = 0x108
    CDUnknownBlockType _notifyPendingMembershipTrackerOfDelegatedMember;	// 272 = 0x110
    CDUnknownBlockType _localCallerIDForProvider;	// 280 = 0x118
    CSDSecureImageTranscoder *_imageTranscoder;	// 288 = 0x120
    CDUnknownBlockType _isConversationRelayPreferred;	// 296 = 0x128
}

- (void).cxx_destruct;	// IMP=0x002000000012aa52
@property(copy, nonatomic) CDUnknownBlockType isConversationRelayPreferred; // @synthesize isConversationRelayPreferred=_isConversationRelayPreferred;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(copy, nonatomic) CDUnknownBlockType localCallerIDForProvider; // @synthesize localCallerIDForProvider=_localCallerIDForProvider;
@property(copy, nonatomic) CDUnknownBlockType notifyPendingMembershipTrackerOfDelegatedMember; // @synthesize notifyPendingMembershipTrackerOfDelegatedMember=_notifyPendingMembershipTrackerOfDelegatedMember;
@property(copy, nonatomic) CDUnknownBlockType localCallerID; // @synthesize localCallerID=_localCallerID;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandlesForProvider; // @synthesize activeLocalHandlesForProvider=_activeLocalHandlesForProvider;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandles; // @synthesize activeLocalHandles=_activeLocalHandles;
@property(copy, nonatomic) CDUnknownBlockType lockdownModeEnabled; // @synthesize lockdownModeEnabled=_lockdownModeEnabled;
@property(retain, nonatomic) CSDConversationProviderManager *conversationProviderManager; // @synthesize conversationProviderManager=_conversationProviderManager;
@property(copy, nonatomic) CDUnknownBlockType getPersonalNicknameBlock; // @synthesize getPersonalNicknameBlock=_getPersonalNicknameBlock;
@property(copy, nonatomic) CDUnknownBlockType sendDataBlock; // @synthesize sendDataBlock=_sendDataBlock;
@property(copy, nonatomic) CDUnknownBlockType conversationCreationBlock; // @synthesize conversationCreationBlock=_conversationCreationBlock;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(copy, nonatomic) CDUnknownBlockType groupSessionProviderCreationBlock; // @synthesize groupSessionProviderCreationBlock=_groupSessionProviderCreationBlock;
@property(retain, nonatomic) CSDIDSService *service; // @synthesize service=_service;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <CSDParticipantUpdateSanitizer> participantUpdateSanitizer; // @synthesize participantUpdateSanitizer=_participantUpdateSanitizer;
@property(retain, nonatomic) id <CSDVoucherManager> voucherManager; // @synthesize voucherManager=_voucherManager;
@property(readonly, nonatomic) NSMutableDictionary *screenCaptureQueue; // @synthesize screenCaptureQueue=_screenCaptureQueue;
@property(retain, nonatomic) id <CSDConversationInvitationResolving> invitationResolver; // @synthesize invitationResolver=_invitationResolver;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pendingConversationCleanupTimer; // @synthesize pendingConversationCleanupTimer=_pendingConversationCleanupTimer;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsRequestingUpgradeWithPreferences; // @synthesize mutableConversationsRequestingUpgradeWithPreferences=_mutableConversationsRequestingUpgradeWithPreferences;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;	// IMP=0x0010000000129f69
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;	// IMP=0x0010000000129da0
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;	// IMP=0x0010000000129c0e
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x00100000001299ae
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;	// IMP=0x0010000000129829
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x00100000001294f5
- (void)handleRemovedLinkDescriptors:(id)arg1;	// IMP=0x0010000000129317
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;	// IMP=0x00100000001291ab
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x0010000000129030
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x0010000000128ec4
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;	// IMP=0x0010000000128d58
- (id)pickInitiatorFromParticipants:(id)arg1 forUpdate:(id)arg2;	// IMP=0x00100000001289c4
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;	// IMP=0x0010000000128127
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000127d92
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3 withGroupSessionUpdate:(id)arg4;	// IMP=0x0010000000127a24
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4;	// IMP=0x0010000000124511
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000123d8a
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000001238ab
- (id)pushTokenForSelf;	// IMP=0x0010000000123854
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2 senderCorrelationIdentifier:(id)arg3;	// IMP=0x00100000001231b8
- (void)processGroupSessionParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x0010000000122902
- (void)sanitizeAndProcessParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x00100000001226b9
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;	// IMP=0x001000000012263d
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3 context:(id)arg4;	// IMP=0x00100000001225a8
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;	// IMP=0x00100000001210ff
- (void)enqueueMessageRetryAttemptForMessageID:(id)arg1 message:(id)arg2 attemptCount:(unsigned long long)arg3 messageProcessingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000120b5e
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0010000000120b42
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x0010000000120736
- (_Bool)shouldCreatePendingChatForMessageType:(long long)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000120715
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x00100000001202cb
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;	// IMP=0x001000000012018e
- (void)service:(id)arg1 account:(id)arg2 messageIdentifier:(id)arg3 alternateCallbackID:(id)arg4 updatedWithResponseCode:(long long)arg5 error:(id)arg6 lastCall:(_Bool)arg7 messageContext:(id)arg8;	// IMP=0x0010000000120114
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x001000000011ff61
- (void)conversation:(id)arg1 screenShareAttributesDidChange:(id)arg2;	// IMP=0x001000000011ff2c
- (void)conversation:(id)arg1 screenShareAttributesUpdated:(id)arg2;	// IMP=0x001000000011fe73
- (void)conversation:(id)arg1 screenShareAttributesSelected:(id)arg2;	// IMP=0x001000000011fdb5
- (void)conversation:(id)arg1 requestedEndpointWithIdentifier:(id)arg2 activitySession:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000011fd80
- (void)conversationDidTriggerJoin:(id)arg1;	// IMP=0x001000000011fb49
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x001000000011f716
- (void)conversation:(id)arg1 sendResourceAtURL:(id)arg2 toParticipants:(id)arg3 metadata:(id)arg4 activitySessionUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000011f6e1
- (void)conversation:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x001000000011f6ac
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x001000000011f249
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x001000000011edb2
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;	// IMP=0x001000000011e867
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x001000000011e861
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x001000000011e85b
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;	// IMP=0x001000000011e3d1
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;	// IMP=0x001000000011e226
- (void)conversation:(id)arg1 requestBlobRecoveryForParticipantDestination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000011e03a
- (void)conversation:(id)arg1 participantDidStopReacting:(id)arg2;	// IMP=0x001000000011db70
- (void)conversation:(id)arg1 participant:(id)arg2 didReact:(id)arg3;	// IMP=0x001000000011d675
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;	// IMP=0x001000000011d1ab
- (void)conversationDidStopScreenCapture:(id)arg1;	// IMP=0x001000000011d137
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;	// IMP=0x001000000011cc7f
- (void)conversation:(id)arg1 updatedActiveParticipant:(id)arg2;	// IMP=0x001000000011c7d8
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2 withLeaveReason:(unsigned long long)arg3;	// IMP=0x001000000011c072
- (void)conversation:(id)arg1 didChangeLocalParticipant:(id)arg2 broadcastActivitySession:(_Bool)arg3;	// IMP=0x001000000011ba59
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;	// IMP=0x001000000011a9c6
- (void)conversationInvalidated:(id)arg1;	// IMP=0x001000000011a64a
- (void)conversationConnectionDidStart:(id)arg1;	// IMP=0x001000000011a19e
- (void)conversationChanged:(id)arg1;	// IMP=0x0010000000119b79
- (void)cleanupExpiredPendingConversations;	// IMP=0x0010000000119733
- (void)setupPendingConversationCleanupTimer;	// IMP=0x0010000000119453
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;	// IMP=0x00100000001190cd
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001190b6
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2 presentationMode:(unsigned long long)arg3;	// IMP=0x0010000000118e76
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000118e5a
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000118b5c
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x00100000001188d8
- (void)removeConversationWithUUID:(id)arg1;	// IMP=0x001000000011865c
- (void)removeNonIndefiniteLinks;	// IMP=0x001000000011800f
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000117d5e
- (void)removeConversationNoticeWithUUID:(id)arg1;	// IMP=0x0000000000117c55
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;	// IMP=0x0010000000117b22
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001179fb
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001173c0
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001170c6
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000116db9
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000116bfd
- (void)recoverLinksForPseudonyms:(id)arg1;	// IMP=0x0010000000116a57
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;	// IMP=0x00100000001168dd
- (id)undeleteConversationLinkIfNecessary:(id)arg1 withError:(id *)arg2;	// IMP=0x0010000000116854
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000116319
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011606d
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000115cd4
- (void)generateAllInactiveLinks;	// IMP=0x0010000000115b54
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001159c4
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000115434
- (void)renewLinkIfNeeded:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000114eff
- (void)invalidateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001149cf
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011438c
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000113819
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000113604
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;	// IMP=0x0010000000113332
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001128d4
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001124ac
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001123ef
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000111fb7
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;	// IMP=0x0010000000111d2d
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;	// IMP=0x00100000001117df
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;	// IMP=0x0010000000110f36
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000110c3e
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000110565
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001102b4
- (void)handleConversation:(id)arg1 updateGuestMode:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010fb12
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010fadd
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010f96e
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010f939
- (void)handleConversation:(id)arg1 removeHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010f904
- (void)handleConversation:(id)arg1 addHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010f8cf
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010f89a
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010f865
- (void)handleConversation:(id)arg1 registerMessagesGroupUUIDMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x001000000010f75c
- (void)handleConversation:(id)arg1 participantUpdateMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x001000000010e146
- (void)resetActivitySessionSceneAssociationsForBundleID:(id)arg1;	// IMP=0x001000000010e140
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;	// IMP=0x001000000010e13a
- (void)launchApplicationForActivitySessionUUID:(id)arg1 authorizedExternally:(_Bool)arg2 forceBackground:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000010e134
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000010ddff
- (void)setAutoSharePlayEnabled:(_Bool)arg1;	// IMP=0x001000000010ddf9
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;	// IMP=0x001000000010ddf3
- (void)setUsingAirplay:(_Bool)arg1 onActivitySession:(id)arg2 onConversationWithUUID:(id)arg3;	// IMP=0x001000000010dc1d
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010daa9
- (void)endActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010d935
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010d7c1
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;	// IMP=0x001000000010d152
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010cb05
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;	// IMP=0x001000000010c7ed
- (void)displaySharePlayUnableToStartAlert;	// IMP=0x001000000010c6fd
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;	// IMP=0x001000000010bd08
- (void)maybeAddComplementaryAssociationVoucherFor:(id)arg1 toLocalMemberOf:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000010b305
- (void)setSharePlayHandedOff:(_Bool)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000010b090
- (void)prepareConversationWithUUID:(id)arg1 withHandoffContext:(id)arg2;	// IMP=0x001000000010a985
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;	// IMP=0x001000000010a02d
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;	// IMP=0x0010000000109f9b
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;	// IMP=0x0010000000109ce8
- (void)setScreenShareAttributes:(id)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000109b89
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000109a50
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001098fe
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001097c7
- (int)presentationStateForConversationWithUUID:(id)arg1;	// IMP=0x0010000000109637
- (void)setSplitSessionUserProfileState:(long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001094fe
- (_Bool)isConversationWithUUIDScreening:(id)arg1;	// IMP=0x0010000000109371
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;	// IMP=0x00100000001091e4
- (_Bool)isConversationWithUUIDRedirectingAudio:(id)arg1;	// IMP=0x0010000000109184
- (void)setScreening:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000109008
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000108ed0
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000108d98
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000108c60
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000010836b
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001082ef
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x0010000000107e48
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x00100000001079a1
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000107869
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;	// IMP=0x0010000000107571
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000107439
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000107301
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x00100000001071f8
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x00100000001070c3
- (void)leaveAllConversations;	// IMP=0x0010000000106eea
- (void)leaveConversationWithUUID:(id)arg1 withContext:(id)arg2;	// IMP=0x0010000000106d87
- (void)leaveConversationWithUUID:(id)arg1;	// IMP=0x0010000000106d16
- (void)_leaveConversation:(id)arg1;	// IMP=0x0010000000106c75
- (void)_leaveConversation:(id)arg1 withContext:(id)arg2;	// IMP=0x0010000000106b30
- (void)startAudioForConversationWithUUID:(id)arg1;	// IMP=0x00100000001068b8
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;	// IMP=0x001000000010619f
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x0010000000105b3e
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x0010000000105393
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;	// IMP=0x0010000000104558
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;	// IMP=0x0010000000103d62
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;	// IMP=0x0010000000103226
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 avMode:(unsigned long long)arg9 presentationMode:(unsigned long long)arg10 conversationProvider:(id)arg11;	// IMP=0x0010000000102233
- (void)removeAllConversations;	// IMP=0x00100000001021f6
- (void)retreiveActiveConversations;	// IMP=0x0010000000101a41
- (void)beginListeningOnService:(id)arg1;	// IMP=0x00100000001017e6
- (void)removeDelegate:(id)arg1;	// IMP=0x00100000001016dc
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x00100000001015a9
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
- (id)deletedConversationLinksWithError:(id *)arg1;	// IMP=0x0010000000101511
- (id)activatedConversationLinksWithError:(id *)arg1;	// IMP=0x0010000000101492
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;	// IMP=0x0010000000100f0f
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;	// IMP=0x00100000001007fa
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;	// IMP=0x00100000000ffeaa
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000000ff9cd
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000000ff838
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;	// IMP=0x00100000000ff3cd
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;	// IMP=0x00100000000ff0cd
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000000feb65
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;	// IMP=0x00100000000fea55
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000000fe6c1
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000000fe3a8
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;	// IMP=0x00100000000fdda7
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;	// IMP=0x00100000000fdb64
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;	// IMP=0x00100000000fd6d7
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;	// IMP=0x00100000000fd339
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000000fcfc5
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000000fc76c
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000000fc757
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x00100000000fc0fc
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x00100000000fb99a
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;	// IMP=0x00100000000fb985
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x00100000000fb7cc
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;	// IMP=0x00100000000fb65e
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3;	// IMP=0x00100000000fb649
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;	// IMP=0x00100000000fb593
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;	// IMP=0x00100000000fb572
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(CDUnknownBlockType)arg7;	// IMP=0x00100000000faf2a
- (void)handleReceivedUpdateJoinedMetadataMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000fa5d8
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;	// IMP=0x00100000000fa161
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;	// IMP=0x00100000000f9578
- (void)handleDelegatedPendingMemberIfNecessary:(id)arg1 conversation:(id)arg2 groupUUID:(id)arg3 fromHandle:(id)arg4 transactionUUID:(id)arg5;	// IMP=0x00100000000f9243
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f897b
- (void)removeLink:(id)arg1 withConversation:(id)arg2;	// IMP=0x00100000000f8743
- (void)removeLink:(id)arg1;	// IMP=0x00100000000f872f
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f810f
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f719f
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f6a5e
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4 dateInitiated:(id)arg5;	// IMP=0x00100000000f57ed
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f515f
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f4aca
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f4925
- (id)temporaryFilePath;	// IMP=0x00100000000f48a9
- (_Bool)_linksEnabled;	// IMP=0x00100000000f489c
- (void)handleConversationHandoffRouteIdentifierChangedNotification:(id)arg1;	// IMP=0x00100000000f3ec6
- (void)updateConversationHandoffEligibility:(id)arg1;	// IMP=0x00100000000f342c
- (void)handleConversationHandoffRecommendationChangedNotification:(id)arg1;	// IMP=0x00100000000f334c
- (void)handleConversation:(id)arg1 receivedBlobRecoveryResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f2fd1
- (void)handleConversation:(id)arg1 receivedBlobRecoveryRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f2c34
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;	// IMP=0x00100000000f2805
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;	// IMP=0x00100000000f23d6
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;	// IMP=0x00100000000f1d68
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;	// IMP=0x00100000000f1c64
- (void)notifyDelegatesOfUpdatePendingConversations;	// IMP=0x00100000000f19a5
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;	// IMP=0x00100000000f16a6
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;	// IMP=0x00100000000f141e
- (void);	// IMP=0x00100000000f0fa6
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f0ae6
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;	// IMP=0x00100000000f056f
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;	// IMP=0x00100000000f0130
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 avMode:(unsigned long long)arg13 presentationMode:(unsigned long long)arg14 provider:(id)arg15;	// IMP=0x00100000000efd61
- (id)conversationLinkForGroupUUID:(id)arg1;	// IMP=0x00100000000efb61
- (id)conversationLinkForPseudonym:(id)arg1;	// IMP=0x00100000000ef9e0
- (id)findConversationLinkMatchingPseudonym:(id)arg1;	// IMP=0x00100000000ef7e0
- (id)pendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000ef582
- (id)activeApprovedConversationWithLink:(id)arg1;	// IMP=0x00100000000ef1e4
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x00100000000eee94
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;	// IMP=0x00100000000eec0c
- (id)conversationWithGroupUUID:(id)arg1;	// IMP=0x00100000000ee9eb
- (id)conversationWithGroupUUID:(id)arg1 andProvider:(id)arg2;	// IMP=0x00100000000ee7ca
- (id)activeConversation;	// IMP=0x00100000000ee622
- (void)removeAllPendingConversations;	// IMP=0x00100000000ee570
- (id)_removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000ee428
- (id)removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000ee2a7
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;	// IMP=0x00100000000ede8f
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 avMode:(unsigned long long)arg16 presentationMode:(unsigned long long)arg17 provider:(id)arg18;	// IMP=0x00100000000ecdb3
- (id)localMemberForProvider:(id)arg1 fromHandle:(id)arg2 members:(id)arg3 lightweightMembers:(id)arg4 activeLocalHandles:(id)arg5;	// IMP=0x00100000000ec87a
- (id)callerIDForLocalMember:(id)arg1;	// IMP=0x00100000000ec866
- (id)callerIDForLocalMember:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000000ec743
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1;	// IMP=0x00100000000ec51b
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;	// IMP=0x00100000000ec2f3
- (_Bool)isHandleStringLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000ec203
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;	// IMP=0x00100000000ec1ef
- (_Bool)isHandleLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000ec172
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2 provider:(id)arg3;	// IMP=0x00100000000ec0ea
- (_Bool)isValidLocalHandle:(id)arg1;	// IMP=0x00100000000ec053
- (_Bool)isValidLocalHandle:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000000ebfbc
- (_Bool)shouldIgnoreMessageForConversation:(id)arg1;	// IMP=0x00100000000ebce6
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 invitationResolver:(id)arg6 pendingMembershipTracker:(id)arg7 featureFlags:(id)arg8 applicationPolicyManager:(id)arg9;	// IMP=0x00100000000ea0b5
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 invitationResolver:(id)arg5 pendingMembershipTracker:(id)arg6 featureFlags:(id)arg7;	// IMP=0x00100000000ea07c
- (id)init;	// IMP=0x00100000000ea051
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2 invitationResolver:(id)arg3;	// IMP=0x00100000000e9f24

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

