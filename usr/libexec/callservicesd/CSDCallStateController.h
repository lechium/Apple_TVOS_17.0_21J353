//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallFilterController, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRouteController, CSDVoIPApplicationController, IMNicknameProvider, NSArray, NSMutableDictionary, NSNumber, NSString, NSXPCListenerEndpoint, TUCallCenter, TUHardwareControlsBroadcaster;
@protocol CSDCallContainer, CSDConversationServerBag, CSDProcessObserverProtocol, CSDRelayMessagingController, OS_dispatch_queue, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryManager *_callHistoryManager;	// 8 = 0x8
    CSDCallProviderManager *_callProviderManager;	// 16 = 0x10
    CSDCallController *_callController;	// 24 = 0x18
    CSDVoIPApplicationController *_voipApplicationController;	// 32 = 0x20
    id <CSDRelayMessagingController> _relayMessagingController;	// 40 = 0x28
    CSDRecentsController *_recentsController;	// 48 = 0x30
    CSDAudioController *_audioController;	// 56 = 0x38
    CSDAudioArbitrationController *_audioArbitrationController;	// 64 = 0x40
    CSDRouteController *_localRouteController;	// 72 = 0x48
    CSDRouteController *_pairedHostDeviceRouteController;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_queue;	// 88 = 0x58
    id <CSDConversationServerBag> _serverBag;	// 96 = 0x60
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 104 = 0x68
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 112 = 0x70
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 120 = 0x78
    CSDRelayCallDataSource *_relayCallDataSource;	// 128 = 0x80
    CSDRelayCallDelegate *_relayCallDelegate;	// 136 = 0x88
    CSDClientManager *_clientManager;	// 144 = 0x90
    TUHardwareControlsBroadcaster *_hardwareControlsBroadcaster;	// 152 = 0x98
    id <CSDProcessObserverProtocol> _processObserver;	// 160 = 0xa0
    IMNicknameProvider *_nicknameProvider;	// 168 = 0xa8
    NSArray *_currentUpdatesForScreening;	// 176 = 0xb0
    NSMutableDictionary *_pendingCallInfoDict;	// 184 = 0xb8
    NSXPCListenerEndpoint *_uiXPCEndpoint;	// 192 = 0xc0
    id <TUFeatureFlags> _featureFlags;	// 200 = 0xc8
    CDUnknownBlockType _clientInvalidationHandler;	// 208 = 0xd0
    CSDProviderCallDataSource *_providerCallDataSource;	// 216 = 0xd8
    NSNumber *;	// 224 = 0xe0
}

+ (void)sanitizeJoinConversationRequest:(id)arg1;	// IMP=0x002000000014e2f6
- (void).cxx_destruct;	// IMP=0x002000000015da49
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(retain, nonatomic) NSXPCListenerEndpoint *uiXPCEndpoint; // @synthesize uiXPCEndpoint=_uiXPCEndpoint;
@property(retain, nonatomic) NSMutableDictionary *pendingCallInfoDict; // @synthesize pendingCallInfoDict=_pendingCallInfoDict;
@property(retain, nonatomic) NSArray *currentUpdatesForScreening; // @synthesize currentUpdatesForScreening=_currentUpdatesForScreening;
@property(retain, nonatomic) IMNicknameProvider *nicknameProvider; // @synthesize nicknameProvider=_nicknameProvider;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUHardwareControlsBroadcaster *hardwareControlsBroadcaster; // @synthesize hardwareControlsBroadcaster=_hardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) id <CSDConversationServerBag> serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) id <CSDRelayMessagingController> relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
- (_Bool)isInCallUIActive;	// IMP=0x001000000015d874
- (void)updateAudioArbitration;	// IMP=0x001000000015d86e
- (_Bool)_hasAlreadyDeniedSendingNameAndPhotoToHandles:(id)arg1;	// IMP=0x001000000015d4d4
- (_Bool)_sharingAudienceAllowsAutoSendNameAndPhoto;	// IMP=0x001000000015d4cc
- (_Bool)_nameAndPhotoSharingEnabled;	// IMP=0x001000000015d481
- (id)_contactForHandle:(id)arg1 contactStore:(id)arg2;	// IMP=0x001000000015d46c
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 isDefaultProvider:(_Bool)arg2;	// IMP=0x001000000015cd5a
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 conversationProvider:(id)arg2;	// IMP=0x001000000015cca2
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 callProvider:(id)arg2;	// IMP=0x001000000015cbea
- (void)sendNameAndPhotoToHandles:(id)arg1;	// IMP=0x001000000015c7f1
- (void)sendNameAndPhotoToHandle:(id)arg1;	// IMP=0x001000000015c6fc
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x001000000015c660
- (void)didChangeRelayCallingCapabilities;	// IMP=0x001000000015c5ea
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x001000000015c5e4
- (void)callHistoryManager:(id)arg1 recentCallRequestedFor:(id)arg2 withStartDate:(id)arg3;	// IMP=0x001000000015c559
- (oneway void)defaultGreeting:(CDUnknownBlockType)arg1;	// IMP=0x001000000015c4d7
- (oneway void)deleteCustomGreetingForAccountUUID:(id)arg1;	// IMP=0x001000000015c47b
- (oneway void)saveCustomSandboxedURLGreeting:(id)arg1 forAccountUUID:(id)arg2;	// IMP=0x001000000015c41f
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000015c2e5
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x001000000015c1bf
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x001000000015bf12
- (id)currentCallsForClient:(id)arg1;	// IMP=0x001000000015be4e
- (id)callForClient:(id)arg1 usingCall:(id)arg2;	// IMP=0x001000000015bdb9
- (id)currentProxyCalls;	// IMP=0x001000000015bb9d
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x001000000015bb34
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000015b9f8
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000015b8fd
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000015b791
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x001000000015b68c
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000015b485
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000015b269
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000015b16e
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000015af67
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000015ae67
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000015ac7c
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x001000000015aab0
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x001000000015a8e4
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000015a78a
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000015a630
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x001000000015a44f
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x001000000015a26e
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000015a0d5
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;	// IMP=0x0010000000159fde
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x0010000000159fd8
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x0010000000159fd2
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x0010000000159fcc
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x0010000000159d60
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x0010000000159b1f
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x00100000001598f4
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x00100000001596f9
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x00100000001594c0
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x00100000001593a3
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x001000000015927a
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000015903c
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x0010000000158eab
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000158cce
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x0010000000158ba5
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000158a14
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000015874e
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000158488
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000158177
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000157eb1
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000157be7
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x0010000000157a56
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000015773b
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x00100000001575aa
- (oneway void)pullRelayingGFTCallsFromClientIfNecessary;	// IMP=0x0010000000157471
- (oneway void)pullRelayingCallsFromClient;	// IMP=0x001000000015733e
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000015713f
- (oneway void)disconnectAllCalls;	// IMP=0x0010000000157016
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x0010000000156eed
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x0010000000156c23
- (oneway void)swapCalls;	// IMP=0x0010000000156afa
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000015684c
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000156473
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000015619d
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000155ba6
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001558f8
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000015564a
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x00100000001552be
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001551d4
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000154ff6
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000154c6a
- (void)screenUpdate:(id)arg1 withProvider:(id)arg2 callSource:(id)arg3 callUUID:(id)arg4;	// IMP=0x0010000000154ac8
- (oneway void)fetchAnonymousXPCEndpoint:(CDUnknownBlockType)arg1;	// IMP=0x00100000001549e9
- (oneway void)registerAnonymousXPCEndpoint:(id)arg1;	// IMP=0x00100000001546e8
- (oneway void)screenWithRequest:(id)arg1;	// IMP=0x0010000000154183
- (oneway void)fetchCurrentCallUpdates:(CDUnknownBlockType)arg1;	// IMP=0x0010000000153f42
- (void)_launchICSForScreeningIfNeeded;	// IMP=0x0010000000153f3c
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x0010000000153be2
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x0010000000153b2e
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x00100000001538c5
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000153672
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x0010000000153609
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000153506
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x0010000000153298
- (void);	// IMP=0x00100000001530b7
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x0010000000153033
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x0010000000152fca
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2 onlyIfNeedsEndpointGFTRelaySupport:(_Bool)arg3;	// IMP=0x0010000000152cbc
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x0010000000152ca7
- (void)performDisconnectAllCalls;	// IMP=0x00100000001529b0
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x0010000000151df0
- (void)performDisconnectCall:(id)arg1;	// IMP=0x0010000000151a37
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x00100000001519b1
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015192b
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x00100000001510c3
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x00100000001508bf
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x00100000001500fc
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x001000000014ff2b
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000014fcc2
- (void)performSwapCalls;	// IMP=0x001000000014f6a7
- (void)performUngroupCall:(id)arg1;	// IMP=0x001000000014f2f9
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x001000000014ef02
- (void)performUnholdCall:(id)arg1;	// IMP=0x001000000014ed13
- (void)performHoldCall:(id)arg1;	// IMP=0x001000000014eb24
- (id)performJoinConversation:(id)arg1;	// IMP=0x001000000014e939
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000014dfb1
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x001000000014dd4a
- (id)outgoingCallFromJoinRequest:(id)arg1;	// IMP=0x001000000014dc80
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x001000000014dbcd
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x001000000014d4bb
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014d37c
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x001000000014d2fb
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x001000000014d235
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014d1c1
- (void)_handleCallRemoteParticipantHandlesChangedNotification:(id)arg1;	// IMP=0x001000000014d082
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014cf9d
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014ce86
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014ccb3
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014cc16
- (void)_handleGroupUUIDChangeForHostedCall:(id)arg1;	// IMP=0x001000000014cb57
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000014c879
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x001000000014c5ff
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x001000000014c125
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x001000000014c11f
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x001000000014bfc4
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x001000000014be82
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x001000000014bd3a
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x001000000014bba7
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x001000000014ba48
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x001000000014b93e
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x001000000014b7fc
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x001000000014b628
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x001000000014b4d2
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x001000000014b390
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x001000000014b26c
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x001000000014b124
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x001000000014afc0
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x001000000014ac30
- (void)_handleGroupUUIDChangedNotification:(id)arg1;	// IMP=0x001000000014ab0c
- (void)_handleSupportsEmergencyFallbackChangedNotification:(id)arg1;	// IMP=0x001000000014a997
- (void)_handleFailureExpectedChangedNotification:(id)arg1;	// IMP=0x001000000014a822
- (void)_handleMixesVoiceWithMediaChangedNotification:(id)arg1;	// IMP=0x001000000014a702
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x001000000014a57e
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x001000000014a409
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x001000000014a2c7
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x001000000014a185
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x0010000000149efd
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x0010000000149ee8
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x0010000000149ed1
- (void)resetClientCallProvisionalStates;	// IMP=0x0010000000149dd4
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000149b2c
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000149818
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x0010000000149559
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x0010000000149372
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x0010000000148d66
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x0010000000148b14
- (_Bool)_shouldLaunchInCallApplicationForProviderOfCall:(id)arg1;	// IMP=0x0010000000148b0c
- (void)_launchInCallApplicationForCall:(id)arg1 withURL:(id)arg2;	// IMP=0x001000000014898c
- (void)_launchInCallApplicationForAnsweringCallIfNecessary:(id)arg1;	// IMP=0x0010000000148986
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x0010000000148980
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x0010000000148902
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x00100000001488fc
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x00100000001487a3
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x00100000001485cf
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x0010000000148478
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x0010000000147bfb
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x0010000000147970
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x0010000000147968
- (void)_requestCallStateFromHost;	// IMP=0x0010000000147962
- (void)_handleRelayCallingChanged;	// IMP=0x001000000014740f
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
@property(readonly, nonatomic) CSDCallFilterController *callFilterController;
@property(readonly, nonatomic) id <CSDCallContainer> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)registerForSecureMicEvents;	// IMP=0x0010000000147079
- (void)dealloc;	// IMP=0x0010000000146f96
- (void)invalidate;	// IMP=0x00100000001469f1
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2 serverBag:(id)arg3 chManager:(id)arg4;	// IMP=0x0010000000145810
- (id)init;	// IMP=0x00100000001450b0
- (id)initWithQueue:(id)arg1;	// IMP=0x0010000000145011
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2 chManager:(id)arg3;	// IMP=0x0010000000144f72

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

