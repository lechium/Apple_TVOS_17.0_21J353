//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class GKPseudonymManager, NSString, _TtC14GameDaemonCore13GameDaemonTTR;
@protocol GKNearbyDelegate;

@interface GKMultiplayerMatchService
{
    GKPseudonymManager *_pseudonymManager;	// 8 = 0x8
    id <GKNearbyDelegate> _delegate;	// 16 = 0x10
    _TtC14GameDaemonCore13GameDaemonTTR *_ttrHelper;	// 24 = 0x18
}

+ (id)makePlayersDictionaryForMatchRequest:(id)arg1 transportContext:(id)arg2;	// IMP=0x002000000008df55
+ (id)makeBaseServerRequestForMatchRequest:(id)arg1 playerCount:(long long)arg2 rematchID:(id)arg3 connInfo:(long long)arg4;	// IMP=0x001000000008dad0
+ (unsigned long long)requiredEntitlements;	// IMP=0x001000000008c502
+ (Class)interfaceClass;	// IMP=0x001000000008c4f1
- (void).cxx_destruct;	// IMP=0x00200000000a529f
@property(retain, nonatomic) _TtC14GameDaemonCore13GameDaemonTTR *ttrHelper; // @synthesize ttrHelper=_ttrHelper;
@property(nonatomic) __weak id <GKNearbyDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GKPseudonymManager *pseudonymManager; // @synthesize pseudonymManager=_pseudonymManager;
- (oneway void)uploadLogsForRadar:(id)arg1 from:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a4ed6
- (oneway void)fileMultiplayerTTRWithCallBackIdentifier:(id)arg1 descriptionAddition:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a4b79
- (oneway void)rolloutPseudonyms;	// IMP=0x00100000000a4b3c
- (oneway void)sendDataToParticipant:(id)arg1 deviceID:(id)arg2 data:(id)arg3 usePeerDiscovery:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000a46d1
- (oneway void)forgetParticipant:(id)arg1 deviceID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a4512
- (oneway void)setupNearbyDiscovery;	// IMP=0x00100000000a36b2
- (oneway void)fetchTransportOverrideWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a34b0
- (oneway void)isGameCenterMultiplayerGameForBundleID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a3227
- (oneway void)fetchOnDeviceMultiplayerBundleIDsWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a2dc9
- (oneway void)fetchOnDeviceMultiplayerBundleIDsForNewBundleID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a290a
- (oneway void)fetchDevicePushToken:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a274e
- (oneway void)nearbyInviteWasCancelled:(id)arg1;	// IMP=0x00100000000a26e1
- (oneway void)presentNearbyInvite:(id)arg1;	// IMP=0x00100000000a2674
- (oneway void)stopNearbyAdvertisingWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a2122
- (oneway void)startNearbyAdvertisingWithDiscoveryInfo:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a1b74
- (oneway void)stopNearbyBrowsingWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a1622
- (oneway void)startNearbyBrowsingWithPlayerID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a10b7
- (oneway void)updateCacheWithNearbyProfileDictionary:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a0742
- (oneway void)cancelRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a054d
- (oneway void)updateRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a01d0
- (oneway void)initiateRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009fe53
- (oneway void)_performRelayAction:(id)arg1 request:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009fa60
- (oneway void)requestTTRLogsWith:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009ecf0
- (oneway void)sendInvitationUpdate:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009df94
- (oneway void)sendReconnectInvitation:(id)arg1 toPlayer:(id)arg2 connectionData:(id)arg3 sessionToken:(id)arg4 pushToken:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000009d45a
- (oneway void)removeInviteSessionIfNeeded;	// IMP=0x001000000009d13b
- (oneway void)removeInviteSession;	// IMP=0x001000000009d0fe
- (oneway void)getInviteSessionTokenWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009cf3d
- (oneway void)getPlayersToInviteWithHandlerV2:(CDUnknownBlockType)arg1;	// IMP=0x001000000009cb65
- (oneway void)hasCanceledMultiplayerInitiateBulletinForSessionToken:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000009c979
- (oneway void)getAcceptedGameInviteWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009c111
- (oneway void)declineGameInvite:(id)arg1 reason:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009bd15
- (oneway void)acceptGameInvite:(id)arg1 transportContext:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009acfa
- (oneway void)putMultiPlayerGroup:(id)arg1 participants:(id)arg2 playedAt:(long long)arg3 bundleID:(id)arg4 numberOfAutomatched:(long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000009a661
- (oneway void)getMultiPlayerGroups:(CDUnknownBlockType)arg1;	// IMP=0x0010000000099509
- (void)convertToInternalObjects:(id)arg1 results:(id)arg2;	// IMP=0x0010000000099090
- (id)ensureGroup:(id)arg1 participants:(id)arg2 playedAt:(long long)arg3 numberOfAutomatched:(long long)arg4 moc:(id)arg5 list:(id)arg6;	// IMP=0x0010000000098bb1
- (oneway void)cancelGameInviteWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009867c
- (oneway void)removePlayersFromGameInviteV2:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000097db0
- (oneway void)invitePlayersForMatchRequest:(id)arg1 devicePushTokenMap:(id)arg2 isNearbyInvite:(_Bool)arg3 transportContext:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000095ab6
- (void)saveRecord:(id)arg1 shouldRetry:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000957cc
- (_Bool)zoneNotFoundFromOperation:(id)arg1 operationError:(id)arg2;	// IMP=0x0010000000095467
- (void)saveRecord:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009544d
- (id)privateDatabase;	// IMP=0x00100000000953ef
- (void)setupInviteShareWithRecordID:(id)arg1 rootRecord:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000953d4
- (void)setupInviteShareWithRecordID:(id)arg1 rootRecord:(id)arg2 shouldRetry:(_Bool)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000094e38
- (oneway void)loadCloudKitShareURLWithPlayer:(id)arg1 matchRequest:(id)arg2 transportContext:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000932f3
- (void)initiateInvitationForMatchRequest:(id)arg1 recipients:(id)arg2 devicePushTokenMap:(id)arg3 isNearbyInvite:(_Bool)arg4 transportContext:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x00100000000916bc
- (oneway void)setShareRecordID:(id)arg1;	// IMP=0x001000000009162c
- (oneway void)hasExistingInviteSessionWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000915a1
- (oneway void)setShareInvitees:(id)arg1;	// IMP=0x0010000000090bc9
- (oneway void)getCompatibilityMatrix:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008fcfb
- (oneway void)getFlowRateWithPlayerGroup:(id)arg1 queueName:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000008eb68
- (oneway void)getFlowRateForQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008eb4e
- (oneway void)getOverallFlowRateWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008eb35
- (oneway void)getFlowRateForPlayerGroup:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008eab4
- (oneway void)cancelOutstandingMatchRequestWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008e634
- (oneway void)getPlayersForMatchRequest:(id)arg1 playerCount:(long long)arg2 rematchID:(id)arg3 transportContext:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000008cd1e
- (void)fetchPseudonymIfNeededWithTransportContext:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008c64a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

