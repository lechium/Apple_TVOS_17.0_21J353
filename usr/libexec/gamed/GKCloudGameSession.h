//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, GKCloudPlayer, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSURL;

@interface GKCloudGameSession : NSObject
{
    CKRecord *_record;	// 8 = 0x8
    NSDictionary *_playersByIdentifier;	// 16 = 0x10
    GKCloudPlayer *_owner;	// 24 = 0x18
    NSURL *_url;	// 32 = 0x20
}

+ (void)badgeCountForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00200000000e03a7
+ (void)updateBadgeCountsForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2;	// IMP=0x00100000000dffcd
+ (void)updateBadgeCountsForContainerName:(id)arg1;	// IMP=0x00100000000dffb9
+ (void)deleteInviteRecordWithRecordID:(id)arg1 fromDatabase:(id)arg2;	// IMP=0x00100000000dfc15
+ (void)searchAndSaveIdentityForRecord:(id)arg1 database:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dfc0f
+ (_Bool)shouldRetryForError:(id)arg1 andRetryCount:(int)arg2;	// IMP=0x00100000000df7a7
+ (void)saveInviteRecord:(id)arg1 database:(id)arg2 retryCount:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000deaa5
+ (void)getAssociatedAccountsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dea9f
+ (id)msgServiceQueue;	// IMP=0x00100000000dea48
+ (void)generateAndStoreInviteBulletinForRecord:(id)arg1 database:(id)arg2;	// IMP=0x00100000000ddd51
+ (id)packFakeTurnBasedBulletinWithZoneData:(id)arg1;	// IMP=0x00100000000dd794
+ (id)packFakeRealTimeBulletinWithZoneData:(id)arg1;	// IMP=0x00100000000dc843
+ (void)reportPlayerStateChangesToClients:(id)arg1 forUpdatedSession:(id)arg2 oldSession:(id)arg3;	// IMP=0x00100000000db401
+ (void)openStoreForBundleID:(id)arg1;	// IMP=0x00100000000da03b
+ (void)launchOrOpenAppStoreForBundleID:(id)arg1;	// IMP=0x00100000000d9fed
+ (void)acceptShareMetadata:(id)arg1 retryCount:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d97fa
+ (void)showAcceptAlertWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d96d5
+ (void)handleLegacyShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d8bf7
+ (void)handleSessionShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d8349
+ (void)handleCloudKitShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d7b85
+ (void)acceptShareURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d7809
+ (void)saveInformationForPrimaryUserForSessionWithShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d6f20
+ (void)fetchShareMetadataForURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d6ab2
+ (void)fetchShareRecordsWithRecordIDs:(id)arg1 inDatabase:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d6990
+ (id)cloudKitOperationConfigurationForSocialGamingSessionsContainer;	// IMP=0x00100000000d5802
+ (id)cloudKitOperationConfigurationForContainer:(id)arg1;	// IMP=0x00100000000d5778
+ (void)subscribeToAllDBwithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d5258
+ (void)getZoneNamesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d4c96
+ (void)createZoneWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d4aa6
+ (void)bundleIDsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d387a
+ (void)removeSessionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d305f
+ (void)createSessionWithContainerName:(id)arg1 title:(id)arg2 maxConnectedPlayers:(long long)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000d2434
+ (_Bool)isCloudDriveEnabledForBundleID:(id)arg1;	// IMP=0x00100000000d2115
+ (id)databaseForZoneID:(id)arg1;	// IMP=0x00100000000d20c9
+ (id)databaseForSession:(id)arg1;	// IMP=0x00100000000d207a
+ (id)sharedDatabase;	// IMP=0x00100000000d201c
+ (id)privateDatabase;	// IMP=0x00100000000d1fbe
+ (_Bool)isOwnZoneID:(id)arg1;	// IMP=0x00100000000d1e9e
+ (_Bool)isOwnRecordID:(id)arg1;	// IMP=0x00100000000d1e4a
+ (id)recordIDForSessionIdentifier:(id)arg1;	// IMP=0x00100000000d1c08
+ (id)sessionIdentifierForRecordID:(id)arg1;	// IMP=0x00100000000d1a24
+ (id)allowedCharacterSet;	// IMP=0x00000000000d1963
+ (void)getFriendPlayersWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d12d5
+ (void)updateFriendRecordIfNeeded;	// IMP=0x00100000000d0a80
+ (void)updateFriendsWithRecord:(id)arg1;	// IMP=0x00100000000d0397
+ (void)updateCacheForFriendZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000cfd82
+ (void)updatePlayersForSessions:(id)arg1 sharesByRecordID:(id)arg2 inDatabase:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000ceaf3
+ (void)primaryPlayerWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cea30
+ (id)playerIdentifierForUserRecordName:(id)arg1;	// IMP=0x00100000000ce963
+ (id)localPlayerAlias;	// IMP=0x00100000000ce6ae
+ (void)determinePlayerChangesIn:(id)arg1 newSession:(id)arg2 notifyClients:(id)arg3;	// IMP=0x00100000000cdea2
+ (void)reportChangesForSessions:(id)arg1 shareChangedSessions:(id)arg2 removedSessions:(id)arg3 zoneID:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000ccf07
+ (id)allChangedSessionsFromRecordChangedSessions:(id)arg1 shareChangedSessions:(id)arg2;	// IMP=0x00100000000cca69
+ (void)updateCacheForDatabase:(id)arg1 zoneIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000cb163
+ (void)updateCacheForDatabaseScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000c9b04
+ (void)updateCacheForZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000c972f
+ (void)updateSessionCacheDatabasesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000c9364
+ (void)updateSessionCacheWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000c8f07
+ (void)updateUserWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000c8e9e
+ (void)fetchUserRecordIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000c8e2a
+ (id)friendEmailsByID;	// IMP=0x00100000000c8dda
+ (void)sessionForShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000c8d3e
+ (void)sessionsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000c8995
+ (void)sessionForIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000c857f
+ (id)cacheQueue;	// IMP=0x00100000000c8528
+ (id)sessionCache;	// IMP=0x00100000000c84d3
+ (id)AES128Operation:(unsigned int)arg1 key:(id)arg2 data:(id)arg3;	// IMP=0x00100000000c8383
+ (id)AES128DecryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x00100000000c8369
+ (id)AES128EncryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x00100000000c8352
+ (id)playerIdentifierForObfuscatedIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x00100000000c8251
+ (id)obfuscatedIdentifierForPlayerIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x00100000000c8163
+ (id)mutablePlistFromPlayerStatesData:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000c735f
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000000c67d4
- (void).cxx_destruct;	// IMP=0x00200000000e15a5
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) GKCloudPlayer *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSDictionary *playersByIdentifier; // @synthesize playersByIdentifier=_playersByIdentifier;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void)setBadged:(_Bool)arg1 forPlayerIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e0be5
- (void)saveConnectionState:(long long)arg1 forPlayerWithID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dbf95
- (void)tempEmailFixForPlayerID:(id)arg1;	// IMP=0x00100000000dbe0c
@property(readonly, nonatomic) NSArray *connectedPlayerIDs;
- (void)removePlayers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000da7e6
- (void)deleteShareWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000da435
- (void)fetchShareRecordWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d6794
- (void)saveShare:(id)arg1 isNewShare:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d630e
- (void)setupShareWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d60d4
- (void)getShareURLWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d58de
- (void)saveWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d47aa
- (void)saveData:(id)arg1 changeTag:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d3eea
@property(readonly, nonatomic) NSString *containerName;
- (id)playersForGKGameSession;	// IMP=0x00100000000cf9f4
- (id)players;	// IMP=0x00100000000cf9a4
- (void)setPlayers:(id)arg1;	// IMP=0x00100000000cf79f
- (void)updatePlayersWithIdentities:(id)arg1;	// IMP=0x00100000000cf48e
- (id)createGKGameSession;	// IMP=0x00100000000c7a89
@property(retain, nonatomic) NSMutableDictionary *nicknamesByIdentifier; // @dynamic nicknamesByIdentifier;
@property(retain, nonatomic) NSMutableDictionary *emailsByCKID;
@property(readonly, nonatomic) NSDictionary *playersByEmail;
- (id)playerStates;	// IMP=0x00100000000c73af
- (void)setPlayerStates:(id)arg1;	// IMP=0x00100000000c72ef
@property(readonly, nonatomic) NSString *serverChangeTag;
@property(readonly, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property(readonly, nonatomic) NSDate *lastModifiedDate;
@property(retain, nonatomic) NSData *data;
@property(nonatomic) long long maxConnectedPlayers;
@property(retain, nonatomic) NSString *title;
@property(readonly, nonatomic) NSString *identifier;
- (_Bool)isOwnedByUser;	// IMP=0x00100000000c6ca2
- (id)description;	// IMP=0x00100000000c6b6c
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00100000000c6a89
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000000c67dc
- (id)initWithRecord:(id)arg1;	// IMP=0x00100000000c676c
- (id)initWithContainerName:(id)arg1;	// IMP=0x00100000000c66b8

@end

