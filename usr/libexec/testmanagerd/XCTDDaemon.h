//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSXPCListener, XCTestManagerIDEServer;
@protocol OS_dispatch_queue, OS_dispatch_source, XCTDDiagnosticsProviding;

@interface XCTDDaemon : NSObject
{
    XCTestManagerIDEServer *_ideServer;	// 8 = 0x8
    NSXPCListener *_testBundleConnectionListener;	// 16 = 0x10
    NSXPCListener *_testTargetBootstrapConnectionListener;	// 24 = 0x18
    NSMutableDictionary *_sessionsByIdentifier;	// 32 = 0x20
    NSMutableArray *_unidentifiedSessions;	// 40 = 0x28
    NSMutableArray *_controlSessions;	// 48 = 0x30
    NSMutableArray *_testSessions;	// 56 = 0x38
    NSMutableSet *_remoteAutomationSessions;	// 64 = 0x40
    NSMutableDictionary *_pendingTestConnectionRequests;	// 72 = 0x48
    NSObject<OS_dispatch_queue> *_queue;	// 80 = 0x50
    NSMutableDictionary *_pendingTargetPIDs;	// 88 = 0x58
    NSMutableDictionary *_targetSessionRequestsByPID;	// 96 = 0x60
    NSMutableDictionary *_targetSessionsByPID;	// 104 = 0x68
    NSMutableDictionary *_observationBlocksForTransportHandoff;	// 112 = 0x70
    NSMutableDictionary *_connectionTransferResultsByPID;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_userSignalSource;	// 128 = 0x80
    NSObject<OS_dispatch_source> *_sigtermSource;	// 136 = 0x88
    id <XCTDDiagnosticsProviding> _diagnosticsProvider;	// 144 = 0x90
}

+ (id)dataContainerRelativePathForURL:(id)arg1;	// IMP=0x0020000000030532
+ (id)userName;	// IMP=0x00100000000304e9
+ (id)dataContainerURLPrefix;	// IMP=0x00100000000303b9
+ (id)attachmentsDirectory;	// IMP=0x0010000000030356
+ (void)setDataContainerRootURL:(id)arg1;	// IMP=0x0010000000030342
+ (id)dataContainerRootURL;	// IMP=0x0010000000030331
- (void).cxx_destruct;	// IMP=0x0020000000034b21
@property(readonly) id <XCTDDiagnosticsProviding> diagnosticsProvider; // @synthesize diagnosticsProvider=_diagnosticsProvider;
@property(retain) NSObject<OS_dispatch_source> *sigtermSource; // @synthesize sigtermSource=_sigtermSource;
@property(retain) NSObject<OS_dispatch_source> *userSignalSource; // @synthesize userSignalSource=_userSignalSource;
@property(retain) NSMutableDictionary *connectionTransferResultsByPID; // @synthesize connectionTransferResultsByPID=_connectionTransferResultsByPID;
@property(retain) NSMutableDictionary *observationBlocksForTransportHandoff; // @synthesize observationBlocksForTransportHandoff=_observationBlocksForTransportHandoff;
@property(retain) NSMutableDictionary *targetSessionsByPID; // @synthesize targetSessionsByPID=_targetSessionsByPID;
@property(retain) NSMutableDictionary *targetSessionRequestsByPID; // @synthesize targetSessionRequestsByPID=_targetSessionRequestsByPID;
@property(retain) NSMutableDictionary *pendingTargetPIDs; // @synthesize pendingTargetPIDs=_pendingTargetPIDs;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSMutableDictionary *pendingTestConnectionRequests; // @synthesize pendingTestConnectionRequests=_pendingTestConnectionRequests;
@property(retain) NSMutableSet *remoteAutomationSessions; // @synthesize remoteAutomationSessions=_remoteAutomationSessions;
@property(retain) NSMutableArray *testSessions; // @synthesize testSessions=_testSessions;
@property(retain) NSMutableArray *controlSessions; // @synthesize controlSessions=_controlSessions;
@property(retain) NSMutableArray *unidentifiedSessions; // @synthesize unidentifiedSessions=_unidentifiedSessions;
@property(retain) NSMutableDictionary *sessionsByIdentifier; // @synthesize sessionsByIdentifier=_sessionsByIdentifier;
@property(retain) NSXPCListener *testTargetBootstrapConnectionListener; // @synthesize testTargetBootstrapConnectionListener=_testTargetBootstrapConnectionListener;
@property(retain) NSXPCListener *testBundleConnectionListener; // @synthesize testBundleConnectionListener=_testBundleConnectionListener;
@property(retain) XCTestManagerIDEServer *ideServer; // @synthesize ideServer=_ideServer;
- (void)_queue_logStatus;	// IMP=0x00100000000343ac
- (void)_queue_closeTestSession:(id)arg1;	// IMP=0x0010000000034237
- (void)closeTestSession:(id)arg1;	// IMP=0x0010000000034161
- (void)closeIDESession:(id)arg1;	// IMP=0x0010000000033c7d
- (void)closeTargetBootstrapSession:(id)arg1;	// IMP=0x0010000000033a1a
- (void)_queue_fulfillTestConnectionRequest:(CDUnknownBlockType)arg1 usingIDESession:(id)arg2;	// IMP=0x00100000000338d6
- (void)_queue_handleRequestForSessionWithIdentifier:(id)arg1;	// IMP=0x001000000003377b
- (void)_queue_advertiseAvailabilityToTargetWithPID:(int)arg1;	// IMP=0x00100000000334d3
- (void)_queue_processTargetSessionRequests;	// IMP=0x0010000000033080
- (void)_queue_requestTargetBootstrapSessionForPID:(int)arg1 timeout:(double)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000032c65
- (void)requestTargetBootstrapSessionForPID:(int)arg1 timeout:(double)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000032b78
- (void)_queue_processPendingTransferObservationBlocks;	// IMP=0x00100000000327b2
- (void)setObserverForConnectionTransferToTargetWithPID:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000325ef
- (void)connectionTransferToTargetWithPID:(int)arg1 completedWithSuccess:(_Bool)arg2 error:(id)arg3;	// IMP=0x00100000000323db
- (void)requestSerializedTransportForSessionIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000321e4
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0010000000031ec1
- (void)addTargetBootstrapSession:(id)arg1;	// IMP=0x0010000000031b9e
- (void)setIDESession:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x0010000000031770
- (void)controlSession:(id)arg1 didAuthorizeProcessID:(int)arg2;	// IMP=0x00100000000316e8
- (void)addControlSession:(id)arg1;	// IMP=0x00100000000314fb
- (void)remoteAutomationSessionDidClose:(id)arg1;	// IMP=0x00100000000313e0
- (void)serverDidHandleDisconnectForSocket:(int)arg1;	// IMP=0x00100000000313da
- (void)serverReceivedConnectionForServiceType:(unsigned long long)arg1 overSocket:(int)arg2 effectiveUserIdentifier:(unsigned int)arg3 clientPrivilege:(unsigned long long)arg4 disconnectionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000031003
- (void)reportSelfDiagnosisIssue:(id)arg1 description:(id)arg2;	// IMP=0x0010000000030f2c
- (void)setupSignalHandlers;	// IMP=0x0010000000030c18
- (void)run;	// IMP=0x0010000000030a2f
- (void)startAcceptingTargetConnectionsFromListener:(id)arg1;	// IMP=0x0010000000030911
- (void)startAcceptingTestConnectionsFromListener:(id)arg1;	// IMP=0x00100000000307f3
- (id)init;	// IMP=0x001000000003062e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

