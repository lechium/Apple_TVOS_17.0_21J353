//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AFClientConfiguration, AFInstanceContext, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, NSMutableOrderedSet, NSString, NSUUID, NSXPCConnection;
@protocol AFBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <AFBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    NSMutableOrderedSet *_audioSessionAssertions;	// 144 = 0x90
    NSMutableOrderedSet *_speechCapturingContexts;	// 152 = 0x98
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 160 = 0xa0
    AFInstanceContext *_instanceContext;	// 168 = 0xa8
    _Bool adSpeechSessionEnded;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x00200000002b5102
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x00100000002b500f
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00100000002b4f12
- (oneway void)emitHomeMetricInvocationEvent;	// IMP=0x00100000002b4ece
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x00100000002b4ec8
- (oneway void)_refreshAssistantValidation;	// IMP=0x00100000002b4e84
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x00100000002b4e08
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b4d9b
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b4d90
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x00100000002b4d21
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b4c4d
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x00100000002b4b61
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b4a5e
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b494f
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b493a
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b478e
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b4721
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x00100000002b46d0
- (oneway void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x00100000002b458d
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x00100000002b4488
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x00100000002b43a6
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x00100000002b4339
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x00100000002b42c4
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x00100000002b422e
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b4182
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b406f
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b3dc9
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b3d3a
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x00100000002b3cf6
- (oneway void)recordCancellationMetrics;	// IMP=0x00100000002b3cb2
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x00100000002b3c45
- (oneway void)telephonyRequestCompleted;	// IMP=0x00100000002b3c01
- (oneway void)prepareForPhoneCall;	// IMP=0x00100000002b3bbd
- (oneway void)setAlertContextDirty;	// IMP=0x00100000002b3b79
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x00100000002b3aea
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x00100000002b3ad3
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x00100000002b3a32
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x00100000002b39c5
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x00100000002b3958
- (oneway void)rollbackClearContext;	// IMP=0x00100000002b3888
- (oneway void)clearContext;	// IMP=0x00100000002b37a9
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b370e
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b361d
- (oneway void)requestShouldSpeakStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b35c4
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x00100000002b34b2
- (oneway void)cancelSpeech;	// IMP=0x00100000002b33cb
- (oneway void)rollbackRequest;	// IMP=0x00100000002b32f4
- (oneway void)cancelRequestForReason:(long long)arg1 withError:(id)arg2;	// IMP=0x00100000002b3194
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x00100000002b3085
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b2fd5
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b2f25
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x00100000002b2e49
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 sessionUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000002b2bdf
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b2a2b
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b27f7
- (oneway void)endSession;	// IMP=0x00100000002b2657
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x00100000002b253c
- (oneway void)didDismissUI;	// IMP=0x00100000002b2344
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002b20bc
- (oneway void)setModesConfiguration:(id)arg1;	// IMP=0x00100000002b204f
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x00100000002b1ffe
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x00100000002b1fa8
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x00100000002b1f64
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b1e9a
- (oneway void)forceAudioSessionActiveWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b1db7
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002b1d3a
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x00100000002b1cbc
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x00100000002b1c01
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x00100000002b1b24
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x00100000002b1983
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x00100000002b1880
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x00100000002b17c9
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x00100000002b173c
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x00100000002b16af
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerResetNotification:(id)arg2;	// IMP=0x00100000002b15c5
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerLostNotification:(id)arg2;	// IMP=0x00100000002b14db
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002b13f1
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002b1307
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionRouteChangeNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002b125e
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionInterruptionNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002b10bf
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x00100000002b1071
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x00100000002b1016
- (_Bool)adWaitingForAudioFile;	// IMP=0x00100000002b100e
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002b0f6e
- (void)adSpeechRecordingDidDetectStartPointWithContext:(id)arg1;	// IMP=0x00100000002b0f23
- (void)adSpeechLocalRecognitionDidSucceedWithSessionUUID:(id)arg1;	// IMP=0x00100000002b0f1d
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00100000002b0e90
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x00100000002b0e03
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 rawPhrases:(id)arg2 utterances:(id)arg3 rawUtterances:(id)arg4 nluResult:(id)arg5 sessionUUID:(id)arg6 refId:(id)arg7;	// IMP=0x00100000002b0dfd
- (void)adSpeechRecordingDidRecognizePartialPackage:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00100000002b0df7
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00100000002b0df1
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x00100000002b0d64
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00100000002b0cd7
- (void)adSpeechRecordingWillStopWithSignpostID:(unsigned long long)arg1;	// IMP=0x00100000002b0c88
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x00100000002b0b77
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x00100000002b0aa5
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x00100000002b09d3
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x00100000002b08c0
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x00100000002b0723
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x00100000002b066c
- (void)_updateShouldSpeak;	// IMP=0x00100000002b0551
- (_Bool)_shouldSpeak;	// IMP=0x00100000002b052e
- (void)_computeShouldSpeak;	// IMP=0x00100000002b0362
- (void)_unregisterForRingerStateNotification;	// IMP=0x00100000002b033e
- (void)_registerForRingerStateNotification;	// IMP=0x00100000002b0243
- (void)_setServerForcedTTS:(_Bool)arg1;	// IMP=0x00100000002b0200
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x00100000002b01eb
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x00100000002b01d2
- (void)adFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x00100000002b0145
- (void)adWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x00100000002b00b8
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x00100000002b006a
- (void);	// IMP=0x00100000002b001c
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002aff51
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x00100000002aff02
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x00100000002afeb4
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x00100000002afe27
- (void)adInvalidateCurrentUserActivity;	// IMP=0x00100000002afddc
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x00100000002afd25
- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;	// IMP=0x00100000002afcd7
- (void)adMusicWasDetected;	// IMP=0x00100000002afc8c
- (void)adAcousticIDRequestWillStart;	// IMP=0x00100000002afc41
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x00100000002afbf2
- (void)adRequestRequestedDismissAssistantWithReason:(long long)arg1;	// IMP=0x00100000002afba3
- (void)adRequestRequestedDismissAssistant;	// IMP=0x00100000002afb58
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x00100000002afaa1
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x00100000002afa14
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x00100000002af987
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x00100000002af885
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x00100000002af7f8
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002af739
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002af64e
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002af58f
- (void)_adjustSiriVolumeIfNeeded;	// IMP=0x00100000002af589
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x00100000002af46a
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x00100000002af337
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x00100000002af103
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000002aef9c
- (void)adRequestDidUpdateResponseMode:(id)arg1;	// IMP=0x00100000002aef0f
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x00100000002aee82
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x00100000002aeac4
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x00100000002ae9c1
- (void)_removeAllSpeechCapturingContextsForReason:(id)arg1;	// IMP=0x00100000002ae77a
- (void)_addSpeechCapturingContext:(id)arg1;	// IMP=0x00100000002ae677
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x00100000002ae56b
- (void)_speechRecordingDidFinish;	// IMP=0x00100000002ae4d9
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x00100000002ae288
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000002ae1f1
- (id)_serviceDelegate;	// IMP=0x00100000002ae1db
- (void)connectionDisconnected;	// IMP=0x00100000002adf71
- (void)dealloc;	// IMP=0x00100000002ade33
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x00100000002adb46

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

