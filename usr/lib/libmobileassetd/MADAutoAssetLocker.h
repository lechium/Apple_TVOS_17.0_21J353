//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MADAutoAssetPersisted, NSMutableDictionary, SUCoreLog;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MADAutoAssetLocker : NSObject
{
    SUCoreLog *_logger;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_lockerQueue;	// 16 = 0x10
    MADAutoAssetPersisted *_persistedState;	// 24 = 0x18
    NSMutableDictionary *_eliminateSelectors;	// 32 = 0x20
}

+ (id)copyOfSetLocksByDescriptor;	// IMP=0x00600000001d6f54
+ (id)newCurrentSetLockUsageForDescriptor:(id)arg1;	// IMP=0x00600000001d63e6
+ (id)eliminateAllPreviousSetLocksNoLongerTracked:(id)arg1;	// IMP=0x00600000001d615a
+ (id)eliminateAllPreviousSetLocksByClient:(id)arg1 forSetDescriptor:(id)arg2;	// IMP=0x00600000001d5dbd
+ (_Bool)endedAllPreviousSetLocksByClient:(id)arg1 forSetDescriptor:(id)arg2 forLockReason:(id)arg3 endError:(id *)arg4;	// IMP=0x00600000001d537f
+ (_Bool)endedPreviousSetLocksByClient:(id)arg1 forSetDescriptor:(id)arg2 forLockReason:(id)arg3 removingLockCount:(long long)arg4 endError:(id *)arg5;	// IMP=0x00600000001d4875
+ (_Bool)continuedSetLockByClient:(id)arg1 forSetDescriptor:(id)arg2 forLockReason:(id)arg3 withSetUsagePolicy:(id)arg4 continueError:(id *)arg5;	// IMP=0x00600000001d3e20
+ (_Bool)lockedSetByClient:(id)arg1 lockingSetDescriptor:(id)arg2 forLockReason:(id)arg3 withSetUsagePolicy:(id)arg4 lockError:(id *)arg5;	// IMP=0x00600000001d30a7
+ (id)currentSetLockUsageEliminatingOtherThanSetAtomicInstances:(id)arg1;	// IMP=0x00600000001d1b74
+ (void)forceGlobalUnlock:(id)arg1;	// IMP=0x00600000001d1333
+ (void)addClientLockReasons:(id)arg1 basedOnControl:(id)arg2;	// IMP=0x00600000001d0b17
+ (id)migrateMismatchedPersistedStateVersion:(id)arg1 forEntryID:(id)arg2 withMismatchedState:(id)arg3;	// IMP=0x00600000001ce240
+ (long long)persistedLocksCount;	// IMP=0x00600000001cd6df
+ (void)resumeFromPersistedWithDownloadedSelectors:(id)arg1;	// IMP=0x00600000001ccb56
+ (id)lockedSelectorsForEliminate:(id)arg1;	// IMP=0x00600000001cbb48
+ (id)copyOfLocksBySelector;	// IMP=0x00600000001cb92e
+ (id)newCurrentLockUsageForSelector:(id)arg1;	// IMP=0x00600000001ca841
+ (_Bool)endedAllPreviousLocksByClient:(id)arg1 forAssetSelector:(id)arg2 forLockReason:(id)arg3 endError:(id *)arg4;	// IMP=0x00600000001c8c39
+ (_Bool)endedPreviousLocksByClient:(id)arg1 forAssetSelector:(id)arg2 forLockReason:(id)arg3 removingLockCount:(long long)arg4 endError:(id *)arg5;	// IMP=0x00600000001c83c2
+ (_Bool)endedLockByClient:(id)arg1 forAssetSelector:(id)arg2 forLockReason:(id)arg3 endError:(id *)arg4;	// IMP=0x00600000001c7cc9
+ (_Bool)continuedLockByClient:(id)arg1 forAssetSelector:(id)arg2 forLockReason:(id)arg3 withUsagePolicy:(id)arg4 continueError:(id *)arg5;	// IMP=0x00600000001c7523
+ (_Bool)lockedByClient:(id)arg1 forAssetSelector:(id)arg2 forLockReason:(id)arg3 withUsagePolicy:(id)arg4 withLocalContentURL:(id)arg5 withAssetAttributes:(id)arg6 lockError:(id *)arg7;	// IMP=0x00600000001c6d16
+ (id)autoAssetLocker;	// IMP=0x00600000001c6cc1
- (void).cxx_destruct;	// IMP=0x00000000001d9d19
@property(retain, nonatomic) NSMutableDictionary *eliminateSelectors; // @synthesize eliminateSelectors=_eliminateSelectors;
@property(readonly, retain, nonatomic) MADAutoAssetPersisted *persistedState; // @synthesize persistedState=_persistedState;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *lockerQueue; // @synthesize lockerQueue=_lockerQueue;
@property(readonly, retain, nonatomic) SUCoreLog *logger; // @synthesize logger=_logger;
- (id)newSetClientNameForDomain:(id)arg1 withAutoAssetClientName:(id)arg2 forSetAtomicInstance:(id)arg3;	// IMP=0x00000000001d9c4b
- (id)_setClientDomainNameForAssetLock:(id)arg1;	// IMP=0x00000000001d9863
- (_Bool)_isUntrackedSetAssetLock:(id)arg1 forTrackedSetDescriptors:(id)arg2;	// IMP=0x00000000001d93de
- (id)_endedLockByClient:(id)arg1 forClientDomainName:(id)arg2 forAssetSetIdentifier:(id)arg3 forAssetSelector:(id)arg4 forSetAtomicInstance:(id)arg5 forLockReason:(id)arg6;	// IMP=0x00000000001d8dde
- (id)_endAllSetLocksNoLongerTracked:(id)arg1;	// IMP=0x00000000001d8767
- (id)_endAllSetLocksByClient:(id)arg1 forSetDescriptor:(id)arg2;	// IMP=0x00000000001d81b9
- (id)_continuedLockByClient:(id)arg1 forClientDomainName:(id)arg2 forAssetSetIdentifier:(id)arg3 forAssetSelector:(id)arg4 forSetAtomicInstance:(id)arg5 forLockReason:(id)arg6 withUsagePolicy:(id)arg7;	// IMP=0x00000000001d7af3
- (id)_lockAutoAssetByClient:(id)arg1 forClientDomainName:(id)arg2 forAssetSetIdentifier:(id)arg3 forAssetSelector:(id)arg4 forSetAtomicInstance:(id)arg5 forLockReason:(id)arg6 withUsagePolicy:(id)arg7 withLocalContentURL:(id)arg8 withAssetAttributes:(id)arg9;	// IMP=0x00000000001d7508
- (id)setAtomicInstanceForUUID:(id)arg1 fromSetAtomicInstances:(id)arg2;	// IMP=0x00000000001d72e8
- (id)atomicInstanceUUIDForLockTracker:(id)arg1;	// IMP=0x00000000001d7184
- (_Bool)isAssetLockSetAtomicInstanceLock:(id)arg1;	// IMP=0x00000000001d6f5c
- (id)_newAssetLockSummaryWithoutSelectorOrAttributes:(id)arg1;	// IMP=0x00000000001d09d4
- (id)summary;	// IMP=0x00000000001d0946
- (id)description;	// IMP=0x00000000001d0934
- (_Bool)_anyCurrentLocksForEliminate:(id)arg1;	// IMP=0x00000000001cffc4
- (id)_refreshFilesystemMetadataLastInterest:(id)arg1;	// IMP=0x00000000001cfc4a
- (long long)locateLocksCurrentLocksCount;	// IMP=0x00000000001cfbac
- (id)locateLocksNewAllBySelector;	// IMP=0x00000000001cf54b
- (id)locateLockBySelector:(id)arg1;	// IMP=0x00000000001cf234
- (void)_logPersistedTableOfContents:(id)arg1;	// IMP=0x00000000001cea1d
- (void)_logPersistedRemovedEntry:(id)arg1 removedAssetLock:(id)arg2 forSelector:(id)arg3 message:(id)arg4;	// IMP=0x00000000001ce655
- (void)_logPersistedEntry:(id)arg1 operation:(id)arg2 persistingAssetLock:(id)arg3 forSelector:(id)arg4 message:(id)arg5;	// IMP=0x00000000001ce248
- (_Bool)_endLockDecideUnlocked:(id)arg1;	// IMP=0x00000000001ce19e
- (void)_mergeContinuedLock:(id)arg1 intoExistingLock:(id)arg2;	// IMP=0x00000000001ce070
- (void)_mergeAddedLock:(id)arg1 intoExistingLock:(id)arg2;	// IMP=0x00000000001cdee7
- (void)_persistRemoveAssetLock:(id)arg1 removedAssetLock:(id)arg2 message:(id)arg3;	// IMP=0x00000000001cdc06
- (_Bool)_persistAssetLock:(id)arg1 operation:(id)arg2 forAssetLock:(id)arg3 message:(id)arg4;	// IMP=0x00000000001cd8c0
- (void)_removeAssetLock:(id)arg1 lastClient:(id)arg2 forSelector:(id)arg3 message:(id)arg4;	// IMP=0x00000000001cc839
- (id)_assetIDOfLock:(id)arg1;	// IMP=0x00000000001ca78a
- (long long)_currentLockCountOfLock:(id)arg1;	// IMP=0x00000000001ca541
- (_Bool)_endLocksByClient:(id)arg1 forAllClientNames:(_Bool)arg2 forClientDomainName:(id)arg3 forAssetSetIdentifier:(id)arg4 forAssetSelector:(id)arg5 forSetAtomicInstance:(id)arg6 forLockReason:(id)arg7 removingLockCount:(long long)arg8 endError:(id *)arg9;	// IMP=0x00000000001c9313
- (id)init;	// IMP=0x00000000001c6b6f

@end

