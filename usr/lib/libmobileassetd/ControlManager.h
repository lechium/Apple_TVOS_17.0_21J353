//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DownloadManager, MADAnalyticsManager, NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface ControlManager : NSObject
{
    _Bool _reclaimSpace;	// 8 = 0x8
    int _notifyToken;	// 12 = 0xc
    int _reclaimUrgency;	// 16 = 0x10
    DownloadManager *_downloadManager;	// 24 = 0x18
    MADAnalyticsManager *_analytics;	// 32 = 0x20
    NSMutableDictionary *_assetTypeDescriptors;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_metaDataQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_assetQueue;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_cachedeleteQueue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_analyticsQueue;	// 72 = 0x48
    NSDictionary *_managedPrefs;	// 80 = 0x50
    long long _targetingPurgeAmount;	// 88 = 0x58
    NSString *_targetingAmountString;	// 96 = 0x60
    NSString *_reclaimUrgencyName;	// 104 = 0x68
    NSString *_reclaimVolume;	// 112 = 0x70
    NSString *_cacheDeleteOperationName;	// 120 = 0x78
    double _currentTimeInSeconds;	// 128 = 0x80
    double _preciousNumberOfSeconds;	// 136 = 0x88
    double _defaultNumberOfSeconds;	// 144 = 0x90
    double _deltaToCurrentTimeSeconds;	// 152 = 0x98
    NSString *_garbageCollectionAlterAssetType;	// 160 = 0xa0
    NSString *_garbageCollectionAlterBehavior;	// 168 = 0xa8
    NSDictionary *_unlockedAutoAssetDescriptors;	// 176 = 0xb0
    NSDictionary *_lockedOverridableAutoAssetDescriptors;	// 184 = 0xb8
    NSDictionary *_lockedNeverRemoveAutoAssetDescriptors;	// 192 = 0xc0
    NSDictionary *_stagedAutoAssetDescriptors;	// 200 = 0xc8
    long long _reclaimV2AssetSpace;	// 208 = 0xd0
    long long _reclaimV2AssetCount;	// 216 = 0xd8
    long long _reclaimUnlockedAutoAssetSpace;	// 224 = 0xe0
    long long _reclaimUnlockedAutoAssetCount;	// 232 = 0xe8
    long long _reclaimLockedOverridableAutoAssetSpace;	// 240 = 0xf0
    long long _reclaimLockedOverridableAutoAssetCount;	// 248 = 0xf8
    long long _reclaimLockedNeverRemoveAutoAssetSpace;	// 256 = 0x100
    long long _reclaimLockedNeverRemoveAutoAssetCount;	// 264 = 0x108
    long long _reclaimStagedAutoAssetSpace;	// 272 = 0x110
    long long _reclaimStagedAutoAssetCount;	// 280 = 0x118
    long long _reclaimMetadataBlockedSpace;	// 288 = 0x120
    long long _reclaimMetadataBlockedCount;	// 296 = 0x128
}

+ (id)getStringFromXpcMessage:(id)arg1 forKey:(const char *)arg2;	// IMP=0x00600000001bc0e5
- (void).cxx_destruct;	// IMP=0x00000000001bc578
@property(nonatomic) long long reclaimMetadataBlockedCount; // @synthesize reclaimMetadataBlockedCount=_reclaimMetadataBlockedCount;
@property(nonatomic) long long reclaimMetadataBlockedSpace; // @synthesize reclaimMetadataBlockedSpace=_reclaimMetadataBlockedSpace;
@property(nonatomic) long long reclaimStagedAutoAssetCount; // @synthesize reclaimStagedAutoAssetCount=_reclaimStagedAutoAssetCount;
@property(nonatomic) long long reclaimStagedAutoAssetSpace; // @synthesize reclaimStagedAutoAssetSpace=_reclaimStagedAutoAssetSpace;
@property(nonatomic) long long reclaimLockedNeverRemoveAutoAssetCount; // @synthesize reclaimLockedNeverRemoveAutoAssetCount=_reclaimLockedNeverRemoveAutoAssetCount;
@property(nonatomic) long long reclaimLockedNeverRemoveAutoAssetSpace; // @synthesize reclaimLockedNeverRemoveAutoAssetSpace=_reclaimLockedNeverRemoveAutoAssetSpace;
@property(nonatomic) long long reclaimLockedOverridableAutoAssetCount; // @synthesize reclaimLockedOverridableAutoAssetCount=_reclaimLockedOverridableAutoAssetCount;
@property(nonatomic) long long reclaimLockedOverridableAutoAssetSpace; // @synthesize reclaimLockedOverridableAutoAssetSpace=_reclaimLockedOverridableAutoAssetSpace;
@property(nonatomic) long long reclaimUnlockedAutoAssetCount; // @synthesize reclaimUnlockedAutoAssetCount=_reclaimUnlockedAutoAssetCount;
@property(nonatomic) long long reclaimUnlockedAutoAssetSpace; // @synthesize reclaimUnlockedAutoAssetSpace=_reclaimUnlockedAutoAssetSpace;
@property(nonatomic) long long reclaimV2AssetCount; // @synthesize reclaimV2AssetCount=_reclaimV2AssetCount;
@property(nonatomic) long long reclaimV2AssetSpace; // @synthesize reclaimV2AssetSpace=_reclaimV2AssetSpace;
@property(retain, nonatomic) NSDictionary *stagedAutoAssetDescriptors; // @synthesize stagedAutoAssetDescriptors=_stagedAutoAssetDescriptors;
@property(retain, nonatomic) NSDictionary *lockedNeverRemoveAutoAssetDescriptors; // @synthesize lockedNeverRemoveAutoAssetDescriptors=_lockedNeverRemoveAutoAssetDescriptors;
@property(retain, nonatomic) NSDictionary *lockedOverridableAutoAssetDescriptors; // @synthesize lockedOverridableAutoAssetDescriptors=_lockedOverridableAutoAssetDescriptors;
@property(retain, nonatomic) NSDictionary *unlockedAutoAssetDescriptors; // @synthesize unlockedAutoAssetDescriptors=_unlockedAutoAssetDescriptors;
@property(retain, nonatomic) NSString *garbageCollectionAlterBehavior; // @synthesize garbageCollectionAlterBehavior=_garbageCollectionAlterBehavior;
@property(retain, nonatomic) NSString *garbageCollectionAlterAssetType; // @synthesize garbageCollectionAlterAssetType=_garbageCollectionAlterAssetType;
@property(nonatomic) double deltaToCurrentTimeSeconds; // @synthesize deltaToCurrentTimeSeconds=_deltaToCurrentTimeSeconds;
@property(nonatomic) double defaultNumberOfSeconds; // @synthesize defaultNumberOfSeconds=_defaultNumberOfSeconds;
@property(nonatomic) double preciousNumberOfSeconds; // @synthesize preciousNumberOfSeconds=_preciousNumberOfSeconds;
@property(nonatomic) double currentTimeInSeconds; // @synthesize currentTimeInSeconds=_currentTimeInSeconds;
@property(retain, nonatomic) NSString *cacheDeleteOperationName; // @synthesize cacheDeleteOperationName=_cacheDeleteOperationName;
@property(retain, nonatomic) NSString *reclaimVolume; // @synthesize reclaimVolume=_reclaimVolume;
@property(retain, nonatomic) NSString *reclaimUrgencyName; // @synthesize reclaimUrgencyName=_reclaimUrgencyName;
@property(nonatomic) int reclaimUrgency; // @synthesize reclaimUrgency=_reclaimUrgency;
@property(retain, nonatomic) NSString *targetingAmountString; // @synthesize targetingAmountString=_targetingAmountString;
@property(nonatomic) long long targetingPurgeAmount; // @synthesize targetingPurgeAmount=_targetingPurgeAmount;
@property(nonatomic) _Bool reclaimSpace; // @synthesize reclaimSpace=_reclaimSpace;
@property(nonatomic) int notifyToken; // @synthesize notifyToken=_notifyToken;
@property(retain, nonatomic) NSDictionary *managedPrefs; // @synthesize managedPrefs=_managedPrefs;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *analyticsQueue; // @synthesize analyticsQueue=_analyticsQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *cachedeleteQueue; // @synthesize cachedeleteQueue=_cachedeleteQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *assetQueue; // @synthesize assetQueue=_assetQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *metaDataQueue; // @synthesize metaDataQueue=_metaDataQueue;
@property(readonly, nonatomic) NSMutableDictionary *assetTypeDescriptors; // @synthesize assetTypeDescriptors=_assetTypeDescriptors;
@property(readonly, nonatomic) MADAnalyticsManager *analytics; // @synthesize analytics=_analytics;
@property(readonly, nonatomic) DownloadManager *downloadManager; // @synthesize downloadManager=_downloadManager;
- (void)activityNotification:(id)arg1 ofStatusChange:(unsigned long long)arg2 withReason:(id)arg3;	// IMP=0x00000000001bc125
- (long long)handleInstallAsset:(id)arg1 forType:(id)arg2;	// IMP=0x00000000001bb6a4
- (void)handleUpdateMABrain:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000001bb68f
- (void)handleGetMABrainInfo:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000001bb67a
- (void)moveAssetIntoRepo:(id)arg1 forType:(id)arg2 forAsset:(id)arg3 cleanUp:(id)arg4 with:(id)arg5;	// IMP=0x00000000001bb0ce
- (void)writeJsonDictionaryToFile:(id)arg1 to:(id)arg2 with:(id)arg3;	// IMP=0x00000000001ba8cf
- (void)writeDictionaryToFile:(id)arg1 to:(id)arg2 with:(id)arg3;	// IMP=0x00000000001ba4bd
- (long long)updateLastFetchedDate:(id)arg1 assetType:(id)arg2 withPurpose:(id)arg3 with:(id)arg4;	// IMP=0x00000000001ba229
- (void)setServerConnectionHandler:(id)arg1 with:(id)arg2 and:(id)arg3;	// IMP=0x00000000001ba03f
- (id)associateOptionalFields:(long long)arg1 fromRequest:(id)arg2 toCommandRequest:(id)arg3 forCommandTracker:(id)arg4;	// IMP=0x00000000001b9a58
- (id)associateRequiredFields:(long long)arg1 fromRequest:(id)arg2 toCommandRequest:(id)arg3 forCommandTracker:(id)arg4;	// IMP=0x00000000001b802b
- (_Bool)associateFieldsFromRequest:(id)arg1 withCommandTracker:(id)arg2;	// IMP=0x00000000001b7d3d
- (void)handleClientConnection:(id)arg1 on:(id)arg2;	// IMP=0x00000000001b6012
- (void)handleClientConnection:(id)arg1 usingDispatchQueue:(id)arg2;	// IMP=0x00000000001b5ddc
- (void)handleClientCommand:(id)arg1;	// IMP=0x00000000001b5b9a
- (void)handleCommandGarbageCollect:(id)arg1;	// IMP=0x00000000001b5b94
- (void)handleCommandDumpClidentUsage:(id)arg1;	// IMP=0x00000000001b5b8e
- (void)handleCommandNSURLStateDump:(id)arg1;	// IMP=0x00000000001b5b88
- (void)handleCommandRepairState:(id)arg1;	// IMP=0x00000000001b5b82
- (void)handleCommandOverrideGC:(id)arg1;	// IMP=0x00000000001b5b7c
- (void)handleCommandUpdateClientUsage:(id)arg1;	// IMP=0x00000000001b5b76
- (void)handleCommandConfigDownload:(id)arg1;	// IMP=0x00000000001b5b70
- (void)handleCommandSpaceCheck:(id)arg1;	// IMP=0x00000000001b5b6a
- (void)handleCommandRefreshAssetState:(id)arg1;	// IMP=0x00000000001b5b64
- (void)handleCommandGetSandboxExtension:(id)arg1;	// IMP=0x00000000001b5b5e
- (void)handleCommandPurgeAsset:(id)arg1;	// IMP=0x00000000001b5b58
- (void)handleCommandDownloadAsset:(id)arg1;	// IMP=0x00000000001b5b52
- (void)handleCommandDownloadMetadata:(id)arg1;	// IMP=0x00000000001b5b4c
- (void)handleCommandLoadAssetByID:(id)arg1;	// IMP=0x00000000001b5b46
- (void)handleCommandCancelCatalogDownload:(id)arg1;	// IMP=0x00000000001b5b40
- (void)handleCommandCancelDownload:(id)arg1;	// IMP=0x00000000001b5b3a
- (void)handleCommandQuerInstalledIDs:(id)arg1;	// IMP=0x00000000001b5b34
- (void)handleCommandQueryAssetType:(id)arg1;	// IMP=0x00000000001b5b2e
- (void)handleCommandPurgeCatalogs:(id)arg1;	// IMP=0x00000000001b5b28
- (void)handleCommandPurgeAll:(id)arg1;	// IMP=0x00000000001b5b22
- (void)handleCommandCleanV1Assets:(id)arg1;	// IMP=0x00000000001b5b1c
- (void)handleCommandMigrateAssets:(id)arg1;	// IMP=0x00000000001b5b16
- (void)handleCommandServerURLOverride:(id)arg1;	// IMP=0x00000000001b5b10
- (void)handleCommandDownloadPMV:(id)arg1;	// IMP=0x00000000001b5b0a
- (void)handleCommandQueryPMV:(id)arg1;	// IMP=0x00000000001b5b04
- (void)handleCommandCancelPMVDownload:(id)arg1;	// IMP=0x00000000001b5afe
- (void)handleCommandSetPallasURL:(id)arg1;	// IMP=0x00000000001b5af8
- (void)handleCommandSetPallasEnabled:(id)arg1;	// IMP=0x00000000001b5af2
- (void)handleCommandSetPallasAudience:(id)arg1;	// IMP=0x00000000001b5aec
- (void)handleCommandGetPallasEnabled:(id)arg1;	// IMP=0x00000000001b5ae6
- (void)handleCommandGetPallasAudience:(id)arg1;	// IMP=0x00000000001b5ae0
- (void)handleReportingRequest:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000001b5786
- (void)handleMigrateAssetsRequest:(id)arg1 using:(id)arg2 and:(id)arg3;	// IMP=0x00000000001b4f31
- (void)handleUpdateClientUsage:(id)arg1 using:(id)arg2 and:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001b486f
- (void)dumpClientUsage:(id)arg1 using:(id)arg2 and:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001b44f0
- (void)overrideGCValue:(id)arg1 using:(id)arg2 and:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001b4151
- (void)handleGarbageCollect:(id)arg1 and:(id)arg2;	// IMP=0x00000000001b4078
- (void)purgeAll:(id)arg1 and:(id)arg2 assetTypesList:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001b338b
- (id)dictionaryWithArrayOfStringValues:(id)arg1 forXpcKey:(const char *)arg2 andLengthKey:(const char *)arg3 failureReason:(id *)arg4;	// IMP=0x00000000001b2eb0
- (id)dictionaryWithArrayOfStringValues:(id)arg1 forXpcKey:(const char *)arg2 andLengthKey:(const char *)arg3 clientName:(id)arg4;	// IMP=0x00000000001b2a05
- (void)purgeCatalogs:(id)arg1 and:(id)arg2 assetTypesList:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001b2430
- (void)getProductMarketingVersions:(id)arg1 and:(id)arg2 clientName:(id)arg3 assetType:(id)arg4;	// IMP=0x00000000001b2363
- (_Bool)purgeCatalogOfType:(id)arg1 clientName:(id)arg2 withPurpose:(id)arg3;	// IMP=0x00000000001b20a1
- (_Bool)purgeAllAssetsOfType:(id)arg1 forPurpose:(id)arg2 clientName:(id)arg3 exceptForAssetIds:(id)arg4;	// IMP=0x00000000001b18ec
- (_Bool)purgeAllAssetsInDirectory:(id)arg1 clientName:(id)arg2 exceptForAssetIds:(id)arg3;	// IMP=0x00000000001b14e8
- (void)respondToCacheDelete:(_Bool)arg1 targetingPurgeAmount:(long long)arg2 withUrgency:(int)arg3 forVolume:(id)arg4 then:(CDUnknownBlockType)arg5;	// IMP=0x00000000001afa79
- (long long)performCacheDeleteForGroup:(id)arg1 forAssetTypeDir:(id)arg2;	// IMP=0x00000000001af374
- (long long)performCacheDeleteCollection:(id)arg1 forCollectionType:(long long)arg2 withGarbageCollectionTypes:(id)arg3;	// IMP=0x00000000001af185
- (long long)performGarbageCollectionOfType:(long long)arg1 forAssetTypeDir:(id)arg2 fromDescriptors:(id)arg3;	// IMP=0x00000000001ae933
- (double)alterSecondsBeforeCollection:(double)arg1 forAssetTypeDir:(id)arg2 determinedDescriptorType:(long long)arg3 fromDescriptors:(id)arg4 isAutoAsset:(_Bool *)arg5 autoAssetDescriptor:(id *)arg6 assetFilesystemSize:(long long *)arg7;	// IMP=0x00000000001ae751
- (id)alterGarbageColletionLevel:(id)arg1 basedOnAssetDirectory:(id)arg2;	// IMP=0x00000000001ae59e
- (void)maintainReclaimCountsByCollectionType:(long long)arg1 reclaimAssetSpace:(long long)arg2;	// IMP=0x00000000001ae508
- (id)locateDescriptorForAssetDirectory:(id)arg1 fromDescriptors:(id)arg2;	// IMP=0x00000000001ae1cd
- (id)chooseDescriptorsOfType:(long long)arg1;	// IMP=0x00000000001ae192
- (long long)garbageCollectionDescriptorType:(id)arg1;	// IMP=0x00000000001ad70a
- (id)getAssetAttributes:(id)arg1;	// IMP=0x00000000001ad5f9
- (void)handleServerUrlOverride:(id)arg1 message:(id)arg2 client:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001ad24d
- (void)handleGetServerUrl:(id)arg1 message:(id)arg2 client:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001ad059
- (void)handleGetAllowNonUserInitiated:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000001acef4
- (void)handleDataMigrator:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000001ace81
- (void)handleEnsureDataVault:(id)arg1 message:(id)arg2 client:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000001acd02
- (void)setPreferenceKeyAsync:(id)arg1 andValue:(id)arg2 allowNilToClear:(_Bool)arg3 replyUsing:(id)arg4 and:(id)arg5;	// IMP=0x00000000001acb95
- (void)setPreferenceKeySync:(id)arg1 andValue:(id)arg2 allowNilToClear:(_Bool)arg3;	// IMP=0x00000000001acaca
- (void)removeAssetDir:(id)arg1 assetType:(id)arg2 clientName:(id)arg3 using:(id)arg4;	// IMP=0x00000000001ac1c7
- (long long)removeDirectoryAtPath:(id)arg1 firstRenamingWithExtension:(id)arg2;	// IMP=0x00000000001ac167
- (void)cancelDownload:(id)arg1 using:(id)arg2 for:(id)arg3 assetType:(id)arg4 purpose:(id)arg5 withExtension:(id)arg6;	// IMP=0x00000000001abc0b
- (id)newExtractor:(id)arg1 downloadOptions:(id)arg2 sessionID:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001aaa70
- (id)hashToString:(id)arg1;	// IMP=0x00000000001aa9b7
- (void)checkAndInitiateDownloadForAssetType:(id)arg1 message:(id)arg2 forClientName:(id)arg3 usingConnection:(id)arg4 requiringClientExtractor:(_Bool)arg5;	// IMP=0x00000000001aa0c6
- (_Bool)isAssetInCatalog:(id)arg1 assetId:(id)arg2;	// IMP=0x00000000001aa0b1
- (_Bool)isAssetInCatalog:(id)arg1 assetId:(id)arg2 withPurpose:(id)arg3;	// IMP=0x00000000001a9ff6
- (void)getStateOfAsset:(id)arg1 incoming:(id)arg2 assetType:(id)arg3;	// IMP=0x00000000001a9b87
- (long long)getStateOfAssetInCatalog:(id)arg1 assetId:(id)arg2 withPurpose:(id)arg3;	// IMP=0x00000000001a9a7f
- (void)sendStateOfAssetReply:(id)arg1 incoming:(id)arg2 with:(long long)arg3;	// IMP=0x00000000001a9a06
- (void)ensureProperDirectoryState;	// IMP=0x00000000001a9831
- (void)removeDownloadsNotRecentlyInFlight:(id)arg1;	// IMP=0x00000000001a958f
- (void)cleanObsoleteSURepo;	// IMP=0x00000000001a8939
- (void)ensureSUDownloadTempDir;	// IMP=0x00000000001a8746
- (id)checkEntitlement:(id)arg1 forAssetTypes:(id)arg2;	// IMP=0x00000000001a845d
- (id)checkEntitlement:(id)arg1 forAssetType:(id)arg2;	// IMP=0x00000000001a8374
- (_Bool)checkEntitlementAndRespondIfErrorForConnection:(id)arg1 usingMessage:(id)arg2 forAssetTypes:(id)arg3 withCommand:(long long)arg4;	// IMP=0x00000000001a807a
- (_Bool)checkEntitlementAndRespondIfErrorForConnection:(id)arg1 usingMessage:(id)arg2 forAssetType:(id)arg3 withCommand:(long long)arg4;	// IMP=0x00000000001a7f99
- (_Bool)isEntitledForCommand:(long long)arg1 forConnection:(id)arg2 forAssetType:(id)arg3;	// IMP=0x00000000001a7ca9
- (_Bool)isAllowlistedForCommand:(long long)arg1;	// IMP=0x00000000001a7bb7
- (_Bool)isCommandAllowedForAllClientsWithoutAssetType:(long long)arg1;	// IMP=0x00000000001a7b4b
- (_Bool)isAssetTypeOptionalForCommand:(long long)arg1;	// IMP=0x00000000001a7b00
- (_Bool)isAssetTypeRequiredForCommand:(long long)arg1;	// IMP=0x00000000001a7abf
- (int)getNotEntitledResultForCommand:(unsigned long long)arg1;	// IMP=0x00000000001a7a76
- (_Bool)commandRequiresForcedSoftwareUpdateType:(id)arg1;	// IMP=0x00000000001a79f8
- (_Bool)isCommandRequiringForcedSoftwareUpdateType:(long long)arg1;	// IMP=0x00000000001a79b2
- (void)handleLoadRequest:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4;	// IMP=0x00000000001a741d
- (id)decodeXpcObject:(id)arg1 ofClass:(Class)arg2 dataKey:(id)arg3 lengthKey:(id)arg4 decodeClasses:(id)arg5 error:(id *)arg6;	// IMP=0x00000000001a6fe2
- (void)handleQueryRequest:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4;	// IMP=0x00000000001a67ad
- (void)handlePmvRequest:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4;	// IMP=0x00000000001a63f9
- (void)determineAssets:(id)arg1 clientName:(id)arg2 connection:(id)arg3 downloadingTasks:(id)arg4 message:(id)arg5 resultTypes:(long long)arg6 queryArray:(id)arg7 isForSpecificAsset:(_Bool)arg8 specificAssetId:(id)arg9 specificAllowedDifferences:(id)arg10;	// IMP=0x00000000001a5560
- (void)determineOneAsset:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4 specificAssetId:(id)arg5 specificAllowedDifferences:(id)arg6;	// IMP=0x00000000001a551b
- (void)determineAssets:(id)arg1 clientName:(id)arg2 connection:(id)arg3 downloadingTasks:(id)arg4 message:(id)arg5 resultTypes:(long long)arg6 queryArray:(id)arg7;	// IMP=0x00000000001a54df
- (void)determinePmv:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4 queryDict:(id)arg5;	// IMP=0x00000000001a47d7
- (_Bool)categorizeAssetResults:(id)arg1 fromCatalogIds:(id)arg2 repositoryIds:(id)arg3 andPreinstalledIds:(id)arg4 intoServerOnlyIds:(id *)arg5 installedCatalogIds:(id *)arg6 andObsoleteIds:(id *)arg7;	// IMP=0x00000000001a46a1
- (_Bool)loadCatalog:(id)arg1 catalogAssets:(id *)arg2 assetIds:(id *)arg3 postedDate:(id *)arg4 lastFetchDate:(id *)arg5 catalogInfo:(id *)arg6;	// IMP=0x00000000001a4675
- (_Bool)loadCatalog:(id)arg1 catalogAssets:(id *)arg2 assetIds:(id *)arg3 postedDate:(id *)arg4 lastFetchDate:(id *)arg5 catalogInfo:(id *)arg6 withPurpose:(id)arg7;	// IMP=0x00000000001a4424
- (_Bool)loadRepository:(id)arg1 localIds:(id *)arg2;	// IMP=0x00000000001a440f
- (_Bool)loadRepository:(id)arg1 localIds:(id *)arg2 withPurpose:(id)arg3;	// IMP=0x00000000001a42e5
- (_Bool)returnTypeIncludesServerOnly:(long long)arg1;	// IMP=0x00000000001a42cb
- (_Bool)returnTypeIncludesInstalledInCatalog:(long long)arg1;	// IMP=0x00000000001a42b1
- (_Bool)returnTypeIncludesObsolete:(long long)arg1 andHasCatalog:(_Bool)arg2;	// IMP=0x00000000001a4295
- (id)applyPmvQuery:(id)arg1 queryDict:(id)arg2 explanation:(id *)arg3;	// IMP=0x00000000001a3f52
- (id)determineBestMatchFor:(id)arg1 absoluteId:(id)arg2 allowedDifferences:(id)arg3 fromResults:(id)arg4 isExact:(_Bool *)arg5 candidates:(unsigned long long *)arg6 bestMatch:(id *)arg7 differencesFound:(id *)arg8 missedTypeAndAssetIdMatch:(id *)arg9;	// IMP=0x00000000001a338e
- (_Bool)hasOnlyAllowedDifferencesFrom:(id)arg1 inAttributes:(id)arg2 assetId:(id)arg3 assetType:(id)arg4 allowed:(id)arg5 foundAbsoluteId:(id *)arg6 foundDiff:(id *)arg7;	// IMP=0x00000000001a3213
- (_Bool)returnTypeIncludesPreinstalled:(long long)arg1;	// IMP=0x00000000001a3206
- (id)getCatalogLastModifiedDate:(id)arg1 ifFromXmlUrl:(id)arg2 withPurpose:(id)arg3;	// IMP=0x00000000001a2af3
- (id)getMetadataFromCatalog:(id)arg1 key:(id)arg2 withPurpose:(id)arg3;	// IMP=0x00000000001a2a0b
- (id)newCatalogLoad:(id)arg1;	// IMP=0x00000000001a29f7
- (id)newCatalogLoad:(id)arg1 withPurpose:(id)arg2;	// IMP=0x00000000001a27a7
- (void)sendQueryResults:(id)arg1 assetType:(id)arg2 purpose:(id)arg3 catalogInfo:(id)arg4 returnTypes:(long long)arg5 postedDate:(id)arg6 lastFetchedDate:(id)arg7 result:(long long)arg8 isFiltered:(_Bool)arg9 requireSpecificAsset:(_Bool)arg10 connection:(id)arg11 message:(id)arg12 clientName:(id)arg13;	// IMP=0x00000000001a2229
- (void)sendPmvResults:(id)arg1 pmvInfo:(id)arg2 postedDate:(id)arg3 lastFetchedDate:(id)arg4 result:(long long)arg5 connection:(id)arg6 message:(id)arg7;	// IMP=0x00000000001a2024
- (_Bool)beforeFirstUnlock;	// IMP=0x00000000001a200b
- (void)analyticsInitialization;	// IMP=0x00000000001a1cf9
- (id)init;	// IMP=0x00000000001a197b
- (void)loadAssetTypeDescriptors;	// IMP=0x00000000001a15c3
- (void)applyDataVaults;	// IMP=0x00000000001a1296
- (void)removeAllObsoletedV1Assets;	// IMP=0x00000000001a0ff4
- (id)newPrefsCopyValueForKey:(id)arg1;	// IMP=0x00000000001a0e1e
- (void)loadManagedPrefs;	// IMP=0x00000000001a0d82
- (id)convertToArchiveable:(id)arg1 incoming:(id)arg2 overrideState:(long long)arg3 filterToIds:(id)arg4 withPurpose:(id)arg5;	// IMP=0x00000000001a09b3

@end

