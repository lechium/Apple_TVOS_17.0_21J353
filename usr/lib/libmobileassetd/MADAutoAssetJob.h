//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MAAutoAssetInfoDesire, MAAutoAssetInfoEnd, MAAutoAssetInfoFound, MAAutoAssetInfoInstance, MAAutoAssetInfoListen, MAAutoAssetPolicy, MAAutoAssetProgress, MAAutoAssetSelector, MAAutoAssetStatus, MAAutoAssetSummary, MADAutoAssetDescriptor, MADAutoAssetJobInformation, MADAutoSetConfiguration, MADAutoSetDescriptor, MADAutoSetJobInformation, MAMsuDownloadOptions, MANAutoAssetSetInfoDesire, MANAutoAssetSetInfoFound, MANAutoAssetSetInfoInstance, MANAutoAssetSetNotifications, MANAutoAssetSetPolicy, MANAutoAssetSetStatus, MANAutoAssetSetSummary, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, SUCoreFSM, SUCoreLog;

__attribute__((visibility("hidden")))
@interface MADAutoAssetJob : NSObject
{
    _Bool _autoAssetSetJob;	// 8 = 0x8
    _Bool _earlierSchedulerInvolved;	// 9 = 0x9
    _Bool _earlierPotentialNetworkFailure;	// 10 = 0xa
    _Bool _schedulerInvolved;	// 11 = 0xb
    _Bool _potentialNetworkFailure;	// 12 = 0xc
    _Bool _stagerJob;	// 13 = 0xd
    _Bool _stagerJobDownloadContent;	// 14 = 0xe
    _Bool _stagerJobResultsReported;	// 15 = 0xf
    _Bool _aggregatedClientAssetPolicySpecified;	// 16 = 0x10
    _Bool _clientRequestedOperation;	// 17 = 0x11
    _Bool _holdingLookupGrant;	// 18 = 0x12
    _Bool _rampingForeground;	// 19 = 0x13
    _Bool _rampingForegroundLatched;	// 20 = 0x14
    _Bool _schedulerTriggerReceived;	// 21 = 0x15
    _Bool _downloadingUserInitiated;	// 22 = 0x16
    _Bool _boostedToUserInitiated;	// 23 = 0x17
    _Bool _checkingAssetContent;	// 24 = 0x18
    _Bool _determiningAssetContent;	// 25 = 0x19
    _Bool _lockingAssetContent;	// 26 = 0x1a
    _Bool _wasPatched;	// 27 = 0x1b
    _Bool _aggregatedClientSetPolicySpecified;	// 28 = 0x1c
    _Bool _foundSameAtomicInstanceAlreadyDownloaded;	// 29 = 0x1d
    _Bool _anomalyNoAssignedSetDescriptor;	// 30 = 0x1e
    _Bool _anomalyNoActiveSetDescriptor;	// 31 = 0x1f
    _Bool _reportingProgress;	// 32 = 0x20
    int _progressLogsFilteredCount;	// 36 = 0x24
    MAAutoAssetSelector *_autoAssetSelector;	// 40 = 0x28
    NSString *_clientDomainName;	// 48 = 0x30
    NSString *_autoAssetSetIdentifier;	// 56 = 0x38
    NSString *_autoAssetUUID;	// 64 = 0x40
    long long _clientRequestCount;	// 72 = 0x48
    MAAutoAssetInfoInstance *_autoAssetInstance;	// 80 = 0x50
    NSString *_latestSafeSummary;	// 88 = 0x58
    MAAutoAssetSummary *_latestAutoAssetSummary;	// 96 = 0x60
    NSString *_stagerAssetTargetOSVersion;	// 104 = 0x68
    NSString *_stagerAssetTargetBuildVersion;	// 112 = 0x70
    MADAutoAssetJob *_bondedWithJob;	// 120 = 0x78
    SUCoreLog *_logger;	// 128 = 0x80
    NSMutableArray *_activeJobTasks;	// 136 = 0x88
    NSDictionary *_stateTable;	// 144 = 0x90
    NSString *_autoJobName;	// 152 = 0x98
    SUCoreFSM *_autoJobFSM;	// 160 = 0xa0
    MAAutoAssetInfoInstance *_activeInstance;	// 168 = 0xa8
    MAAutoAssetInfoDesire *_activeDesire;	// 176 = 0xb0
    MAAutoAssetInfoFound *_activeFound;	// 184 = 0xb8
    MAAutoAssetInfoEnd *_activeEnd;	// 192 = 0xc0
    MAAutoAssetInfoListen *_activeListen;	// 200 = 0xc8
    MADAutoAssetJobInformation *_autoAssetJobInformation;	// 208 = 0xd0
    MAAutoAssetPolicy *_aggregatedClientAssetPolicy;	// 216 = 0xd8
    NSString *_firstClientName;	// 224 = 0xe0
    NSString *_jobCreationTriggeringLayer;	// 232 = 0xe8
    NSMutableDictionary *_onFilesystemByVersion;	// 240 = 0xf0
    NSString *_checkUUIDBasePortion;	// 248 = 0xf8
    NSString *_checkUUID;	// 256 = 0x100
    MAMsuDownloadOptions *_catalogDownloadOptions;	// 264 = 0x108
    MAMsuDownloadOptions *_assetDownloadOptions;	// 272 = 0x110
    MADAutoAssetDescriptor *_baseForPatch;	// 280 = 0x118
    MADAutoAssetDescriptor *_foundNewerPatch;	// 288 = 0x120
    MADAutoAssetDescriptor *_foundNewerFull;	// 296 = 0x128
    MADAutoAssetDescriptor *_newerFoundAssetDescriptor;	// 304 = 0x130
    MADAutoAssetDescriptor *_downloadingAssetDescriptor;	// 312 = 0x138
    NSString *_latestInstalledAssetVersion;	// 320 = 0x140
    NSString *_latestInstalledAssetBuild;	// 328 = 0x148
    MAAutoAssetStatus *_currentStatus;	// 336 = 0x150
    long long _progressReportPhase;	// 344 = 0x158
    MAAutoAssetProgress *_lastReportedPatchProgress;	// 352 = 0x160
    MAAutoAssetSelector *_resultSelector;	// 360 = 0x168
    MAAutoAssetInfoInstance *_resultInstance;	// 368 = 0x170
    MAAutoAssetInfoFound *_resultFound;	// 376 = 0x178
    MAAutoAssetInfoEnd *_resultEnd;	// 384 = 0x180
    MAAutoAssetInfoListen *_resultListen;	// 392 = 0x188
    long long _simulateOperation;	// 400 = 0x190
    long long _simulateEnd;	// 408 = 0x198
    long long _simulateTriggered;	// 416 = 0x1a0
    MADAutoAssetDescriptor *_simulateDescriptor;	// 424 = 0x1a8
    MADAutoAssetDescriptor *_simulateBaseForPatch;	// 432 = 0x1b0
    MADAutoSetConfiguration *_setConfiguration;	// 440 = 0x1b8
    MADAutoSetJobInformation *_setJobInformation;	// 448 = 0x1c0
    MANAutoAssetSetInfoInstance *_autoAssetSetInstance;	// 456 = 0x1c8
    MANAutoAssetSetInfoDesire *_autoAssetSetDesire;	// 464 = 0x1d0
    MANAutoAssetSetPolicy *_schedulerSetPolicy;	// 472 = 0x1d8
    MANAutoAssetSetStatus *_currentSetStatus;	// 480 = 0x1e0
    MANAutoAssetSetNotifications *_currentSetNotifications;	// 488 = 0x1e8
    MANAutoAssetSetPolicy *_aggregatedClientSetPolicy;	// 496 = 0x1f0
    long long _setProgressOverallTotalWrittenBytes;	// 504 = 0x1f8
    long long _setProgressAssetTotalWrittenBytes;	// 512 = 0x200
    MADAutoSetDescriptor *_assignedSetDescriptor;	// 520 = 0x208
    NSMutableDictionary *_latestAssetDescriptorOnFilesystemBySpecifier;	// 528 = 0x210
    NSMutableDictionary *_foundSetPatchDescriptorsBySpecifier;	// 536 = 0x218
    NSMutableDictionary *_foundSetFullDescriptorsBySpecifier;	// 544 = 0x220
    NSArray *_foundSetNewerDiscoveredAtomicEntries;	// 552 = 0x228
    MANAutoAssetSetStatus *_newestDownloadedSetStatus;	// 560 = 0x230
    MADAutoSetDescriptor *_autoAssetSetDescriptor;	// 568 = 0x238
    long long _nextSetSpecifierToDownload;	// 576 = 0x240
    MANAutoAssetSetSummary *_latestAutoAssetSetSummary;	// 584 = 0x248
    MANAutoAssetSetInfoFound *_resultSetFound;	// 592 = 0x250
}

+ (id)_getAutoAssetJobStateTable;	// IMP=0x001000000013f1fc
- (void).cxx_destruct;	// IMP=0x0000000000190493
@property(nonatomic) int progressLogsFilteredCount; // @synthesize progressLogsFilteredCount=_progressLogsFilteredCount;
@property(nonatomic) _Bool reportingProgress; // @synthesize reportingProgress=_reportingProgress;
@property(retain, nonatomic) MANAutoAssetSetInfoFound *resultSetFound; // @synthesize resultSetFound=_resultSetFound;
@property(nonatomic) _Bool anomalyNoActiveSetDescriptor; // @synthesize anomalyNoActiveSetDescriptor=_anomalyNoActiveSetDescriptor;
@property(nonatomic) _Bool anomalyNoAssignedSetDescriptor; // @synthesize anomalyNoAssignedSetDescriptor=_anomalyNoAssignedSetDescriptor;
@property(retain, nonatomic) MANAutoAssetSetSummary *latestAutoAssetSetSummary; // @synthesize latestAutoAssetSetSummary=_latestAutoAssetSetSummary;
@property(nonatomic) long long nextSetSpecifierToDownload; // @synthesize nextSetSpecifierToDownload=_nextSetSpecifierToDownload;
@property(retain, nonatomic) MADAutoSetDescriptor *autoAssetSetDescriptor; // @synthesize autoAssetSetDescriptor=_autoAssetSetDescriptor;
@property(retain, nonatomic) MANAutoAssetSetStatus *newestDownloadedSetStatus; // @synthesize newestDownloadedSetStatus=_newestDownloadedSetStatus;
@property(nonatomic) _Bool foundSameAtomicInstanceAlreadyDownloaded; // @synthesize foundSameAtomicInstanceAlreadyDownloaded=_foundSameAtomicInstanceAlreadyDownloaded;
@property(retain, nonatomic) NSArray *foundSetNewerDiscoveredAtomicEntries; // @synthesize foundSetNewerDiscoveredAtomicEntries=_foundSetNewerDiscoveredAtomicEntries;
@property(retain, nonatomic) NSMutableDictionary *foundSetFullDescriptorsBySpecifier; // @synthesize foundSetFullDescriptorsBySpecifier=_foundSetFullDescriptorsBySpecifier;
@property(retain, nonatomic) NSMutableDictionary *foundSetPatchDescriptorsBySpecifier; // @synthesize foundSetPatchDescriptorsBySpecifier=_foundSetPatchDescriptorsBySpecifier;
@property(retain, nonatomic) NSMutableDictionary *latestAssetDescriptorOnFilesystemBySpecifier; // @synthesize latestAssetDescriptorOnFilesystemBySpecifier=_latestAssetDescriptorOnFilesystemBySpecifier;
@property(retain, nonatomic) MADAutoSetDescriptor *assignedSetDescriptor; // @synthesize assignedSetDescriptor=_assignedSetDescriptor;
@property(nonatomic) long long setProgressAssetTotalWrittenBytes; // @synthesize setProgressAssetTotalWrittenBytes=_setProgressAssetTotalWrittenBytes;
@property(nonatomic) long long setProgressOverallTotalWrittenBytes; // @synthesize setProgressOverallTotalWrittenBytes=_setProgressOverallTotalWrittenBytes;
@property(nonatomic) _Bool aggregatedClientSetPolicySpecified; // @synthesize aggregatedClientSetPolicySpecified=_aggregatedClientSetPolicySpecified;
@property(retain, nonatomic) MANAutoAssetSetPolicy *aggregatedClientSetPolicy; // @synthesize aggregatedClientSetPolicy=_aggregatedClientSetPolicy;
@property(retain, nonatomic) MANAutoAssetSetNotifications *currentSetNotifications; // @synthesize currentSetNotifications=_currentSetNotifications;
@property(retain, nonatomic) MANAutoAssetSetStatus *currentSetStatus; // @synthesize currentSetStatus=_currentSetStatus;
@property(retain, nonatomic) MANAutoAssetSetPolicy *schedulerSetPolicy; // @synthesize schedulerSetPolicy=_schedulerSetPolicy;
@property(retain, nonatomic) MANAutoAssetSetInfoDesire *autoAssetSetDesire; // @synthesize autoAssetSetDesire=_autoAssetSetDesire;
@property(retain, nonatomic) MANAutoAssetSetInfoInstance *autoAssetSetInstance; // @synthesize autoAssetSetInstance=_autoAssetSetInstance;
@property(retain, nonatomic) MADAutoSetJobInformation *setJobInformation; // @synthesize setJobInformation=_setJobInformation;
@property(retain, nonatomic) MADAutoSetConfiguration *setConfiguration; // @synthesize setConfiguration=_setConfiguration;
@property(retain, nonatomic) MADAutoAssetDescriptor *simulateBaseForPatch; // @synthesize simulateBaseForPatch=_simulateBaseForPatch;
@property(retain, nonatomic) MADAutoAssetDescriptor *simulateDescriptor; // @synthesize simulateDescriptor=_simulateDescriptor;
@property(nonatomic) long long simulateTriggered; // @synthesize simulateTriggered=_simulateTriggered;
@property(nonatomic) long long simulateEnd; // @synthesize simulateEnd=_simulateEnd;
@property(nonatomic) long long simulateOperation; // @synthesize simulateOperation=_simulateOperation;
@property(retain, nonatomic) MAAutoAssetInfoListen *resultListen; // @synthesize resultListen=_resultListen;
@property(retain, nonatomic) MAAutoAssetInfoEnd *resultEnd; // @synthesize resultEnd=_resultEnd;
@property(retain, nonatomic) MAAutoAssetInfoFound *resultFound; // @synthesize resultFound=_resultFound;
@property(retain, nonatomic) MAAutoAssetInfoInstance *resultInstance; // @synthesize resultInstance=_resultInstance;
@property(retain, nonatomic) MAAutoAssetSelector *resultSelector; // @synthesize resultSelector=_resultSelector;
@property(retain, nonatomic) MAAutoAssetProgress *lastReportedPatchProgress; // @synthesize lastReportedPatchProgress=_lastReportedPatchProgress;
@property(nonatomic) long long progressReportPhase; // @synthesize progressReportPhase=_progressReportPhase;
@property(retain, nonatomic) MAAutoAssetStatus *currentStatus; // @synthesize currentStatus=_currentStatus;
@property(retain, nonatomic) NSString *latestInstalledAssetBuild; // @synthesize latestInstalledAssetBuild=_latestInstalledAssetBuild;
@property(retain, nonatomic) NSString *latestInstalledAssetVersion; // @synthesize latestInstalledAssetVersion=_latestInstalledAssetVersion;
@property(nonatomic) _Bool wasPatched; // @synthesize wasPatched=_wasPatched;
@property(nonatomic) _Bool lockingAssetContent; // @synthesize lockingAssetContent=_lockingAssetContent;
@property(nonatomic) _Bool determiningAssetContent; // @synthesize determiningAssetContent=_determiningAssetContent;
@property(nonatomic) _Bool checkingAssetContent; // @synthesize checkingAssetContent=_checkingAssetContent;
@property(nonatomic) _Bool boostedToUserInitiated; // @synthesize boostedToUserInitiated=_boostedToUserInitiated;
@property(nonatomic) _Bool downloadingUserInitiated; // @synthesize downloadingUserInitiated=_downloadingUserInitiated;
@property(nonatomic) _Bool schedulerTriggerReceived; // @synthesize schedulerTriggerReceived=_schedulerTriggerReceived;
@property(retain, nonatomic) MADAutoAssetDescriptor *downloadingAssetDescriptor; // @synthesize downloadingAssetDescriptor=_downloadingAssetDescriptor;
@property(retain, nonatomic) MADAutoAssetDescriptor *newerFoundAssetDescriptor; // @synthesize newerFoundAssetDescriptor=_newerFoundAssetDescriptor;
@property(retain, nonatomic) MADAutoAssetDescriptor *foundNewerFull; // @synthesize foundNewerFull=_foundNewerFull;
@property(retain, nonatomic) MADAutoAssetDescriptor *foundNewerPatch; // @synthesize foundNewerPatch=_foundNewerPatch;
@property(retain, nonatomic) MADAutoAssetDescriptor *baseForPatch; // @synthesize baseForPatch=_baseForPatch;
@property(retain, nonatomic) MAMsuDownloadOptions *assetDownloadOptions; // @synthesize assetDownloadOptions=_assetDownloadOptions;
@property(retain, nonatomic) MAMsuDownloadOptions *catalogDownloadOptions; // @synthesize catalogDownloadOptions=_catalogDownloadOptions;
@property(nonatomic) _Bool rampingForegroundLatched; // @synthesize rampingForegroundLatched=_rampingForegroundLatched;
@property(nonatomic) _Bool rampingForeground; // @synthesize rampingForeground=_rampingForeground;
@property(nonatomic) _Bool holdingLookupGrant; // @synthesize holdingLookupGrant=_holdingLookupGrant;
@property(retain, nonatomic) NSString *checkUUID; // @synthesize checkUUID=_checkUUID;
@property(retain, nonatomic) NSString *checkUUIDBasePortion; // @synthesize checkUUIDBasePortion=_checkUUIDBasePortion;
@property(retain, nonatomic) NSMutableDictionary *onFilesystemByVersion; // @synthesize onFilesystemByVersion=_onFilesystemByVersion;
@property(retain, nonatomic) NSString *jobCreationTriggeringLayer; // @synthesize jobCreationTriggeringLayer=_jobCreationTriggeringLayer;
@property(retain, nonatomic) NSString *firstClientName; // @synthesize firstClientName=_firstClientName;
@property(nonatomic) _Bool clientRequestedOperation; // @synthesize clientRequestedOperation=_clientRequestedOperation;
@property(nonatomic) _Bool aggregatedClientAssetPolicySpecified; // @synthesize aggregatedClientAssetPolicySpecified=_aggregatedClientAssetPolicySpecified;
@property(retain, nonatomic) MAAutoAssetPolicy *aggregatedClientAssetPolicy; // @synthesize aggregatedClientAssetPolicy=_aggregatedClientAssetPolicy;
@property(retain, nonatomic) MADAutoAssetJobInformation *autoAssetJobInformation; // @synthesize autoAssetJobInformation=_autoAssetJobInformation;
@property(retain, nonatomic) MAAutoAssetInfoListen *activeListen; // @synthesize activeListen=_activeListen;
@property(retain, nonatomic) MAAutoAssetInfoEnd *activeEnd; // @synthesize activeEnd=_activeEnd;
@property(retain, nonatomic) MAAutoAssetInfoFound *activeFound; // @synthesize activeFound=_activeFound;
@property(retain, nonatomic) MAAutoAssetInfoDesire *activeDesire; // @synthesize activeDesire=_activeDesire;
@property(retain, nonatomic) MAAutoAssetInfoInstance *activeInstance; // @synthesize activeInstance=_activeInstance;
@property(retain, nonatomic) SUCoreFSM *autoJobFSM; // @synthesize autoJobFSM=_autoJobFSM;
@property(retain, nonatomic) NSString *autoJobName; // @synthesize autoJobName=_autoJobName;
@property(readonly, retain, nonatomic) NSDictionary *stateTable; // @synthesize stateTable=_stateTable;
@property(retain, nonatomic) NSMutableArray *activeJobTasks; // @synthesize activeJobTasks=_activeJobTasks;
@property(readonly, retain, nonatomic) SUCoreLog *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) MADAutoAssetJob *bondedWithJob; // @synthesize bondedWithJob=_bondedWithJob;
@property(retain, nonatomic) NSString *stagerAssetTargetBuildVersion; // @synthesize stagerAssetTargetBuildVersion=_stagerAssetTargetBuildVersion;
@property(retain, nonatomic) NSString *stagerAssetTargetOSVersion; // @synthesize stagerAssetTargetOSVersion=_stagerAssetTargetOSVersion;
@property(nonatomic) _Bool stagerJobResultsReported; // @synthesize stagerJobResultsReported=_stagerJobResultsReported;
@property(nonatomic) _Bool stagerJobDownloadContent; // @synthesize stagerJobDownloadContent=_stagerJobDownloadContent;
@property(nonatomic) _Bool stagerJob; // @synthesize stagerJob=_stagerJob;
@property(nonatomic) _Bool potentialNetworkFailure; // @synthesize potentialNetworkFailure=_potentialNetworkFailure;
@property(nonatomic) _Bool schedulerInvolved; // @synthesize schedulerInvolved=_schedulerInvolved;
@property(retain, nonatomic) MAAutoAssetSummary *latestAutoAssetSummary; // @synthesize latestAutoAssetSummary=_latestAutoAssetSummary;
@property(retain, nonatomic) NSString *latestSafeSummary; // @synthesize latestSafeSummary=_latestSafeSummary;
@property(retain, nonatomic) MAAutoAssetInfoInstance *autoAssetInstance; // @synthesize autoAssetInstance=_autoAssetInstance;
@property(nonatomic) _Bool earlierPotentialNetworkFailure; // @synthesize earlierPotentialNetworkFailure=_earlierPotentialNetworkFailure;
@property(nonatomic) _Bool earlierSchedulerInvolved; // @synthesize earlierSchedulerInvolved=_earlierSchedulerInvolved;
@property(nonatomic) long long clientRequestCount; // @synthesize clientRequestCount=_clientRequestCount;
@property(readonly, retain, nonatomic) NSString *autoAssetUUID; // @synthesize autoAssetUUID=_autoAssetUUID;
@property(retain, nonatomic) NSString *autoAssetSetIdentifier; // @synthesize autoAssetSetIdentifier=_autoAssetSetIdentifier;
@property(retain, nonatomic) NSString *clientDomainName; // @synthesize clientDomainName=_clientDomainName;
@property(readonly, retain, nonatomic) MAAutoAssetSelector *autoAssetSelector; // @synthesize autoAssetSelector=_autoAssetSelector;
@property(nonatomic) _Bool autoAssetSetJob; // @synthesize autoAssetSetJob=_autoAssetSetJob;
- (id)summaryOfJob;	// IMP=0x000000000018fa6b
- (id)currentJobInformation:(id *)arg1;	// IMP=0x000000000018f505
- (void)trackAnomaly:(long long)arg1 forReason:(id)arg2;	// IMP=0x000000000018f467
- (long long)errorCodeFromUnderling:(id)arg1;	// IMP=0x000000000018f45c
- (void)simulateEnd:(long long)arg1;	// IMP=0x000000000018e44c
- (void)simulateSet:(id)arg1;	// IMP=0x000000000018de39
- (id)progressReportPhaseName;	// IMP=0x000000000018de0c
- (void)latchWhetherDownloadingUserInitiated;	// IMP=0x000000000018d949
- (void)statusChangeReportCurrent:(id)arg1;	// IMP=0x000000000018d3cf
- (void)statusChangeJobFinished:(id)arg1 withResponseError:(id)arg2;	// IMP=0x000000000018d07f
- (void)statusChangeSuccessfullyDownloaded:(id)arg1;	// IMP=0x000000000018cc9d
- (void)statusChangeSuccesfullyPatched:(id)arg1;	// IMP=0x000000000018c9a0
- (void)_statusChangeDownloadProgressDecideLog:(id)arg1;	// IMP=0x000000000018c7cc
- (void)statusChangeDownloadProgress:(id)arg1;	// IMP=0x000000000018c231
- (void)statusChangeStartingAssetDownload:(id)arg1 downloadingPatch:(_Bool)arg2;	// IMP=0x000000000018bf97
- (void)statusChangeCatalogFoundSame:(id)arg1;	// IMP=0x000000000018be2c
- (void)statusChangeSetCatalogFoundNewer:(id)arg1;	// IMP=0x000000000018bd7b
- (void)statusChangeCatalogFoundNewer:(id)arg1;	// IMP=0x000000000018bba8
- (void)statusChange:(id)arg1 catalogFailure:(long long)arg2 forReason:(id)arg3;	// IMP=0x000000000018b959
- (void)statusChange:(id)arg1 catalogAnomaly:(long long)arg2 forReason:(id)arg3;	// IMP=0x000000000018b881
- (id)newCurrentStatusForDescriptor:(id)arg1;	// IMP=0x000000000018b44c
- (id)_baseAnalyticsData:(id)arg1;	// IMP=0x000000000018af18
- (void)_extendAssetDownloadOptionsWithAnalyticsData:(id)arg1 forDescriptor:(id)arg2 withBaseForPatch:(id)arg3;	// IMP=0x000000000018a6df
- (void)_extendCatalogDownloadOptionsWithAnalyticsData:(id)arg1;	// IMP=0x000000000018a44f
- (id)verifyDownloadNotBlockedBySetPolicy:(_Bool)arg1;	// IMP=0x000000000018a25e
- (void)mergeSetPolicyIntoAggregated:(id)arg1;	// IMP=0x0000000000189f9a
- (void)requestDownloadManagerCancelDownload:(id)arg1 forDescriptor:(id)arg2;	// IMP=0x0000000000189afa
- (void)requestDownloadManagerConfigDownload:(id)arg1 forDescriptor:(id)arg2;	// IMP=0x0000000000189393
- (void)requestDownloadManagerAssetDownload:(id)arg1 forDescriptor:(id)arg2 withBaseForPatch:(id)arg3;	// IMP=0x0000000000188882
- (id)autoAssetSetAssetType;	// IMP=0x000000000018855a
- (void)requestDownloadManagerCatalogLookup:(id)arg1;	// IMP=0x0000000000187358
- (void)releaseLookupGrant;	// IMP=0x0000000000187249
- (void)obtainLookupGrant;	// IMP=0x000000000018717a
- (_Bool)isMorePreferredFormat:(id)arg1 comparedTo:(id)arg2;	// IMP=0x0000000000186f0d
- (id)newSessionID;	// IMP=0x0000000000186a1b
- (id)newAssetDownloadOptions;	// IMP=0x0000000000186269
- (id)newCatalogDownloadOptions;	// IMP=0x0000000000185676
- (void)downloadCatalog:(id)arg1;	// IMP=0x000000000018553c
- (void)refreshDownloadedToManager;	// IMP=0x0000000000184b0b
- (void)refreshFoundToManager;	// IMP=0x000000000018433e
- (id)refreshOnFilesystemFromManagerPromotingIfStaged:(_Bool)arg1;	// IMP=0x0000000000183bc4
- (_Bool)isFoundAlreadyOnFilesystem;	// IMP=0x00000000001828d0
- (id)latestInstalledOnFilesystem;	// IMP=0x0000000000181f49
- (id)installedOnFilesystemWithVersion:(id)arg1;	// IMP=0x0000000000181d0f
- (void)updateSetResults:(id)arg1 atomicInstanceDiscovered:(_Bool)arg2 availableForUse:(_Bool)arg3 downloading:(_Bool)arg4 buildingResultSetFound:(_Bool)arg5;	// IMP=0x00000000001811dd
- (void)updateResultPropertiesWithDescriptor:(id)arg1;	// IMP=0x0000000000180db2
- (void)checkFilesystemAndDecidePurgeOrLookup;	// IMP=0x0000000000180158
- (id)decideFollowupBoost:(id)arg1 forJobEvent:(id)arg2 boostEvent:(id)arg3 noBoostEvent:(id)arg4;	// IMP=0x000000000018005d
- (void)stagerJobDownloadDone:(id)arg1 reportingError:(id)arg2;	// IMP=0x000000000017fec4
- (void)stagerJobDetermineDone:(id)arg1 reportingError:(id)arg2;	// IMP=0x000000000017fd2b
- (void)stagerJobDone:(id)arg1 reportingError:(id)arg2;	// IMP=0x000000000017fbee
- (void)stagerJobReportProgress:(id)arg1 reportingError:(id)arg2;	// IMP=0x000000000017fae3
- (void)doneWithAllJobs:(id)arg1 withLookupError:(id)arg2;	// IMP=0x000000000017f5e4
- (void)doneWithAllJobs:(id)arg1;	// IMP=0x000000000017f250
- (void)replyToSetCheckAtomicDownloadSuccess;	// IMP=0x000000000017ea32
- (void)replyToJobsWhenLockFoundSame:(id)arg1;	// IMP=0x000000000017e411
- (void)replyToJobsWhenContentDownloaded:(id)arg1;	// IMP=0x000000000017dd4b
- (void)replyToJobsWhenLookupFailed:(id)arg1 withLookupError:(id)arg2;	// IMP=0x000000000017d487
- (void)replyToJobsWhenCatalogDownloaded:(id)arg1 discoveredNewer:(_Bool)arg2;	// IMP=0x000000000017c958
- (void)foundAndDownloadedSet:(id)arg1 forJobParam:(id)arg2;	// IMP=0x000000000017c4e8
- (void)foundAndDownloaded:(id)arg1 forJobParam:(id)arg2 wasPatched:(_Bool)arg3;	// IMP=0x000000000017c121
- (_Bool)anyJobInterestedInContent;	// IMP=0x000000000017bd6c
- (void)addClientRequestAndMergeNeeds:(id)arg1 forJobEvent:(id)arg2;	// IMP=0x000000000017bb42
- (id)mostSpecificSelectorToReport;	// IMP=0x000000000017b8ce
- (void)desireChangedToUserInitiated;	// IMP=0x000000000017b60d
- (id)removeCurrentJobTask;	// IMP=0x000000000017b371
- (id)getCurrentJobTask;	// IMP=0x000000000017b285
- (void)setCurrentJobTask:(id)arg1;	// IMP=0x000000000017ad92
- (void)addToActiveJobTasks:(id)arg1;	// IMP=0x000000000017995e
- (void)_rememberIfSchedulerInvolved:(id)arg1;	// IMP=0x00000000001795ab
- (void)replyToClientForJobParam:(id)arg1 withResponseError:(id)arg2;	// IMP=0x0000000000179283
- (void)finishedSetJobFinalizeStatus:(id)arg1 failingWithError:(id)arg2;	// IMP=0x0000000000178304
- (void)_autoAssetJobFinished:(id)arg1 forJobFinishedReason:(id)arg2 failingWithError:(id)arg3;	// IMP=0x00000000001775a4
- (void)autoAssetJobFinished:(id)arg1 forJobFinishedReason:(id)arg2 failingWithError:(id)arg3;	// IMP=0x00000000001772eb
- (void)autoAssetJobFinished:(id)arg1 forJobFinishedReason:(id)arg2;	// IMP=0x00000000001772d6
- (void)finishJobTaskForJobParam:(id)arg1 withResponseError:(id)arg2;	// IMP=0x0000000000177042
- (void)finishJobTaskForJobParam:(id)arg1 withUnderlyingError:(id)arg2 fromAction:(id)arg3;	// IMP=0x0000000000176e48
- (void)setProgressAssetDownload:(id)arg1;	// IMP=0x0000000000176bc9
- (void)setProgressReadyToStartDownloads;	// IMP=0x000000000017665c
- (void)reportJustDownloadedAssetOfSet:(id)arg1;	// IMP=0x0000000000175cc1
- (id)setEntryBeingDownloaded;	// IMP=0x0000000000175b64
- (_Bool)placeNextSetAssetDescriptorToDownload:(id)arg1 restrictToFull:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000017526a
- (_Bool)remainingSetDescriptorToBeDownloaded;	// IMP=0x0000000000174e0d
- (id)newAtomicInstancesDownloadedForDescriptor:(id)arg1;	// IMP=0x0000000000174d1c
- (void)updateAutoAssetSetDescriptor;	// IMP=0x0000000000174718
- (void)updateSetDescriptorDownloaded:(id)arg1 justDownloaded:(_Bool)arg2;	// IMP=0x0000000000174272
- (void)updateSetTrackingWithSuccessfulAssetDownload;	// IMP=0x0000000000173fd5
- (void)statusChangeSetCatalogFoundSame:(id)arg1;	// IMP=0x0000000000173f24
- (_Bool)isSetFoundAlreadyOnFilesystem;	// IMP=0x000000000017387e
- (void)refreshSetFoundToManager:(_Bool)arg1;	// IMP=0x00000000001736dc
- (void)appendUniqueSelectorForDescriptor:(id)arg1 toArray:(id)arg2;	// IMP=0x0000000000173375
- (id)newFoundSetDescriptorsAsNewerDiscovered;	// IMP=0x0000000000172952
- (id)assetSetEntryForAssetMetadata:(id)arg1;	// IMP=0x00000000001726fb
- (_Bool)wasAssetSetSpecifierRequested:(id)arg1;	// IMP=0x00000000001724cb
- (id)reportSetCatalogDecideFound:(id)arg1;	// IMP=0x000000000017096c
- (void)clearSetStatusStartingSetJob;	// IMP=0x000000000017066d
- (long long)actionUnknownAction:(id)arg1 error:(id *)arg2;	// IMP=0x000000000017059c
- (long long)action_SetJobEndedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000017048b
- (long long)action_SetJobFailedAwaiting:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001702ac
- (long long)action_SetJobSuccessAwaiting:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001701f2
- (long long)action_SetJobSuccessFoundSameSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016ff6e
- (long long)action_SetJobSuccessSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016fe89
- (long long)action_ReportFailBoostSetDownloadNext:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016fda5
- (long long)action_UserInitiatedSetDownloadNext:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016fa4c
- (long long)action_SetDownloadSameFull:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016f98e
- (long long)action_SetDownloadNext:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016f6e7
- (long long)action_SetDownloadNewestFull:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016f469
- (long long)action_SetJobLookupRevokedContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016f290
- (long long)action_SetJobFailedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016f05f
- (long long)action_SetJobNoNewerSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016ef2e
- (long long)action_SetJobNoneSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016edc2
- (long long)action_SetLookupNoNewerContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016ec23
- (long long)action_SetLookupNoneContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016eb11
- (long long)action_SetLookupSuccessContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e9ff
- (long long)action_SetDecideDownload:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e689
- (long long)action_MergeAtomicCntnuDecideLookupBoost:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e584
- (long long)action_MergeAtomicLockDecideLookupBoost:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e47b
- (long long)action_MergeAtomicNeedsDecideLookupBoost:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e35d
- (long long)action_MergeAtomicAlterDecideLookupBoost:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e258
- (long long)action_MergeAtomicNeedsDecideLookup:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e14b
- (long long)action_MergeAtomicAlterDecideLookup:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016e046
- (long long)action_MergeAtomicEndLockDecideInterest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016df41
- (long long)action_MergeAtomicContinueLock:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016de3c
- (long long)action_MergeAtomicAddLock:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016dd99
- (long long)action_MergeAtomicNeeds:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016dcf6
- (long long)action_MergeAtomicAlterNeeds:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016dbf1
- (long long)action_AddAtomicEndDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016dadf
- (long long)action_AddAtomicContinueDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d9cd
- (long long)action_AddAtomicLockDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d8d8
- (long long)action_AddAtomicCheckDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d7f5
- (long long)action_AddAtomicNeedDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d700
- (long long)action_AddAtomicAlterDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d60b
- (long long)action_DoneReportingProgress:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d58b
- (long long)action_ReleaseGrantJobFailedCanceled:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d45e
- (long long)action_JobFailedCanceled:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d34d
- (long long)action_FailRequestCanceling:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d248
- (long long)action_ReleaseGrantCanceling:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d1b8
- (long long)action_CancelAssetDownload:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d103
- (long long)action_SimulateSuspendCatalogLookupIssue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016d06d
- (long long)action_CheckSimulateEndStatusRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016cfbb
- (long long)action_RecordSimulateOperation:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016cf1f
- (long long)action_JobEndedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016ce0e
- (long long)action_JobPostponedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016cca9
- (long long)action_ReleaseGrantJobFailedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016cb0a
- (long long)action_JobFailedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c978
- (long long)action_JobRevokedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c86a
- (long long)action_JobNoNewerSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c75c
- (long long)action_JobSuccessAlreadyDownloaded:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c6bd
- (long long)action_JobSuccessDownloadedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c5a3
- (long long)action_JobSuccessPatchedSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c486
- (long long)action_JobSuccessFoundSameSchedule:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016c151
- (long long)action_JobFailedAwaiting:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016bed0
- (long long)action_JobSuccessDownloadedAwaiting:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016bdcd
- (long long)action_JobSuccessPatchedAwaiting:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016bcc7
- (long long)action_LookupFailedContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016bb76
- (long long)action_LookupRevokedContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b99d
- (long long)action_LookupNoNewerContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b81d
- (long long)action_LookupSuccessContinue:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b6a9
- (long long)action_ReportFailureUserInitiated:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b5c5
- (long long)action_NowUserInitiated:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b526
- (long long)action_BoostAndRequestLookupGrant:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b473
- (long long)action_BoostToUserInitiated:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016b3cd
- (long long)action_FailedPatchDecideTryFull:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016ae59
- (long long)action_DownloadSuccessDecideMore:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016a7ef
- (long long)action_UserInitiatedDownloadNewestFull:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016a6a5
- (long long)action_DownloadNewestFull:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016a5e7
- (long long)action_DownloadNewestPatch:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016a314
- (long long)action_PersistedDecideDownload:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016a0e7
- (long long)action_RequestSpecificPersisted:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000169fa6
- (long long)action_DecideDownloadOrPostpone:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000169996
- (long long)action_ReportCatalogDecideFound:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001675b7
- (long long)action_RemoveClientDecideInterest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000167551
- (long long)action_RemoveClient:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001674eb
- (long long)action_AdoptRegister:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000167448
- (long long)action_MergeContinueLockDecideBoost:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016733f
- (long long)action_MergeAddLockDecideBoost:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000167236
- (long long)action_MergeRemoveLockDecideInterest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016715f
- (long long)action_MergeRemoveLock:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001670bc
- (long long)action_MergeContinueLock:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000167019
- (long long)action_MergeAddLock:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166f76
- (long long)action_MergeNeedsDecideLookupBoost:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166e58
- (long long)action_MergeNeedsDecideBoost:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166d3a
- (long long)action_MergeNeedsDecideLookup:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166c7b
- (long long)action_MergeNeeds:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166bd8
- (long long)action_AddTaskScheduler:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166b26
- (long long)action_DecideDonePurging:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000166ac0
- (long long)action_DecideStartupDownloading:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165f59
- (long long)action_StagerDownloadDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165dd7
- (long long)action_StagerDetermineDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165c6a
- (long long)action_DownloadCatalog:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165bd3
- (long long)action_RequestLookupGrant:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165b55
- (long long)action_AddTaskLockDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165a68
- (long long)action_AddTaskInterestDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165978
- (long long)action_AddTaskDetermineDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001658b9
- (long long)action_AddTaskCheckDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001657cc
- (long long)action_AddTaskSchedulerDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001656e9
- (long long)action_AddTaskDecideFilesystem:(id)arg1 error:(id *)arg2;	// IMP=0x000000000016560e
- (id)clientName;	// IMP=0x0000000000165555
- (id)_updateLatestSummary;	// IMP=0x0000000000165322
- (id)_longSummary;	// IMP=0x00000000001644d6
- (id)_summary;	// IMP=0x000000000016440f
- (id)summary;	// IMP=0x00000000001643fd
@property(readonly, copy) NSString *description;
- (void)cancelAutoAssetJob;	// IMP=0x0000000000164366
- (void)startStagerDownloadForStaging:(id)arg1 withAssetTargetBuildVersion:(id)arg2 withControlInformation:(id)arg3;	// IMP=0x000000000016428b
- (void)startStagerDetermineIfAvailable:(id)arg1 withAssetTargetBuildVersion:(id)arg2 withControlInformation:(id)arg3;	// IMP=0x00000000001641b0
- (void)persistedStateForDownloadJob:(id)arg1;	// IMP=0x000000000016412b
- (void)exclusiveLookupForAssetTypeGranted:(id)arg1;	// IMP=0x00000000001640a6
- (void)handleDownloadAssetJobFinished:(id)arg1 downloadError:(id)arg2;	// IMP=0x0000000000163fb3
- (void)handleDownloadAssetProgressForJob:(id)arg1 withProgress:(id)arg2;	// IMP=0x0000000000163e9f
- (void)handleDownloadConfigJobFinished:(id)arg1 configError:(id)arg2;	// IMP=0x0000000000163dac
- (void)handleDownloadCatalogJobFinished:(id)arg1 withCatalog:(id)arg2 downloadError:(id)arg3;	// IMP=0x0000000000163c8e
- (void)handleSimulateOperation:(id)arg1;	// IMP=0x0000000000163bf0
- (void)clientRequestedStatus:(id)arg1;	// IMP=0x0000000000163b52
- (void)handleClientRequest:(id)arg1 withControlInformation:(id)arg2;	// IMP=0x00000000001637b4
- (void)startResumingInFlightDownload:(id)arg1 withControlInformation:(id)arg2;	// IMP=0x00000000001636fa
- (void)startScheduleTriggeredSetJob:(id)arg1;	// IMP=0x000000000016365a
- (void)startScheduleTriggeredSelector:(id)arg1 withControlInformation:(id)arg2;	// IMP=0x00000000001635a0
- (void)startHandlingClientRequest:(id)arg1 withControlInformation:(id)arg2;	// IMP=0x0000000000163207
- (id)initForInstance:(id)arg1 orForSelector:(id)arg2 orForDescriptor:(id)arg3 orForSetInstance:(id)arg4 withSetDesire:(id)arg5 withSchedulerSetPolicy:(id)arg6 usingSetConfiguration:(id)arg7 usingSetDescriptor:(id)arg8 withBaseForPatchDescriptor:(id)arg9 withAutoAssetUUID:(id)arg10 asStagerJob:(_Bool)arg11;	// IMP=0x0000000000161d3b
- (id)initForSetInstance:(id)arg1 withSchedulerSetPolicy:(id)arg2 usingSetConfiguration:(id)arg3 usingSetDescriptor:(id)arg4 withAutoAssetUUID:(id)arg5;	// IMP=0x0000000000161cfc
- (id)initForSetInstance:(id)arg1 withSetDesire:(id)arg2 usingSetConfiguration:(id)arg3 usingSetDescriptor:(id)arg4 withAutoAssetUUID:(id)arg5;	// IMP=0x0000000000161cbd
- (id)initForDescriptor:(id)arg1 baseForPatchDescriptor:(id)arg2 withAutoAssetUUID:(id)arg3;	// IMP=0x0000000000161c77
- (id)initForSelector:(id)arg1 withAutoAssetUUID:(id)arg2 asStagerJob:(_Bool)arg3;	// IMP=0x0000000000161c2f
- (id)initForSelector:(id)arg1 withAutoAssetUUID:(id)arg2;	// IMP=0x0000000000161be4
- (id)initForInstance:(id)arg1 withAutoAssetUUID:(id)arg2;	// IMP=0x0000000000161b9f
- (long long)performAction:(id)arg1 onEvent:(id)arg2 inState:(id)arg3 withInfo:(id)arg4 nextState:(id)arg5 error:(id *)arg6;	// IMP=0x0000000000160d6b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

