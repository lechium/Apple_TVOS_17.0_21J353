//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, NSURL;

__attribute__((visibility("hidden")))
@interface FSNode : NSObject
{
    NSURL *_url;	// 8 = 0x8
    unsigned long long _cacheExpiration;	// 16 = 0x10
    unsigned int _isDirectory:2;	// 24 = 0x18
    unsigned int _hasReferringAliasNode:1;	// 24 = 0x18
    unsigned int _canUseFileCache:1;	// 24 = 0x18
    unsigned int _isInitialized:1;	// 24 = 0x18
}

+ (id)systemDataVolumeNode;	// IMP=0x0010000000011684
+ (id)prebootVolumeNode;	// IMP=0x00100000000115b6
+ (id)rootVolumeNode;	// IMP=0x00100000000114e8
+ (id)_resolvedNodeFromAliasFile:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x0010000000010528
+ (id)_resolvedURLFromAliasFile:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x00100000000103c5
+ (_Bool)supportsSecureCoding;	// IMP=0x001000000000ecb9
+ (_Bool)canReadMetadataOfURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x001000000001345d
+ (_Bool)canWriteURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x0010000000013444
+ (_Bool)canReadURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x001000000001342b
+ (_Bool)canReadMetadataOfURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x0010000000013230
+ (_Bool)canWriteURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x0010000000013217
+ (_Bool)canReadURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2;	// IMP=0x00100000000131fe
+ (_Bool)canAccessURL:(id)arg1 fromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg2 operation:(const char *)arg3;	// IMP=0x0010000000013006
+ (_Bool)canAccessURL:(id)arg1 withAuditToken:(const CDStruct_4c969caf *)arg2 operation:(const char *)arg3;	// IMP=0x0010000000012ed9
+ (_Bool)getFileSystemRepresentation:(char [1024])arg1 forBookmarkData:(id)arg2;	// IMP=0x0010000000014a70
+ (_Bool)isBookmarkDataFull:(id)arg1;	// IMP=0x00100000000149e8
+ (_Bool)getVolumeIdentifier:(unsigned long long *)arg1 forBookmarkData:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000014960
+ (id)nameForBookmarkData:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000147da
+ (id)pathForBookmarkData:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000145bd
+ (unsigned char)compareBookmarkData:(id)arg1 toBookmarkData:(id)arg2;	// IMP=0x001000000001436d
+ (id)injectSimulatorRootIntoBookmarkData:(id)arg1;	// IMP=0x0010000000013f7a
+ (id)removeSimulatorRootFromBookmarkData:(id)arg1;	// IMP=0x0010000000013de8
+ (id)simulatorRootPath;	// IMP=0x0010000000013ca1
- (void).cxx_destruct;	// IMP=0x0000000000012be1
- (_Bool)getWriterBundleIdentifier:(id *)arg1 error:(id *)arg2;	// IMP=0x0000000000012b92
- (_Bool)getHFSType:(unsigned int *)arg1 creator:(unsigned int *)arg2 error:(id *)arg3;	// IMP=0x000000000001288d
- (_Bool)getLength:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x0000000000012802
- (_Bool)getContentModificationDate:(double *)arg1 error:(id *)arg2;	// IMP=0x00000000000127ee
- (_Bool)getCreationDate:(double *)arg1 error:(id *)arg2;	// IMP=0x0000000000012582
- (id)bundleIdentifierWithContext:(struct LSContext *)arg1 error:(id *)arg2;	// IMP=0x00000000000122ea
- (id)bundleIdentifierWithError:(id *)arg1;	// IMP=0x00000000000122d3
- (id)bundleInfoDictionaryWithError:(id *)arg1;	// IMP=0x0000000000012178
- (struct __CFBundle *)copyCFBundleWithError:(id *)arg1;	// IMP=0x0000000000012042
- (_Bool)getOwnerUID:(unsigned int *)arg1 error:(id *)arg2;	// IMP=0x0000000000011fb8
- (_Bool)getFileIdentifier:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x0000000000011f2d
- (_Bool)getInodeNumber:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x0000000000011ea2
- (_Bool)getDeviceNumber:(int *)arg1 error:(id *)arg2;	// IMP=0x0000000000011e18
@property(readonly, getter=isAVCHDCollection) _Bool AVCHDCollection;
@property(readonly, nonatomic, getter=isOnLocalVolume) _Bool onLocalVolume; // @dynamic onLocalVolume;
@property(readonly, nonatomic, getter=isOnDiskImage) _Bool onDiskImage; // @dynamic onDiskImage;
@property(readonly, nonatomic, getter=isSecuredSystemContent) _Bool securedSystemContent; // @dynamic securedSystemContent;
- (_Bool)getVolumeIdentifier:(unsigned long long *)arg1 error:(id *)arg2;	// IMP=0x00000000000117c7
@property(readonly, nonatomic, getter=isMountTrigger) _Bool mountTrigger; // @dynamic mountTrigger;
@property(readonly, nonatomic, getter=isVolume) _Bool volume; // @dynamic volume;
- (id)extensionWithError:(id *)arg1;	// IMP=0x00000000000112ef
- (id)nameWithError:(id *)arg1;	// IMP=0x0000000000011192
- (id)canonicalPathWithError:(id *)arg1;	// IMP=0x0000000000011178
- (id)pathWithError:(id *)arg1;	// IMP=0x0000000000011161
- (_Bool)getFileSystemRepresentation:(char [1024])arg1 error:(id *)arg2;	// IMP=0x00000000000110a7
- (id)canonical:(_Bool)arg1 pathWithError:(id *)arg2;	// IMP=0x0000000000010ec7
@property(readonly, nonatomic) _Bool hasHiddenExtension; // @dynamic hasHiddenExtension;
@property(readonly, nonatomic, getter=isHidden) _Bool hidden; // @dynamic hidden;
@property(readonly, nonatomic, getter=isRegularFile) _Bool regularFile; // @dynamic regularFile;
@property(readonly, nonatomic) _Bool hasPackageBit; // @dynamic hasPackageBit;
@property(readonly, nonatomic, getter=isAliasFile) _Bool aliasFile; // @dynamic aliasFile;
@property(readonly, nonatomic, getter=isSymbolicLink) _Bool symbolicLink; // @dynamic symbolicLink;
@property(readonly, nonatomic, getter=isResolvable) _Bool resolvable; // @dynamic resolvable;
@property(readonly, nonatomic, getter=isExecutable) _Bool executable; // @dynamic executable;
@property(readonly, nonatomic, getter=isExecutableModeFile) _Bool executableModeFile; // @dynamic executableModeFile;
@property(readonly, nonatomic, getter=isBusyDirectory) _Bool busyDirectory; // @dynamic busyDirectory;
@property(readonly, nonatomic, getter=isDirectory) _Bool directory; // @dynamic directory;
- (_Bool)getIsDirectory_NoIO:(_Bool *)arg1;	// IMP=0x00000000000108fa
- (id)temporaryDirectoryNodeWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x00000000000107ff
- (id)resolvedNodeWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x0000000000010702
- (void)setReferringAliasNode:(id)arg1;	// IMP=0x0000000000010386
- (id)referringAliasNode;	// IMP=0x000000000001035b
- (id)diskImageURLWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x00000000000102f1
- (id)volumeNodeWithFlags:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x0000000000010251
- (id)childNodeWithRelativePath:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000ff84
- (_Bool)childNodeWithRelativePathExists:(id)arg1;	// IMP=0x000000000000ff49
- (_Bool)checkResourceIsReachableAndReturnError:(id *)arg1;	// IMP=0x000000000000ff20
- (_Bool)getCachedResourceValueIfPresent:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000ff08
- (void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000000fe9b
- (_Bool)getTemporaryResourceValue:(id *)arg1 forKey:(id)arg2;	// IMP=0x000000000000fe83
- (void)removeCachedResourceValueForKey:(id)arg1;	// IMP=0x000000000000fe2b
- (_Bool)setResourceValue:(id)arg1 forKey:(id)arg2 options:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x000000000000fc8a
- (_Bool)getResourceValue:(id *)arg1 forKey:(id)arg2 options:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x000000000000f920
- (void)clearURLPropertyCacheIfStale;	// IMP=0x000000000000f881
- (id)initTemporaryNodeOnVolume:(id)arg1 flags:(unsigned int)arg2 fileDescriptor:(int *)arg3 error:(id *)arg4;	// IMP=0x000000000000f417
- (id)initWithConfigurationString:(int)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000f335
- (id)initWithDirectory:(unsigned long long)arg1 inDomain:(unsigned long long)arg2 lastPathComponent:(id)arg3 createIntermediateDirectories:(_Bool)arg4 flags:(unsigned int)arg5 error:(id *)arg6;	// IMP=0x000000000000f05e
- (id)initWithFileSystemRepresentation:(const char *)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000eee4
- (id)initWithPath:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000ed6d
- (id)URL;	// IMP=0x000000000000ecc9
@property(readonly, nonatomic) _Bool canIssueIO;
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000000eaa3
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000000e9db
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000000e7c8
- (id)redactedDescription;	// IMP=0x000000000000e773
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000000e437
- (void)prepareForReuse;	// IMP=0x000000000000e370
- (id)initWithURL:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x000000000000de44
- (_Bool)setFinderInfo:(const CDUnion_739f5cf2 *)arg1 error:(id *)arg2;	// IMP=0x0000000000012d41
- (_Bool)getFinderInfo:(CDUnion_739f5cf2 *)arg1 error:(id *)arg2;	// IMP=0x0000000000012bf1
- (_Bool)canReadMetadataFromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x00000000000133b4
- (_Bool)canWriteFromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x000000000001333d
- (_Bool)canReadFromSandboxWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x00000000000132c6
- (_Bool)canReadMetadataWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000013187
- (_Bool)canWriteWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000013110
- (_Bool)canReadWithAuditToken:(const CDStruct_4c969caf *)arg1;	// IMP=0x0000000000013099
- (_Bool)setExtendedAttribute:(id)arg1 name:(id)arg2 options:(int)arg3 error:(id *)arg4;	// IMP=0x00000000000139be
- (id)extendedAttributeWithName:(id)arg1 options:(int)arg2 error:(id *)arg3;	// IMP=0x00000000000134f3
- (id)initByResolvingBookmarkData:(id)arg1 relativeToNode:(id)arg2 bookmarkDataIsStale:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x0000000000014590
- (id)initByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToNode:(id)arg3 bookmarkDataIsStale:(_Bool *)arg4 error:(id *)arg5;	// IMP=0x000000000001438b
- (id)bookmarkDataWithOptions:(unsigned long long)arg1 relativeToNode:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000140fa
- (id)bookmarkDataRelativeToNode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000140dd

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

