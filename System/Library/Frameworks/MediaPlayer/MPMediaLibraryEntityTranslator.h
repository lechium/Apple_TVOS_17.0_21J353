//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface MPMediaLibraryEntityTranslator : NSObject
{
    NSMutableDictionary *_propertiesToTranslators;	// 8 = 0x8
    NSMutableDictionary *_relationshipsToTranslators;	// 16 = 0x10
    _Bool _transient;	// 24 = 0x18
    Class _MPModelClass;	// 32 = 0x20
    void *_entityClass;	// 40 = 0x28
    CDUnknownBlockType _allowedItemPredicatesBlock;	// 48 = 0x30
    CDUnknownBlockType _entityQueryBlock;	// 56 = 0x38
}

+ (id)translatorForTransientMPModelClass:(Class)arg1;	// IMP=0x00600000002e4282
+ (id)translatorForMPModelClass:(Class)arg1 mlcoreEntityClass:(void *)arg2;	// IMP=0x00600000002e4267
+ (id)translatorForMPModelClass:(Class)arg1;	// IMP=0x00600000002e421c
+ (id)_translatorForMPModelClass:(Class)arg1 mlcoreEntityClass:(void *)arg2 create:(_Bool)arg3 transient:(_Bool)arg4;	// IMP=0x00600000002e3e03
- (void).cxx_destruct;	// IMP=0x00000000002dfaf0
@property(copy, nonatomic) CDUnknownBlockType entityQueryBlock; // @synthesize entityQueryBlock=_entityQueryBlock;
@property(copy, nonatomic) CDUnknownBlockType allowedItemPredicatesBlock; // @synthesize allowedItemPredicatesBlock=_allowedItemPredicatesBlock;
@property(readonly, nonatomic) void *entityClass; // @synthesize entityClass=_entityClass;
@property(readonly, nonatomic, getter=isTransient) _Bool transient; // @synthesize transient=_transient;
@property(readonly, nonatomic) Class MPModelClass; // @synthesize MPModelClass=_MPModelClass;
- (vector_2194507e)_MLCorePropertiesForPropertySet:(id)arg1 withForeignPropertyBase:(void *)arg2;	// IMP=0x00000000002dedd5
- (id)_objectForPropertySet:(id)arg1 entityClass:(void *)arg2 propertyCache:(const void *)arg3 baseTranslator:(id)arg4 prependKeyPath:(id)arg5 context:(id)arg6;	// IMP=0x00000000002de9ba
- (id)_valueForKeyPath:(id)arg1 forPropertyCache:(const void *)arg2 context:(id)arg3;	// IMP=0x00000000002de5ac
- (shared_ptr_66289562)_propertyMapForKeyPath:(id)arg1 includePropertiesToSort:(_Bool)arg2;	// IMP=0x00000000002ddbab
- (void *)_propertyForKeyPath:(id)arg1;	// IMP=0x00000000002dd611
- (id)_propertyTranslatorForKeyPath:(id)arg1;	// IMP=0x00000000002dd453
- (unordered_map_b48bc465)propertiesToFetchForPropertyKey:(id)arg1;	// IMP=0x00000000002dd1aa
- (Class)classForRelationshipKey:(id)arg1;	// IMP=0x00000000002dd142
- (vector_05d2ab2a)MLCorePredicateForModelPropertyFilters:(id)arg1;	// IMP=0x00000000002dc722
- (vector_9ebba6ab)MLCoreSortDescriptorsForModelSortDescriptors:(id)arg1;	// IMP=0x00000000002dbba6
- (vector_2194507e)MLCorePropertiesForPropertySet:(id)arg1;	// IMP=0x00000000002dbb84
- (shared_ptr_889ae36a)propertiesQueryForPropertySet:(id)arg1 scopedContainers:(id)arg2 allowedItemIdentifiers:(id)arg3 view:(id)arg4;	// IMP=0x00000000002db450
- (shared_ptr_e8455ceb)entityQueryForPropertySet:(id)arg1 sortDescriptors:(id)arg2 context:(id)arg3 view:(id)arg4;	// IMP=0x00000000002d9bf2
- (id)identifiersForPropertyCache:(const void *)arg1 context:(id)arg2;	// IMP=0x00000000002d9bc3
- (id)objectForPropertySet:(id)arg1 entityClass:(void *)arg2 propertyCache:(const void *)arg3 context:(id)arg4;	// IMP=0x00000000002d9b8d
- (void)mapRelationshipKey:(id)arg1 toModelClass:(Class)arg2 transient:(_Bool)arg3 usingForeignPropertyBase:(void *)arg4 relationshipValidationProperties:(const void *)arg5 isValidRelationshipHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000002d9a0a
- (void)mapRelationshipKey:(id)arg1 toModelClass:(Class)arg2 transient:(_Bool)arg3 usingForeignPropertyBase:(void *)arg4;	// IMP=0x00000000002d98fc
- (void)mapRelationshipKey:(id)arg1 toModelClass:(Class)arg2 usingForeignPropertyBase:(void *)arg3;	// IMP=0x00000000002d98e4
- (void)mapPropertyKey:(id)arg1 withPropertiesToFetch:(const void *)arg2 propertiesToSort:(const void *)arg3 sortTransformer:(CDUnknownBlockType)arg4 filterTransformer:(CDUnknownBlockType)arg5 valueTransformer:(CDUnknownBlockType)arg6;	// IMP=0x00000000002d94ee
- (void)mapPropertyKey:(id)arg1 withPropertiesToFetch:(const void *)arg2 propertiesToSort:(const void *)arg3 sortTransformer:(CDUnknownBlockType)arg4 valueTransformer:(CDUnknownBlockType)arg5;	// IMP=0x00000000002d94d2
- (void)mapPropertyKey:(id)arg1 withPropertiesToFetch:(const void *)arg2 valueTransformer:(CDUnknownBlockType)arg3;	// IMP=0x00000000002d93d5
- (void)mapPropertyKey:(id)arg1 toMLProperty:(void *)arg2;	// IMP=0x00000000002d92ed
- (void)mapIdentifierMLProperties:(const void *)arg1 identifierCreationBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000002d91fd

@end

