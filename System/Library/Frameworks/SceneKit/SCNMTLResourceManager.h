//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MTKTextureLoader, NSMutableArray, SCNMTLBufferAllocator, SCNMTLLibraryManager, SCNMTLShadableKey, SCNMTLShaderBindingsGenerator;
@protocol MTLCommandQueue, MTLDepthStencilState, MTLDevice, MTLTexture;

__attribute__((visibility("hidden")))
@interface SCNMTLResourceManager : NSObject
{
    id <MTLDevice> _device;	// 8 = 0x8
    id <MTLCommandQueue> _commandQueue;	// 16 = 0x10
    struct __C3DEngineStats *__engineStats;	// 24 = 0x18
    SCNMTLLibraryManager *_libraryManager;	// 32 = 0x20
    SCNMTLShaderBindingsGenerator *_bindingsGenerator;	// 40 = 0x28
    struct __CFDictionary *_availablePipelineStates;	// 48 = 0x30
    struct os_unfair_lock_s _availablePipelineStatesLock;	// 56 = 0x38
    SCNMTLBufferAllocator *_commonProfileBuffersAllocator;	// 64 = 0x40
    CDStruct_670bd187 _availableLightingSystemReflectionProbeTextures;	// 72 = 0x48
    CDStruct_670bd187 _availableIrradianceTextures;	// 88 = 0x58
    CDStruct_670bd187 _availableRadianceTextures;	// 104 = 0x68
    CDStruct_670bd187 _availableImages;	// 120 = 0x78
    CDStruct_670bd187 _availableImageProxy;	// 136 = 0x88
    CDStruct_670bd187 _availableSamplers;	// 152 = 0x98
    CDStruct_670bd187 _availableIESTextures;	// 168 = 0xa8
    CDStruct_670bd187 _availableBuffers;	// 184 = 0xb8
    CDStruct_670bd187 _availableMeshes;	// 200 = 0xc8
    CDStruct_670bd187 _availableMeshSources;	// 216 = 0xd8
    CDStruct_670bd187 _availableMeshElements;	// 232 = 0xe8
    CDStruct_670bd187 _availableRasterizerStates;	// 248 = 0xf8
    CDStruct_670bd187 _availableDeformerStacks;	// 264 = 0x108
    CDStruct_670bd187 _availableSkinDeformerReadOnlyBuffers;	// 280 = 0x118
    CDStruct_670bd187 _availableMorphDeformerReadOnlyBuffers;	// 296 = 0x128
    CDStruct_670bd187 _availableComputePipelines;	// 312 = 0x138
    CDStruct_670bd187 _availableComputePipelinesWithStageDescriptor;	// 328 = 0x148
    CDStruct_670bd187 _availableColorMatchingComputePipelines;	// 344 = 0x158
    CDStruct_670bd187 _availableTessellators;	// 360 = 0x168
    CDStruct_670bd187 _availableWireframeMaterials;	// 376 = 0x178
    CDStruct_670bd187 _availableOpenSubdivComputeEvaluators;	// 392 = 0x188
    CDStruct_670bd187 _availableShadables;	// 408 = 0x198
    SCNMTLShadableKey *_availableShadablesSearchKey;	// 424 = 0x1a8
    NSMutableArray *_availableStageDescriptors;	// 432 = 0x1b0
    struct os_unfair_lock_s _stageDescriptorsLock;	// 440 = 0x1b8
    id <MTLTexture> _areaLightPrecomputedDataTexture;	// 448 = 0x1c0
    id <MTLTexture> _specularDFGDiffuseHammonTexture;	// 456 = 0x1c8
    struct __C3DFXMetalProgram *_defaultProgram;	// 464 = 0x1d0
    struct __C3DFXMetalProgram *_defaultProgramForTessellation;	// 472 = 0x1d8
    struct __C3DFXMetalProgram *_isolateProgram;	// 480 = 0x1e0
    id <MTLDepthStencilState> _depthAndStencilStateWithReadWriteDepthDisabled;	// 488 = 0x1e8
    id <MTLTexture> _defaultTexture;	// 496 = 0x1f0
    id <MTLTexture> _defaultTexture3D;	// 504 = 0x1f8
    id <MTLTexture> _defaultCubeTexture;	// 512 = 0x200
    id <MTLTexture> _defaultLightingEnvironmentIrradianceTexture;	// 520 = 0x208
    id <MTLTexture> _defaultLightingEnvironmentRadianceTexture;	// 528 = 0x210
    MTKTextureLoader *_mtkTextureLoader;	// 536 = 0x218
}

+ (void)_fillVertexDescriptor:(id)arg1 withSemantic:(BOOL)arg2 inputSet:(long long)arg3 bufferIndex:(long long)arg4 vertexFormat:(unsigned long long)arg5 offset:(unsigned long long)arg6 stride:(unsigned long long)arg7;	// IMP=0x006000000007de34
+ (void)_fillVertexDescriptor:(id)arg1 withMeshSource:(struct __C3DMeshSource *)arg2 semantic:(BOOL)arg3 inputSet:(long long)arg4 bufferIndex:(long long)arg5;	// IMP=0x006000000007db40
+ (void)unregisterManagerForDevice:(id)arg1;	// IMP=0x006000000007b55d
- (void)commandBufferDidCompleteWithError:(id)arg1;	// IMP=0x0000000000081478
- (id)renderResourceForMorpher:(struct __C3DMorpher *)arg1 baseMesh:(struct __C3DMesh *)arg2 dataKind:(unsigned char)arg3 provider:(CDUnknownBlockType)arg4;	// IMP=0x000000000007ecd8
- (id)renderResourceForSkinner:(struct __C3DSkinner *)arg1 baseMesh:(struct __C3DMesh *)arg2 dataKind:(unsigned char)arg3 provider:(CDUnknownBlockType)arg4;	// IMP=0x000000000007ea1f
- (id)renderResourceForDeformerStack:(struct __C3DDeformerStack *)arg1 node:(struct __C3DNode *)arg2 dataKind:(unsigned char)arg3;	// IMP=0x000000000007e92b
- (void)__updateMutableMesh:(struct __C3DMesh *)arg1 withMetalMesh:(id)arg2;	// IMP=0x000000000007dfd0
- (id)_bufferForData:(struct __CFData *)arg1 bytesPerIndex:(unsigned long long)arg2;	// IMP=0x000000000007d59d
- (id)_bufferForMTLBuffer:(void *)arg1;	// IMP=0x000000000007d494
- (void)_geometryWillDie:(id)arg1;	// IMP=0x000000000007ce70
- (void)_materialWillDie:(id)arg1;	// IMP=0x000000000007cbf6
- (void)_passWillDie:(id)arg1;	// IMP=0x000000000007c96a
- (void)_programWillDie:(id)arg1;	// IMP=0x000000000007c6c6
- (void)_removeMatchingProgram:(struct __C3DFXMetalProgram *)arg1 pass:(struct __C3DFXPass *)arg2;	// IMP=0x000000000007c58a
- (void)_rasterizerStateDidDie:(const void *)arg1;	// IMP=0x000000000007c571
- (void)_precomputedLightingEnvironmentWillDie:(id)arg1;	// IMP=0x000000000007c4d9
- (void)_imageProxyWillDie:(id)arg1;	// IMP=0x000000000007c460
- (void)_imageWillDie:(id)arg1;	// IMP=0x000000000007c304
- (void)_deformerStackDidChange:(id)arg1;	// IMP=0x000000000007c235
- (void)_deformerStackWillDie:(id)arg1;	// IMP=0x000000000007c1ba
- (void)_skinWillDie:(id)arg1;	// IMP=0x000000000007c162
- (void)_programHashCodeWillDie:(id)arg1;	// IMP=0x000000000007c10a
- (void)_morphWillDie:(id)arg1;	// IMP=0x000000000007c0b2
- (void)_meshWillDie:(id)arg1;	// IMP=0x000000000007bed7
- (void)_meshElementWillDie:(id)arg1;	// IMP=0x000000000007bdd5
- (void)_meshSourceWillDie:(id)arg1;	// IMP=0x000000000007bd5c
- (void)dealloc;	// IMP=0x000000000007bab5
- (id)initWithDevice:(id)arg1;	// IMP=0x000000000007b5e0
- (id)areaLightPrecomputedDataTexture;	// IMP=0x0000000000108795
- (id)specularDFGDiffuseHammonTextureWithRenderContext:(id)arg1;	// IMP=0x0000000000108650
- (id)radianceTextureForEnvironmentTexture:(id)arg1 engineContext:(struct __C3DEngineContext *)arg2 commandBuffer:(id)arg3;	// IMP=0x000000000010857b
- (id)newRadianceTextureForEnvironmentTexture:(id)arg1 engineContext:(struct __C3DEngineContext *)arg2 cpuAccessible:(_Bool)arg3 commandBuffer:(id)arg4;	// IMP=0x0000000000107ff4
- (void)_bakeSphericalHamonicsBasedIrradianceTexture:(id)arg1 forEnvironmentTexture:(id)arg2 renderContext:(id)arg3 applySH:(CDUnknownBlockType)arg4;	// IMP=0x0000000000107caf
- (void)_bakeStochasticIrradianceTexture:(id)arg1 forEnvironmentTexture:(id)arg2 mipmapLevelForSampling:(unsigned long long)arg3 renderContext:(id)arg4;	// IMP=0x0000000000107919
- (id)irradianceTextureForEnvironmentTexture:(id)arg1 renderContext:(id)arg2 applySH:(CDUnknownBlockType)arg3;	// IMP=0x00000000001077cc
- (id)radianceTextureForPrecomputedLightingEnvironment:(id)arg1;	// IMP=0x0000000000107623
- (id)irradianceTextureForPrecomputedLightingEnvironment:(id)arg1;	// IMP=0x000000000010747a
- (id)defaultLightingEnvironmentRadianceTexture;	// IMP=0x00000000001072f3
- (id)defaultLightingEnvironmentIrradianceTexture;	// IMP=0x000000000010716c
- (id)sphericalHarmonicsForEnvironmentTexture:(id)arg1 order:(unsigned long long)arg2 commandBuffer:(id)arg3;	// IMP=0x000000000010e4c3
- (id)shFromCPU:(id)arg1 commandBuffer:(id)arg2;	// IMP=0x000000000010df7e
- (id)computeEvaluatorWithContext:(struct MTLContext *)arg1 srcDesc:(const struct BufferDescriptor *)arg2 dstDesc:(const struct BufferDescriptor *)arg3 duDesc:(const struct BufferDescriptor *)arg4 dvDesc:(const struct BufferDescriptor *)arg5;	// IMP=0x0000000000221b32
- (void)colorMatchBiPlanarPixelBufferWithFormatType:(unsigned int)arg1 pixelBufferYCbCrMatrix:(id)arg2 pixelBufferColorPrimaries:(id)arg3 pixelBufferTransferFunction:(id)arg4 sourceTextureY:(id)arg5 sourceTextureCbCr:(id)arg6 sourceColorSpace:(struct CGColorSpace *)arg7 destinationColorSpace:(struct CGColorSpace *)arg8 destinationTexture:(id)arg9 renderContext:(id)arg10;	// IMP=0x00000000002386b3
- (void)colorMatchSourceTexture:(id)arg1 sourceColorSpace:(struct CGColorSpace *)arg2 destinationColorSpace:(struct CGColorSpace *)arg3 destinationTexture:(id)arg4 renderContext:(id)arg5;	// IMP=0x0000000000238606
- (id)iesTextureForProfile:(id)arg1 renderContext:(id)arg2;	// IMP=0x00000000002383da
- (id)defaultTexture3D;	// IMP=0x0000000000237fe6
- (id)defaultCubeTexture;	// IMP=0x0000000000237dc4
- (id)defaultTexture;	// IMP=0x0000000000237ba0
- (id)renderResourceForImage:(struct __C3DImage *)arg1 sampler:(struct __C3DTextureSampler *)arg2 options:(int)arg3 engineContext:(struct __C3DEngineContext *)arg4 didFallbackToDefaultTexture:(_Bool *)arg5;	// IMP=0x0000000000237758
- (id)renderResourceForImageProxy:(struct __C3DImageProxy *)arg1 sampler:(struct __C3DTextureSampler *)arg2 engineContext:(struct __C3DEngineContext *)arg3 didFallbackToDefaultTexture:(_Bool *)arg4;	// IMP=0x00000000002375d8
- (id)renderResourceForEffectSlot:(struct __C3DEffectSlot *)arg1 withEngineContext:(struct __C3DEngineContext *)arg2 didFallbackToDefaultTexture:(_Bool *)arg3;	// IMP=0x00000000002374f0
- (id)unstageTexture:(id)arg1 commandBuffer:(id)arg2;	// IMP=0x000000000023700a
- (id)latlongTextureForCubemap:(id)arg1 pixelFormat:(unsigned long long)arg2 renderContext:(id)arg3 needsMipmap:(_Bool)arg4;	// IMP=0x0000000000236e2d
- (id)newCubemapTextureForLatlongTexture:(id)arg1 pixelFormat:(unsigned long long)arg2 engineContext:(struct __C3DEngineContext *)arg3 needsMipmap:(_Bool)arg4;	// IMP=0x0000000000236c43
- (_Bool)_copyImage:(struct __C3DImage *)arg1 toTexture:(id)arg2 desc:(id)arg3 textureOptions:(int)arg4 needsMipMapGeneration:(_Bool)arg5;	// IMP=0x0000000000236282
- (id)_textureDescriptorFromImage:(struct __C3DImage *)arg1 needsMipMap:(_Bool)arg2 textureOptions:(int)arg3;	// IMP=0x0000000000235f69
- (void)_enqueueCopyFromTexture:(id)arg1 toTexture:(id)arg2 blitEncoder:(struct SCNMTLBlitCommandEncoder *)arg3 generateMipMaps:(_Bool)arg4;	// IMP=0x0000000000235cac
- (id)newTextureUsingMTKTextureLoaderWithData:(id)arg1 options:(id)arg2;	// IMP=0x0000000000235bce
- (id)newTextureUsingMTKTextureLoaderWithURL:(id)arg1 options:(id)arg2;	// IMP=0x0000000000235af0
- (id)newTextureWithDescriptor:(id)arg1;	// IMP=0x00000000002359d5
- (id)copyTextureByConvertingToCubeMapIfApplicable:(id)arg1 engineContext:(struct __C3DEngineContext *)arg2 needsMipmap:(_Bool)arg3;	// IMP=0x0000000000235924
- (_Bool)hasCommonProfilePrecompiledFunctions;	// IMP=0x00000000002e9dfc
- (void)reloadPipelinesIfNeeded;	// IMP=0x00000000002e9df6
- (id)colorMatchingComputePipelineStateForBiPlanarPixelBufferWithFormatType:(unsigned int)arg1 pixelBufferYCbCrMatrix:(id)arg2 pixelBufferColorPrimaries:(id)arg3 pixelBufferTransferFunction:(id)arg4 sourceColorSpace:(struct CGColorSpace *)arg5 destinationColorSpace:(struct CGColorSpace *)arg6 renderContext:(id)arg7;	// IMP=0x00000000002e9417
- (id)colorMatchingComputePipelineStateForSourceColorSpace:(struct CGColorSpace *)arg1 destinationColorSpace:(struct CGColorSpace *)arg2 renderContext:(id)arg3;	// IMP=0x00000000002e93e1
- (id)newComputePipelineStateWithFunctionName:(id)arg1 library:(id)arg2 constantValues:(id)arg3;	// IMP=0x00000000002e9393
- (id)newComputePipelineStateWithFunctionName:(id)arg1 constantValues:(id)arg2;	// IMP=0x00000000002e9340
- (id)newComputePipelineStateWithFunctionName:(id)arg1 library:(id)arg2;	// IMP=0x00000000002e932b
- (id)newComputePipelineStateWithFunctionName:(id)arg1;	// IMP=0x00000000002e92da
- (id)getUniqueStageDescriptor:(id)arg1;	// IMP=0x00000000002e8dab
- (id)computePipelineStateForKernel:(id)arg1 withStageDescriptor:(id)arg2 stageDescriptorUpdateBlock:(CDUnknownBlockType)arg3 constants:(id)arg4 constantsHash:(id)arg5;	// IMP=0x00000000002e89cc
- (id)_computePipelineStateForKernel:(id)arg1 constants:(id)arg2 constantsHash:(id)arg3 threadGroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg4;	// IMP=0x00000000002e8846
- (id)computePipelineStateForKernel:(id)arg1 constants:(id)arg2 constantsHash:(id)arg3;	// IMP=0x00000000002e8831
- (id)computePipelineStateForKernel:(id)arg1 threadGroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg2;	// IMP=0x00000000002e8817
- (id)computePipelineStateForKernel:(id)arg1;	// IMP=0x00000000002e87fd
- (id)newComputePipelineStateForDesc:(CDStruct_3ade659f)arg1 library:(id)arg2;	// IMP=0x00000000002e877e
- (void)_configureComputePipeline:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x00000000002e8688
- (id)_newComputeDescriptorForPipelineDesc:(CDStruct_3ade659f)arg1 library:(id)arg2;	// IMP=0x00000000002e8538
- (id)newRenderPipelineStateWithDesc:(CDStruct_43a6a166)arg1;	// IMP=0x00000000002e8234
- (void)_createPipelineStateWithDescriptor:(id)arg1 desc:(CDStruct_43a6a166)arg2 pipeline:(id)arg3;	// IMP=0x00000000002e7a2c
- (struct __C3DFXMetalProgram *)defaultProgramUsingTessellation:(_Bool)arg1;	// IMP=0x00000000002e7a0b
- (id)renderResourceForProgramDesc:(CDStruct_b964ece1)arg1 renderPassDescriptor:(id)arg2;	// IMP=0x00000000002e70df

@end

