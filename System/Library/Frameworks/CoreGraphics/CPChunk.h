//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface CPChunk
{
    struct CGRect bounds;	// 48 = 0x30
    _Bool shrinksWithChildren;	// 80 = 0x50
    _Bool dirtyBounds;	// 81 = 0x51
    unsigned int position;	// 84 = 0x54
    long long insertionOrder;	// 88 = 0x58
}

+ (float)chooseReferenceFontSizeFrom:(float)arg1 and:(float)arg2;	// IMP=0x00600000003a5440
- (double)rotationAngle;	// IMP=0x00000000003a53f5
- (void)setChunkPosition:(unsigned int)arg1;	// IMP=0x00000000003a53e5
- (unsigned int)chunkPosition;	// IMP=0x00000000003a53d5
- (void)translateObjectYBy:(double)arg1;	// IMP=0x00000000003a53bc
- (_Bool)intersectsChild:(struct CGRect)arg1;	// IMP=0x00000000003a52e6
- (void)setShrinksWithChildren:(_Bool)arg1;	// IMP=0x00000000003a52d6
- (_Bool)shrinksWithChildren;	// IMP=0x00000000003a52c6
- (_Bool)boundsEqualsRect:(struct CGRect)arg1 accuracy:(double)arg2;	// IMP=0x00000000003a522b
- (_Bool)geometricallyContains:(id)arg1;	// IMP=0x00000000003a516c
- (_Bool)overlapsVerticallyWith:(id)arg1;	// IMP=0x00000000003a4f2d
- (_Bool)overlapsHorizontallyWith:(id)arg1;	// IMP=0x00000000003a4ea3
- (void)orderedInsert:(id)arg1 usingSelector:(SEL)arg2;	// IMP=0x00000000003a4e06
- (int)clusterLevelHint;	// IMP=0x00000000003a4dfe
- (struct CGSize)advance;	// IMP=0x00000000003a4de5
- (float)fontSize;	// IMP=0x00000000003a4ddc
- (double)bottom;	// IMP=0x00000000003a4cf7
- (double)top;	// IMP=0x00000000003a4c05
- (double)center;	// IMP=0x00000000003a4bc5
- (double)right;	// IMP=0x00000000003a4af0
- (double)left;	// IMP=0x00000000003a4a39
- (long long)compareChunkPosition:(id)arg1;	// IMP=0x00000000003a49ef
- (long long)compareYDescendingX:(id)arg1;	// IMP=0x00000000003a4959
- (long long)compareYDescending:(id)arg1;	// IMP=0x00000000003a4901
- (long long)compareTopDescending:(id)arg1;	// IMP=0x00000000003a48a9
- (long long)compareYBounds:(id)arg1;	// IMP=0x00000000003a47fc
- (long long)compareY:(id)arg1;	// IMP=0x00000000003a478d
- (long long)compareLinearBounds:(id)arg1;	// IMP=0x00000000003a46af
- (long long)compareXBounds:(id)arg1;	// IMP=0x00000000003a4641
- (long long)compareZDescending:(id)arg1;	// IMP=0x00000000003a45f3
- (long long)compareZ:(id)arg1;	// IMP=0x00000000003a45a9
- (long long)compareInsertionOrder:(id)arg1;	// IMP=0x00000000003a455f
- (long long)compareX:(id)arg1;	// IMP=0x00000000003a454d
- (long long)compareAnchorYDescending:(id)arg1;	// IMP=0x00000000003a44f5
- (long long)compareAnchorX:(id)arg1;	// IMP=0x00000000003a44e3
- (long long)compareCommonAnchorX:(id)arg1;	// IMP=0x00000000003a4484
- (long long)compareAnchorY:(id)arg1;	// IMP=0x00000000003a4425
- (void)sortUsingSelector:(SEL)arg1;	// IMP=0x00000000003a440f
- (long long)insertionOrder;	// IMP=0x00000000003a43fe
- (void)setInsertionOrder:(long long)arg1;	// IMP=0x00000000003a43e3
- (void)resizeWith:(id)arg1;	// IMP=0x00000000003a42d4
- (void)fitBoundsToChildren;	// IMP=0x00000000003a4176
- (float)referenceAdvanceWidth;	// IMP=0x00000000003a4142
- (float)absoluteGapTo:(id)arg1;	// IMP=0x00000000003a409f
- (float)advanceDeltaAfterSpace;	// IMP=0x00000000003a4096
- (float)clusterGapTo:(id)arg1;	// IMP=0x00000000003a401f
- (struct CGPoint)anchor;	// IMP=0x00000000003a4007
- (void)setAnchor:(struct CGPoint)arg1;	// IMP=0x00000000003a4001
- (id)describeBounds;	// IMP=0x00000000003a3fbe
- (struct CGRect)renderedBounds;	// IMP=0x00000000003a3e88
- (struct CGRect)adjustToPointBoundary:(struct CGRect)arg1;	// IMP=0x00000000003a3cea
- (struct CGRect)bounds;	// IMP=0x00000000003a3c9f
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000003a3c76
- (void)setChildren:(id)arg1;	// IMP=0x00000000003a3bd3
- (id)newTakeChildrenAmong:(id)arg1;	// IMP=0x00000000003a3b6b
- (id)newTakeChildren;	// IMP=0x00000000003a3b0c
- (void)removeAll;	// IMP=0x00000000003a3aad
- (void)remove:(id)arg1;	// IMP=0x00000000003a3a64
- (void)addChildrenOf:(id)arg1;	// IMP=0x00000000003a3a23
- (void)add:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x00000000003a39b3
- (void)add:(id)arg1;	// IMP=0x00000000003a3943
- (float)opticalLeading;	// IMP=0x00000000003a393a
- (void)accept:(id)arg1;	// IMP=0x00000000003a391f
- (id)copyAndSplitChildrenAtIndex:(unsigned int)arg1;	// IMP=0x00000000003a3885
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000003a3856
- (id)init;	// IMP=0x00000000003a37f9

@end

