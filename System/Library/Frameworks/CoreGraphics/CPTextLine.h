//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CPCharSequence, NSArray;

__attribute__((visibility("hidden")))
@interface CPTextLine
{
    CPCharSequence *charSequence;	// 128 = 0x80
    CDStruct_2e2afed4 *wordArray;	// 136 = 0x88
    unsigned int wordCount;	// 144 = 0x90
    struct CPInlineContainer *inlineList;	// 152 = 0x98
    int lineNumber;	// 160 = 0xa0
    int columnNumber;	// 164 = 0xa4
    double baseline;	// 168 = 0xa8
    _Bool baseLineIsNull;	// 176 = 0xb0
    struct CGRect normalizedBounds;	// 184 = 0xb8
    _Bool hasBeenSplit;	// 216 = 0xd8
    _Bool hasBeenProcessed;	// 217 = 0xd9
    _Bool maySplit;	// 218 = 0xda
    _Bool hasTabs;	// 219 = 0xdb
    NSArray *columnBreaks;	// 224 = 0xe0
    NSArray *xsegments;	// 232 = 0xe8
    int levels;	// 240 = 0xf0
    float maximumLetterGap;	// 244 = 0xf4
    float maximumWordGap;	// 248 = 0xf8
    int tabsBefore;	// 252 = 0xfc
    _Bool irregular;	// 256 = 0x100
    unsigned int leftSpacerIndex;	// 260 = 0x104
    unsigned int rightSpacerIndex;	// 264 = 0x108
    _Bool isListItem;	// 268 = 0x10c
    unsigned int listSpacerIndex;	// 272 = 0x110
    _Bool lineBreakAfter;	// 276 = 0x114
    struct CPPDFStyle *uniformStyle;	// 280 = 0x118
    unsigned short uniformStyleFlags;	// 288 = 0x120
    double monospaceWidth;	// 296 = 0x128
    unsigned int *spacesBefore;	// 304 = 0x130
    _Bool disposed;	// 312 = 0x138
}

@property(nonatomic) _Bool lineBreakAfter; // @synthesize lineBreakAfter;
@property(nonatomic) unsigned int listSpacerIndex; // @synthesize listSpacerIndex;
@property(nonatomic) _Bool isListItem; // @synthesize isListItem;
@property(nonatomic) unsigned int rightSpacerIndex; // @synthesize rightSpacerIndex;
@property(nonatomic) unsigned int leftSpacerIndex; // @synthesize leftSpacerIndex;
- (struct CGRect)normalizedBounds;	// IMP=0x0000000000468624
- (double)rotationAngle;	// IMP=0x0000000000468607
- (double)medianFontSize;	// IMP=0x0000000000468433
- (_Bool)hasDropCap;	// IMP=0x000000000046836e
- (long long)topIsAbove:(id)arg1;	// IMP=0x0000000000468157
- (id)attributes;	// IMP=0x000000000046814a
- (void)setIrregular:(_Bool)arg1;	// IMP=0x000000000046813a
- (_Bool)irregular;	// IMP=0x000000000046812a
- (void)setMaximumWordGap:(float)arg1;	// IMP=0x0000000000468118
- (float)maximumWordGap;	// IMP=0x0000000000468106
- (void)setMaximumLetterGap:(float)arg1;	// IMP=0x00000000004680f4
- (float)maximumLetterGap;	// IMP=0x00000000004680e2
- (void)recomputeLevels;	// IMP=0x000000000046807a
- (void)setLevels:(int)arg1;	// IMP=0x000000000046806a
- (int)levels;	// IMP=0x000000000046805a
- (void)setSpaces:(unsigned int)arg1 beforeWordAtIndex:(unsigned int)arg2;	// IMP=0x0000000000467fa0
- (unsigned int)spacesBeforeWordAtIndex:(unsigned int)arg1;	// IMP=0x0000000000467f6e
- (double)monospaceWidth;	// IMP=0x0000000000467e18
- (_Bool)isMonospaced;	// IMP=0x0000000000467df4
- (_Bool)styleIsUniform:(struct CPPDFStyle **)arg1 styleFlags:(unsigned short)arg2;	// IMP=0x0000000000467cf0
- (void)recomputeBaseline;	// IMP=0x0000000000467ba0
- (void)translateObjectYBy:(double)arg1;	// IMP=0x0000000000467b54
- (_Bool)isIndivisible;	// IMP=0x0000000000467b4c
- (void)setBaselineToNull;	// IMP=0x0000000000467b3b
- (void)setBaseline:(double)arg1;	// IMP=0x0000000000467b1e
- (double)baseline;	// IMP=0x0000000000467a44
- (_Bool)hyphenated;	// IMP=0x0000000000467a3c
- (struct CGPoint)anchor;	// IMP=0x00000000004679e1
- (_Bool)overlapsHorizontally:(struct CGRect)arg1;	// IMP=0x0000000000467788
- (_Bool)overlapsWith:(id)arg1;	// IMP=0x000000000046772c
- (long long)baseLineDescendingApprox:(id)arg1;	// IMP=0x0000000000467522
- (long long)baseLineDescending:(id)arg1;	// IMP=0x00000000004674c7
- (long long)baseLineAscending:(id)arg1;	// IMP=0x000000000046746c
- (struct CGRect)bounds;	// IMP=0x0000000000467368
- (void)fitBoundsToChildren;	// IMP=0x0000000000467362
- (int)tabsBefore;	// IMP=0x0000000000467352
- (void)setTabsBefore:(int)arg1;	// IMP=0x0000000000467342
- (_Bool)hasTabs;	// IMP=0x0000000000467332
- (void)setHasTabs:(_Bool)arg1;	// IMP=0x0000000000467322
- (void)accept:(id)arg1;	// IMP=0x0000000000467307
- (void)setColumnBreaks:(id)arg1;	// IMP=0x00000000004672c9
- (id)columnBreaks;	// IMP=0x00000000004672b8
- (_Bool)hasBeenProcessed;	// IMP=0x00000000004672a8
- (void)setHasBeenProcessed:(_Bool)arg1;	// IMP=0x0000000000467298
- (_Bool)hasBeenSplit;	// IMP=0x0000000000467288
- (void)setHasBeenSplit:(_Bool)arg1;	// IMP=0x0000000000467278
- (id)properties;	// IMP=0x000000000046726b
- (_Bool)mapToWordPairsWithIndex:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x00000000004671e2
- (_Bool)mapToWordPairs:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x0000000000467166
- (_Bool)mapToWordsWithIndex:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x00000000004670f2
- (_Bool)mapToWords:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x0000000000467082
- (_Bool)removeTextLines:(id)arg1 whereTrue:(CDUnknownFunctionPointerType)arg2 passing:(void *)arg3;	// IMP=0x0000000000466e61
- (id)newTextLineFromWordAt:(unsigned int)arg1 lengthInWords:(unsigned int)arg2;	// IMP=0x0000000000466cc2
- (_Bool)changesFontAt:(id)arg1;	// IMP=0x0000000000466bec
- (_Bool)hasJustifiedAlignment;	// IMP=0x0000000000466bcd
- (int)align;	// IMP=0x0000000000466b70
- (long long)zOrder;	// IMP=0x0000000000466b31
- (void)anchorChunk:(id)arg1 atWordIndex:(unsigned int)arg2;	// IMP=0x00000000004669ee
- (struct CPInlineContainer *)inlineList;	// IMP=0x00000000004669dd
- (unsigned int)inlineCount;	// IMP=0x00000000004669bd
- (CDStruct_2e2afed4 *)lastWord;	// IMP=0x0000000000466990
- (CDStruct_2e2afed4 *)firstWord;	// IMP=0x000000000046696e
- (CDStruct_2e2afed4 *)wordAtIndex:(unsigned int)arg1;	// IMP=0x0000000000466928
- (struct CGRect)boundsOfWordAtIndex:(unsigned int)arg1;	// IMP=0x00000000004668ce
- (unsigned int)wordCount;	// IMP=0x00000000004668be
- (CDStruct_2e2afed4 *)wordArrayOfSize:(unsigned int)arg1;	// IMP=0x000000000046684d
- (CDStruct_2e2afed4 *)wordArray;	// IMP=0x000000000046683c
- (id)charSequence;	// IMP=0x000000000046682b
- (void)setCharSequence:(id)arg1;	// IMP=0x00000000004667ed
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000046670e
- (void)dealloc;	// IMP=0x00000000004666a9
- (void)finalize;	// IMP=0x000000000046666b
- (void)dispose;	// IMP=0x00000000004665e4
- (id)init;	// IMP=0x0000000000466518

@end

