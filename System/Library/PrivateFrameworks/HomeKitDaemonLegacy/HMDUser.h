//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class AVOutputDeviceAuthorizedPeer, HAPPairingIdentity, HMBShareUserID, HMDAccountHandle, HMDAccountIdentifier, HMDAssistantAccessControl, HMDCloudShareMessenger, HMDCloudShareTrustManager, HMDHome, HMDPersonSettingsManager, HMDPhotosPersonManager, HMDSettingsControllerDependency, HMDSiriMultiUserNewLanguageNotificationManager, HMDUserDataController, HMDUserPhotosPersonDataManager, HMDUserSettingsBackingStoreController, HMFMessageDispatcher, HMPhotosPersonManagerSettings, HMUserHomeAccessSettings, HMUserPresenceAuthorization, NAFuture, NSData, NSNumber, NSObject, NSSet, NSString, NSUUID;
@protocol HMDUserDataSource, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDUser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSUUID *_uuid;	// 16 = 0x10
    _Bool _remoteAccessAllowed;	// 24 = 0x18
    HMDAccountHandle *_accountHandle;	// 32 = 0x20
    HMDAccountIdentifier *_accountIdentifier;	// 40 = 0x28
    _Bool _needsiTunesMultiUserRepair;	// 48 = 0x30
    unsigned long long _privilege;	// 56 = 0x38
    HMDHome *_home;	// 64 = 0x40
    NSString *_userID;	// 72 = 0x48
    HMUserPresenceAuthorization *_presenceAuthStatus;	// 80 = 0x50
    unsigned long long _camerasAccessLevel;	// 88 = 0x58
    HAPPairingIdentity *_pairingIdentity;	// 96 = 0x60
    NSString *_displayName;	// 104 = 0x68
    HMDAssistantAccessControl *_assistantAccessControl;	// 112 = 0x70
    unsigned long long _announceAccessLevel;	// 120 = 0x78
    unsigned long long _audioAnalysisUserDropInAccessLevel;	// 128 = 0x80
    long long _userCloudShareWithOwnerMessagingState;	// 136 = 0x88
    HMUserHomeAccessSettings *_homeAccessSettings;	// 144 = 0x90
    HMBShareUserID *_cloudShareID;	// 152 = 0x98
    NAFuture *_cloudShareIDFuture;	// 160 = 0xa0
    HMDUserPhotosPersonDataManager *_photosPersonDataManager;	// 168 = 0xa8
    HMDPersonSettingsManager *_personSettingsManager;	// 176 = 0xb0
    NSString *_accessCode;	// 184 = 0xb8
    NSUUID *_accessCodeChangedByUserUUID;	// 192 = 0xc0
    HMDUserDataController *_userDataController;	// 200 = 0xc8
    HMDSettingsControllerDependency *_sharedSettingsControllerDependency;	// 208 = 0xd0
    HMDSettingsControllerDependency *_privateSettingsControllerDependency;	// 216 = 0xd8
    HMDCloudShareMessenger *_shareMessenger;	// 224 = 0xe0
    HMDUserSettingsBackingStoreController *_privateBackingStoreController;	// 232 = 0xe8
    id <HMDUserDataSource> _dataSource;	// 240 = 0xf0
    HMDSiriMultiUserNewLanguageNotificationManager *_siriMultiUserNewLanguageNotificationManager;	// 248 = 0xf8
    NSObject<OS_dispatch_queue> *_queue;	// 256 = 0x100
    HMFMessageDispatcher *_messageDispatcher;	// 264 = 0x108
    unsigned long long _announceNotificationModeForCurrentDevice;	// 272 = 0x110
    HMDCloudShareTrustManager *_cloudShareTrustManager;	// 280 = 0x118
    HMDUserSettingsBackingStoreController *_sharedBackingStoreController;	// 288 = 0x120
}

+ (id)userDictionaryWithUserID:(id)arg1 privilege:(unsigned long long)arg2 remoteAccessAllowed:(_Bool)arg3 cameraAccessLevel:(unsigned long long)arg4 announceAccessAllowed:(id)arg5 announceAccessLevel:(unsigned long long)arg6 audioAnalysisUserDropInAccessLevel:(unsigned long long)arg7 homeAccessSettings:(id)arg8;	// IMP=0x001000000097d727
+ (id)userWithDictionary:(id)arg1 home:(id)arg2;	// IMP=0x001000000097d1d8
+ (id)userWithDictionary:(id)arg1;	// IMP=0x001000000097d1c4
+ (unsigned long long)privilegeFromDictionary:(id)arg1;	// IMP=0x001000000097d16d
+ (_Bool)supportsSecureCoding;	// IMP=0x001000000097d165
+ (_Bool)hasMessageReceiverChildren;	// IMP=0x001000000097d15d
+ (id)logCategory;	// IMP=0x001000000097d12d
+ (id)sharedZoneNameForUserUUID:(id)arg1;	// IMP=0x001000000097d0d3
+ (id)privateZoneNameForUserUUID:(id)arg1;	// IMP=0x001000000097d079
+ (id)UUIDWithUserID:(id)arg1 forHomeIdentifier:(id)arg2 uuid:(id)arg3 pairingIdentity:(id)arg4;	// IMP=0x001000000097cca0
+ (id)userIDForAccountHandle:(id)arg1;	// IMP=0x001000000097cc4d
+ (id)ownerWithUserID:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 homeManager:(id)arg4;	// IMP=0x001000000097c944
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2;	// IMP=0x001000000097c92f
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2 forceHH1Key:(_Bool)arg3;	// IMP=0x001000000097c754
+ (id)av_authorizedPeerForPairingIdentity:(id)arg1 isOwner:(_Bool)arg2;	// IMP=0x0010000000396b80
- (void).cxx_destruct;	// IMP=0x00000000009750c6
@property(retain) HMDUserSettingsBackingStoreController *sharedBackingStoreController; // @synthesize sharedBackingStoreController=_sharedBackingStoreController;
@property(retain) HMDCloudShareTrustManager *cloudShareTrustManager; // @synthesize cloudShareTrustManager=_cloudShareTrustManager;
@property unsigned long long announceNotificationModeForCurrentDevice; // @synthesize announceNotificationModeForCurrentDevice=_announceNotificationModeForCurrentDevice;
@property(retain) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) HMDSiriMultiUserNewLanguageNotificationManager *siriMultiUserNewLanguageNotificationManager; // @synthesize siriMultiUserNewLanguageNotificationManager=_siriMultiUserNewLanguageNotificationManager;
@property(readonly) id <HMDUserDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property _Bool needsiTunesMultiUserRepair; // @synthesize needsiTunesMultiUserRepair=_needsiTunesMultiUserRepair;
@property(retain) HMDUserSettingsBackingStoreController *privateBackingStoreController; // @synthesize privateBackingStoreController=_privateBackingStoreController;
@property(retain) HMDCloudShareMessenger *shareMessenger; // @synthesize shareMessenger=_shareMessenger;
@property(retain) HMDSettingsControllerDependency *privateSettingsControllerDependency; // @synthesize privateSettingsControllerDependency=_privateSettingsControllerDependency;
@property(retain) HMDSettingsControllerDependency *sharedSettingsControllerDependency; // @synthesize sharedSettingsControllerDependency=_sharedSettingsControllerDependency;
@property(retain) HMDUserDataController *userDataController; // @synthesize userDataController=_userDataController;
@property(retain) NSUUID *accessCodeChangedByUserUUID; // @synthesize accessCodeChangedByUserUUID=_accessCodeChangedByUserUUID;
@property(copy) NSString *accessCode; // @synthesize accessCode=_accessCode;
@property(retain) HMDPersonSettingsManager *personSettingsManager; // @synthesize personSettingsManager=_personSettingsManager;
@property(retain) HMDUserPhotosPersonDataManager *photosPersonDataManager; // @synthesize photosPersonDataManager=_photosPersonDataManager;
@property(readonly) NAFuture *cloudShareIDFuture; // @synthesize cloudShareIDFuture=_cloudShareIDFuture;
@property(retain) HMBShareUserID *cloudShareID; // @synthesize cloudShareID=_cloudShareID;
@property(copy, setter=setUUID:) NSUUID *uuid; // @synthesize uuid=_uuid;
- (id)allAccessoryUUID;	// IMP=0x0000000000974d76
- (void)applyConditionalValueUpdateToModels:(id)arg1;	// IMP=0x0000000000974d70
- (id)pushTokensForDevicesObservingSubjectDevice:(id)arg1 subActivity:(id)arg2;	// IMP=0x0000000000974cb5
- (void)deregisterIDSActivityObserver:(id)arg1;	// IMP=0x0000000000974c4c
- (void)deregisterIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x0000000000974b2c
- (void)updateIDSActivityObserver:(id)arg1;	// IMP=0x0000000000974a78
- (void)registerIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x0000000000974958
- (void)cloudShareTrustManager:(id)arg1 didRemoveUserWithUUID:(id)arg2;	// IMP=0x00000000009747d0
- (void)didRemoveTrustZoneInCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009746f7
- (void)didFinishConfiguringForCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000974630
- (void)cloudShareTrustManager:(id)arg1 didFetchOwnerCloudShareID:(id)arg2;	// IMP=0x0000000000974518
- (_Bool)isOwnerCapableForTrustManager:(id)arg1;	// IMP=0x00000000009744d4
- (id)homeForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009744c2
- (id)ownerForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009744b9
- (id)zoneNameForCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000974438
- (_Bool)cloudShareTrustManager:(id)arg1 shouldShareTrustWithUser:(id)arg2;	// IMP=0x00000000009742fa
- (void)configureCloudShareTrustManager;	// IMP=0x0000000000974024
- (id)trustTargetUUID;	// IMP=0x0000000000973f39
- (void)updateCloudShareID:(id)arg1;	// IMP=0x0000000000973c34
- (void)removeCloudShareID;	// IMP=0x0000000000973af5
- (void)userDataControllerDidUpdateSupportsAutomaticHH2Migration:(id)arg1;	// IMP=0x0000000000973adc
- (void)updateSupportsHH2MigrationByOwnerManual:(_Bool)arg1 supportsHH2MigrationByOwnerAuto:(_Bool)arg2;	// IMP=0x0000000000973a44
- (_Bool)userDataController:(id)arg1 isHAPAccessory:(id)arg2;	// IMP=0x0000000000973842
- (_Bool)userDataController:(id)arg1 isAppleMediaAccessory:(id)arg2;	// IMP=0x0000000000973640
- (id)privateZoneControllerForUserDataController:(id)arg1;	// IMP=0x000000000097362e
- (id)sharedZoneControllerForUserDataController:(id)arg1;	// IMP=0x000000000097361c
- (void)postUserSettingsUpdatedNotificationWithReason:(id)arg1;	// IMP=0x0000000000973595
- (void)userDataControllerDidUpdateMediaContentProfile:(id)arg1;	// IMP=0x000000000097357c
- (void)userDataControllerDidUpdateAssistantAccessControl:(id)arg1;	// IMP=0x0000000000973563
- (_Bool)userDataController:(id)arg1 isMediaContentProfileCapableAccessoryID:(id)arg2;	// IMP=0x000000000097327b
- (_Bool)userDataController:(id)arg1 isPersonalRequestCapableAccessoryID:(id)arg2;	// IMP=0x0000000000972f93
- (void)backingStoreController:(id)arg1 didUpdatePhotosPersonManagerSettingsModel:(id)arg2 previousPhotosPersonManagerSettingsModel:(id)arg3;	// IMP=0x0000000000972f19
- (id)ownerForUserSettingsBackingStoreController:(id)arg1;	// IMP=0x0000000000972f10
- (id)backingStoreController:(id)arg1 createParticipantManagerForCloudZone:(id)arg2;	// IMP=0x0000000000972e14
- (void)didStopBackingStoreController:(id)arg1;	// IMP=0x0000000000972c42
- (void)didStartLocalZoneForBackingStoreController:(id)arg1;	// IMP=0x0000000000972ad5
- (void)didStartBackingStoreController:(id)arg1;	// IMP=0x0000000000972a6c
@property(readonly) NSUUID *userUUID;
@property(readonly) _Bool isRunningOnHomeOwnersDevice;
- (id)settingsControllerFollowerKeyPaths:(id)arg1;	// IMP=0x000000000097294c
- (id)settingsController:(id)arg1 willUpdateSettingAtKeyPath:(id)arg2 withValue:(id)arg3;	// IMP=0x000000000097252f
- (void)settingsController:(id)arg1 didUpdateWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009724e0
- (id)dictionaryEncoding;	// IMP=0x00000000009723a0
- (void)removeCloudData;	// IMP=0x0000000000972298
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;	// IMP=0x0000000000971aed
- (id)modelObjectWithChangeType:(unsigned long long)arg1;	// IMP=0x0000000000971ad6
- (id)backingStoreObjects:(long long)arg1;	// IMP=0x0000000000971869
- (id)announceUserSettingsModelWithChangeType:(unsigned long long)arg1;	// IMP=0x0000000000971797
- (void)migrateCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000971327
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;	// IMP=0x0000000000970ed5
- (void)_transactionUserUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x000000000096fc26
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x000000000096f4e4
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000096e24a
@property(readonly, copy, nonatomic) NSString *encodingRemoteDisplayName;
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000096d69f
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
- (id)messageDestination;	// IMP=0x000000000096d621
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;	// IMP=0x000000000096d5bf
@property(readonly, copy) NSData *publicKey;
@property(readonly, copy) NSString *pairingUsername;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly) NSNumber *uniqueIDForAccessories;
@property(copy) HMUserHomeAccessSettings *homeAccessSettings; // @synthesize homeAccessSettings=_homeAccessSettings;
@property(readonly) NSNumber *notificationContextNFCIdentifier;
@property(readonly) NSNumber *notificationContextHAPIdentifier;
- (void)configurePersonSettingsManager;	// IMP=0x000000000096cf96
- (void)configurePhotosPersonDataManager;	// IMP=0x000000000096ce3d
@property(readonly) HMDPhotosPersonManager *photosPersonManager;
@property(readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
- (void)saveSyncDataToLocalDisk:(id)arg1;	// IMP=0x000000000096c8c5
- (id)syncDataFileNameWithHomeUUID:(id)arg1;	// IMP=0x000000000096c81a
- (id)announceNotificationFileName;	// IMP=0x000000000096c7bb
- (id)announceNotificationFileNameForUserUUID:(id)arg1;	// IMP=0x000000000096c73f
- (void)savePersonClassificationSettingsForCurrentUserToLocalDisk;	// IMP=0x000000000096c593
- (void)saveAnnounceNotificationModeForCurrentUserToLocalDisk;	// IMP=0x000000000096c16f
- (void)_updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x000000000096bec6
- (void)updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x000000000096be4a
- (void)_handleAnnounceSettingsUpdate:(id)arg1;	// IMP=0x000000000096bae0
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x000000000096b9ee
- (void)removeAccessoriesFromAssistantAccessControlList:(id)arg1;	// IMP=0x000000000096b976
- (void)_handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x000000000096b1b7
- (void)handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x000000000096b123
- (void)_handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x000000000096a12a
- (void)handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x000000000096a096
- (_Bool)isCurrentUserAndOwner;	// IMP=0x0000000000969f30
@property(retain) HMDAssistantAccessControl *assistantAccessControl; // @synthesize assistantAccessControl=_assistantAccessControl;
@property(readonly) NSUUID *assistantAccessControlModelUUID;
@property(readonly, getter=isValid) _Bool valid;
@property(readonly, getter=isRemoteGateway) _Bool remoteGateway;
@property unsigned long long audioAnalysisUserDropInAccessLevel; // @synthesize audioAnalysisUserDropInAccessLevel=_audioAnalysisUserDropInAccessLevel;
@property unsigned long long announceAccessLevel; // @synthesize announceAccessLevel=_announceAccessLevel;
- (unsigned long long)defaultAnnounceUserAccessLevel;	// IMP=0x0000000000969cdd
@property(readonly, getter=isAnnounceAccessAllowed) _Bool announceAccessAllowed;
@property unsigned long long camerasAccessLevel; // @synthesize camerasAccessLevel=_camerasAccessLevel;
- (_Bool)_setRemoteAccessAllowed:(_Bool)arg1;	// IMP=0x0000000000969bac
@property(getter=isRemoteAccessAllowed) _Bool remoteAccessAllowed; // @synthesize remoteAccessAllowed=_remoteAccessAllowed;
- (_Bool)refreshDisplayName;	// IMP=0x0000000000969a99
- (void)setDisplayName:(id)arg1;	// IMP=0x0000000000969a0e
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) HMUserPresenceAuthorization *presenceAuthStatus; // @synthesize presenceAuthStatus=_presenceAuthStatus;
- (void)__handleRemovedAccount:(id)arg1;	// IMP=0x00000000009696ff
- (void)__handleAddedAccount:(id)arg1;	// IMP=0x0000000000969502
- (_Bool)requiresMakoSupport;	// IMP=0x00000000009694b9
- (id)account;	// IMP=0x0000000000969425
- (void)_handleNeedsiTunesMultiUserRepair:(id)arg1;	// IMP=0x000000000096900a
- (void)_handleShareClientRepairRequest:(id)arg1;	// IMP=0x0000000000968507
- (void)_sendAccountMessage:(id)arg1 payload:(id)arg2 deviceCapabilities:(id)arg3 multicast:(_Bool)arg4 preferPrimary:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000009681e9
- (void)_sendSecureShareClientPayloadToMostEligibleDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000967de5
- (void)_handleMultiUserSharePayloadRequest:(id)arg1;	// IMP=0x0000000000967192
- (void)_handleShareLookupInfoRequest:(id)arg1;	// IMP=0x0000000000966c18
- (void)_handleLegacyPairingIdentityRequest:(id)arg1;	// IMP=0x0000000000966693
- (void)_handlePairingIdentityRequest:(id)arg1;	// IMP=0x0000000000965e47
- (_Bool)matchingPairingIdentityIdentifier:(id)arg1;	// IMP=0x0000000000965db2
- (void)deregisterIdentity;	// IMP=0x0000000000965d37
- (void)registerIdentity;	// IMP=0x0000000000965c8a
@property(copy) HAPPairingIdentity *pairingIdentity; // @synthesize pairingIdentity=_pairingIdentity;
- (void)pbsUserProfileWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000965a01
- (id)spiClientIdentifier;	// IMP=0x00000000009659ec
@property(copy) HMDAccountIdentifier *accountIdentifier;
- (void)setAccountHandle:(id)arg1;	// IMP=0x00000000009657b4
- (id)accountHandle;	// IMP=0x000000000096576e
@property(readonly) _Bool isCurrentUser;
- (_Bool)updateAdministrator:(_Bool)arg1;	// IMP=0x00000000009656bd
@property unsigned long long privilege; // @synthesize privilege=_privilege;
- (_Bool)isPending;	// IMP=0x000000000096553f
@property(readonly, getter=isOwner) _Bool owner;
@property(readonly, getter=isAdministrator) _Bool administrator;
- (unsigned long long)_compatiblePrivilege;	// IMP=0x000000000096546f
@property __weak HMDHome *home; // @synthesize home=_home;
- (unsigned long long)allowedRemoteEventAccessUserTypes;	// IMP=0x00000000009653a9
- (void)deregisterForMessages;	// IMP=0x00000000009652af
- (void)registerForMessages;	// IMP=0x0000000000964e73
- (void)unconfigure;	// IMP=0x0000000000964de6
- (void)_recoverTrustManagerDueToUUIDChange;	// IMP=0x0000000000964cba
- (void)updateSharedBackingStoreControllerParticipants;	// IMP=0x0000000000964c68
- (void)_recoverUserSettingsDueToUUIDChange;	// IMP=0x00000000009648f8
- (void)recoverUserCloudDataDueToUUIDChangeFromOldUUID:(id)arg1;	// IMP=0x0000000000964864
- (void)_handleCloudShareWithOwnerMessageError;	// IMP=0x0000000000964824
@property long long userCloudShareWithOwnerMessagingState; // @synthesize userCloudShareWithOwnerMessagingState=_userCloudShareWithOwnerMessagingState;
- (long long)sharedUserSettingsLogEventBackingStoreControllerRunState;	// IMP=0x0000000000964766
- (void)initializeUserSettingsWithHome:(id)arg1;	// IMP=0x0000000000963ff5
- (id)sharedZoneName;	// IMP=0x0000000000963f8b
- (id)privateZoneName;	// IMP=0x0000000000963f21
- (void)handleUserDataControllerInitialized:(id)arg1;	// IMP=0x0000000000963ecf
- (void)configureWithHome:(id)arg1;	// IMP=0x0000000000963c78
- (_Bool)hasDeviceWithHomeKitVersionGreaterThanVersion:(id)arg1;	// IMP=0x0000000000963a4d
- (id)dumpState;	// IMP=0x00000000009633aa
- (id)attributeDescriptions;	// IMP=0x0000000000962d26
- (id)shortDescription;	// IMP=0x0000000000962c64
- (_Bool)isAccountEqualWithUser:(id)arg1;	// IMP=0x0000000000962aef
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000962a13
@property(readonly) unsigned long long hash;
- (void)dealloc;	// IMP=0x0000000000962944
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;	// IMP=0x00000000009626c0
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x0000000000962615
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;	// IMP=0x0000000000962524
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x0000000000962479
- (id)initWithModelObject:(id)arg1;	// IMP=0x0000000000962060
- (id)privateSettingValuesByKeyPath;	// IMP=0x0000000000962010
- (id)sharedSettingValuesByKeyPath;	// IMP=0x0000000000961fc0
- (void)_setUuidUnsafely:(id)arg1;	// IMP=0x0000000000961fac
@property(readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property(readonly) _Bool hasCameraClipsAccess;
@property(readonly, copy) NSData *nfcIssuerKeyIdentifier;

// Remaining properties
@property(readonly, getter=isCurrentUser) _Bool currentUser;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSSet *messageReceiverChildren;
@property(readonly) Class superclass;

@end

