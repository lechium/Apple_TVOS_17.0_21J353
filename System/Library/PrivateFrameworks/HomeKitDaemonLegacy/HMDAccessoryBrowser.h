//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMDAccessoryServerBrowserDemo, HMDAuthServer, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMMTRAccessoryServerBrowser, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, HMDAccessoryBrowserUnpairedAccessoryManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface HMDAccessoryBrowser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSMutableSet *_unpairedHAPAccessories;	// 16 = 0x10
    NSMutableSet *_unassociatedMediaAccessories;	// 24 = 0x18
    NSMutableSet *_deviceSetupMediaAccessories;	// 32 = 0x20
    NSMutableSet *_unassociatedWACAccessories;	// 40 = 0x28
    NSMutableSet *_browsingConnections;	// 48 = 0x30
    NSHashTable *_activeAssertions;	// 56 = 0x38
    NSMutableSet *_discoveredAccessoryServerIdentifiers;	// 64 = 0x40
    _Bool _btlePowerState;	// 72 = 0x48
    _Bool _internalDiscoveryRequest;	// 73 = 0x49
    _Bool _active;	// 74 = 0x4a
    _Bool _hasActiveWACPairing;	// 75 = 0x4b
    HMMTRAccessoryServerBrowser *_chipAccessoryServerBrowser;	// 80 = 0x50
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;	// 88 = 0x58
    id <HMDAccessoryBrowserManagerDelegate> _managerDelegate;	// 96 = 0x60
    id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> _unpairedAccessoryManagerDelegate;	// 104 = 0x68
    unsigned long long _unitTestBTLEReachabilityInterval;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_workQueue;	// 120 = 0x78
    NSUUID *_uuid;	// 128 = 0x80
    HMFMessageDispatcher *_messageDispatcher;	// 136 = 0x88
    unsigned long long _generationCounter;	// 144 = 0x90
    HMDHomeManager *_homeManager;	// 152 = 0x98
    NSMutableArray *_accessoryServerBrowsers;	// 160 = 0xa0
    NSHashTable *_discoveringAccessoryServerBrowsers;	// 168 = 0xa8
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;	// 176 = 0xb0
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;	// 184 = 0xb8
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;	// 192 = 0xc0
    HMDHAP2Storage *_hap2Storage;	// 200 = 0xc8
    HMDMediaBrowser *_mediaBrowser;	// 208 = 0xd0
    HMDWACBrowser *_wacBrowser;	// 216 = 0xd8
    HMDAuthServer *_authServer;	// 224 = 0xe0
    HMDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;	// 232 = 0xe8
    HMFTimer *_stopReprovisioningTimer;	// 240 = 0xf0
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;	// 248 = 0xf8
    NSString *_identifierOfAccessoryBeingReprovisioned;	// 256 = 0x100
    NSData *_wiFiPSKForAccessoryReprovisioning;	// 264 = 0x108
    NSString *_countrycodeForAccessoryReprovisioning;	// 272 = 0x110
    NSMutableArray *_pairedAccessories;	// 280 = 0x118
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;	// 288 = 0x120
    NSMutableArray *_currentlyPairingAccessories;	// 296 = 0x128
    NSMutableArray *_currentlyPairingProgressHandlers;	// 304 = 0x130
    NSHashTable *_tombstonedHAPAccessoryServers;	// 312 = 0x138
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;	// 320 = 0x140
    NSArray *_browseableLinkTypes;	// 328 = 0x148
}

+ (id)logCategory;	// IMP=0x00100000008b336d
- (void).cxx_destruct;	// IMP=0x00000000008ab4b1
@property(nonatomic) _Bool hasActiveWACPairing; // @synthesize hasActiveWACPairing=_hasActiveWACPairing;
@property(retain, nonatomic) NSArray *browseableLinkTypes; // @synthesize browseableLinkTypes=_browseableLinkTypes;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property(retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property(retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property(readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property(readonly, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property(retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property(retain, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property(retain, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property(retain, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property(retain, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property(retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers; // @synthesize discoveringAccessoryServerBrowsers=_discoveringAccessoryServerBrowsers;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) unsigned long long unitTestBTLEReachabilityInterval; // @synthesize unitTestBTLEReachabilityInterval=_unitTestBTLEReachabilityInterval;
@property(nonatomic) __weak id <HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property(nonatomic) _Bool btlePowerState; // @synthesize btlePowerState=_btlePowerState;
@property(readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser; // @synthesize chipAccessoryServerBrowser=_chipAccessoryServerBrowser;
- (id)dumpRegisteredPairedAccessories;	// IMP=0x00000000008aadf5
- (id)dumpUnassociatedAccessories;	// IMP=0x00000000008aab14
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;	// IMP=0x00000000008aa8e6
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;	// IMP=0x00000000008aa7d9
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;	// IMP=0x00000000008aa6fb
- (void)didFinishActivation:(id)arg1 context:(id)arg2;	// IMP=0x00000000008aa61d
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;	// IMP=0x00000000008aa565
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;	// IMP=0x00000000008aa4bc
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;	// IMP=0x00000000008aa404
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;	// IMP=0x00000000008aa34c
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 sessionInfo:(id)arg3 linkLayerType:(long long)arg4 withError:(id)arg5;	// IMP=0x00000000008aa11a
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 linkLayerType:(long long)arg3 withError:(id)arg4;	// IMP=0x00000000008aa0f2
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;	// IMP=0x00000000008a9e01
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;	// IMP=0x00000000008a9ae0
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;	// IMP=0x00000000008a9a05
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;	// IMP=0x00000000008a93ec
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;	// IMP=0x00000000008a90e6
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;	// IMP=0x00000000008a8ca6
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x00000000008a8ac0
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x00000000008a8a19
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x00000000008a8853
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;	// IMP=0x00000000008a8764
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x00000000008a8482
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x00000000008a82a3
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;	// IMP=0x00000000008a81ef
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;	// IMP=0x00000000008a815b
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x00000000008a80ae
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x00000000008a7e78
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;	// IMP=0x00000000008a7d9a
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x00000000008a754d
- (void)updateProgressForMappedErrors:(id)arg1 accessoryServer:(id)arg2 progressHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008a748f
- (void)updateAlreadyPairingProgressForAccessoryServerIdentifier:(id)arg1 progressHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008a71c5
- (void)updatePairingWithProgress:(long long)arg1 accessoryServer:(id)arg2;	// IMP=0x00000000008a710d
- (void)_updateHasActiveWACPairing:(long long)arg1;	// IMP=0x00000000008a705d
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;	// IMP=0x00000000008a6ce8
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x00000000008a6ae3
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x00000000008a6133
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x00000000008a5f6d
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;	// IMP=0x00000000008a5de7
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;	// IMP=0x00000000008a5958
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;	// IMP=0x00000000008a49ef
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008a47df
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;	// IMP=0x00000000008a438e
- (void)_continueAfterPPIDValidation:(_Bool)arg1 server:(id)arg2;	// IMP=0x00000000008a4379
- (id)_getHAPMetadataFromHMMetadata:(id)arg1;	// IMP=0x00000000008a4211
- (void)accessoryServerBrowser:(id)arg1 getThreadNetworkCredentialsForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008a3dfe
- (void)accessoryServerBrowser:(id)arg1 didFinishPairingForAccessoryServer:(id)arg2;	// IMP=0x00000000008a3d41
- (void)accessoryServerBrowser:(id)arg1 getCommissioningCertificatesForNodeID:(id)arg2 fabricID:(id)arg3 publicKey:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000008a3942
- (void)removeAccessoryCacheForIdentifier:(id)arg1;	// IMP=0x00000000008a392b
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000008a3911
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x00000000008a38f7
- (_Bool)isServerLinkTypeBrowseable:(long long)arg1;	// IMP=0x00000000008a3637
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;	// IMP=0x00000000008a361b
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008a35a8
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;	// IMP=0x00000000008a3582
- (void)_notifyDelegateOfReachabilityChangeChange:(_Bool)arg1 forBTLEAccessories:(id)arg2;	// IMP=0x00000000008a33c2
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(_Bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;	// IMP=0x00000000008a33ab
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;	// IMP=0x00000000008a2ec3
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;	// IMP=0x00000000008a2b62
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;	// IMP=0x00000000008a28b3
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;	// IMP=0x00000000008a2790
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;	// IMP=0x00000000008a21d9
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;	// IMP=0x00000000008a1d4e
- (void)_startPairingInterruptionTimer:(id)arg1;	// IMP=0x00000000008a19c7
- (void)_stopReconfirmTimer:(id)arg1;	// IMP=0x00000000008a17be
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;	// IMP=0x00000000008a1615
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;	// IMP=0x00000000008a144d
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x00000000008a1394
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;	// IMP=0x00000000008a11cc
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;	// IMP=0x00000000008a11b4
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;	// IMP=0x00000000008a102c
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;	// IMP=0x00000000008a0d44
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(_Bool)arg3 stateNumber:(id)arg4;	// IMP=0x00000000008a0972
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;	// IMP=0x00000000008a05e4
- (void)_removePairingInformation:(id)arg1 error:(id)arg2;	// IMP=0x00000000008a03d7
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(_Bool)arg5;	// IMP=0x00000000008a019e
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(_Bool)arg2 stateNumber:(id)arg3;	// IMP=0x000000000089feb1
- (void)_resurrectAccessoryServer:(id)arg1;	// IMP=0x000000000089fceb
- (void)_discoverAccessories:(id)arg1;	// IMP=0x000000000089f91a
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;	// IMP=0x000000000089f7a5
- (void)_tombstoneAccessoryServer:(id)arg1 forceNotify:(_Bool)arg2;	// IMP=0x000000000089f5bd
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;	// IMP=0x000000000089f3f2
- (_Bool)_shouldAccessoryServerBeTombstoned:(id)arg1;	// IMP=0x000000000089f312
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;	// IMP=0x000000000089f13f
- (_Bool)_isAccessoryServerTombstoned:(id)arg1;	// IMP=0x000000000089f0d1
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)messageDestination;	// IMP=0x000000000089f044
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000089ee53
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;	// IMP=0x000000000089ebb2
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;	// IMP=0x000000000089e619
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000089d410
- (_Bool)_isHomeHubMatterSharedAdminPairingCapableWithConfiguration:(id)arg1;	// IMP=0x000000000089d18c
- (_Bool)_isOwnerPairingAccessoryWithConfiguration:(id)arg1;	// IMP=0x000000000089cf5b
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000089aa8e
- (void)_cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x000000000089a563
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x000000000089a485
- (id)currentControllerPairingIdentity;	// IMP=0x000000000089a47d
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;	// IMP=0x000000000089a122
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x0000000000899a42
- (void)_handleSetupCodeAvailable:(id)arg1;	// IMP=0x00000000008996b5
- (void)_notifyManagerOfNewAccessory;	// IMP=0x00000000008995aa
- (id)unpairedAccessoryForServer:(id)arg1;	// IMP=0x0000000000899507
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x0000000000899334
- (void)_setBTLEPowerChangeCompletionHandler;	// IMP=0x0000000000899253
- (void)handleXPCConnectionInvalidated:(id)arg1;	// IMP=0x000000000089919b
- (void)_handleRequestSearchForNewAccessories:(id)arg1;	// IMP=0x0000000000898a94
- (void)_handleRequestFetchNewAccessories:(id)arg1;	// IMP=0x00000000008984e6
- (void)_handleCurrentWiFiNetworkChangedNotification:(id)arg1;	// IMP=0x0000000000898461
- (void)__handleProcessStateChange:(id)arg1;	// IMP=0x0000000000898314
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1 linkType:(id)arg2;	// IMP=0x00000000008978f4
- (void)_registerForNotifications;	// IMP=0x00000000008977fc
- (void)_registerForMessages;	// IMP=0x0000000000897598
@property(nonatomic) __weak id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> unpairedAccessoryManagerDelegate; // @synthesize unpairedAccessoryManagerDelegate=_unpairedAccessoryManagerDelegate;
- (void)resurrectAccessoryServer:(id)arg1;	// IMP=0x00000000008973e8
- (void)tombstoneAccessoryServer:(id)arg1;	// IMP=0x0000000000897330
- (void)discoverAccessories:(id)arg1;	// IMP=0x0000000000897278
- (void)restartBrowsers;	// IMP=0x0000000000897207
- (void)_restartBrowsers;	// IMP=0x0000000000896da0
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x00000000008969b3
- (void)startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000896942
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x000000000089682a
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;	// IMP=0x00000000008967ac
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000896361
- (void)_stopDiscoveringMediaAccessories;	// IMP=0x00000000008961a9
- (void)_startDiscoveringMediaAccessories;	// IMP=0x000000000089610f
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000895ff7
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;	// IMP=0x0000000000895cc7
- (void)_startDiscoveringPairedAccessories:(id)arg1;	// IMP=0x0000000000895940
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000089572a
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008952f5
- (void)timerDidFire:(id)arg1;	// IMP=0x0000000000894b7d
- (void)_stopReprovisioningTimerHandler;	// IMP=0x00000000008948bd
- (void)_startOrStopAccessoryDiscovery;	// IMP=0x00000000008948b7
- (void)evaluateAccessoryDiscoveryState;	// IMP=0x000000000089483a
- (void)_stopBtleAccessoryReachabilityProbeTimer;	// IMP=0x00000000008946dc
- (void)_btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x00000000008941ea
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x000000000089410c
- (void)handleSetupCodeAvailable:(id)arg1;	// IMP=0x0000000000894054
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(_Bool)arg2;	// IMP=0x0000000000893f9d
- (void)removePairingInformationForAccessoryServer:(id)arg1;	// IMP=0x0000000000893ee5
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;	// IMP=0x0000000000893e86
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000893d3f
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000893c34
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;	// IMP=0x0000000000893b56
- (void)_removeDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x0000000000893adb
- (void)_addDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x0000000000893a60
- (id)discoveredAccessoryServers;	// IMP=0x0000000000893a00
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;	// IMP=0x0000000000893922
- (void)deregisterPairedAccessory:(id)arg1;	// IMP=0x00000000008936c2
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;	// IMP=0x000000000089326b
- (void)_addUnpairedAccessoryForServer:(id)arg1;	// IMP=0x00000000008923d0
- (void)_handleWACAccessoryFound;	// IMP=0x00000000008921b4
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000891f51
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000891ed7
- (void)removeUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000891db7
- (void)addUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000891c97
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000891aea
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;	// IMP=0x00000000008919dd
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000089180e
@property(retain, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
- (void)updateUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008916cd
- (void)removeUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008915ad
- (void)addUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008914ca
- (void)removeUnassociatedMediaAccessory:(id)arg1;	// IMP=0x0000000000891371
- (void)_associateMediaAccessoryForServer:(id)arg1;	// IMP=0x000000000089111d
- (void)_associate:(_Bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;	// IMP=0x0000000000890c87
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x00000000008908ae
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008906b3
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;	// IMP=0x0000000000890447
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008902a2
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;	// IMP=0x0000000000890125
- (id)unpairedAccessoryWithUUID:(id)arg1;	// IMP=0x00000000008900ab
@property(readonly, nonatomic) NSArray *unpairedHAPAccessories;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 forceScan:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000088ff5c
- (_Bool)isBrowsingAllowed;	// IMP=0x000000000088ff54
- (id)accessoryBrowserHapProtocol;	// IMP=0x000000000088ff4b
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;	// IMP=0x000000000088fe93
- (void)homeLocationChangeNotification:(id)arg1;	// IMP=0x000000000088fcf4
- (void)handleConnectionDeactivation:(id)arg1;	// IMP=0x000000000088fc3c
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000000088f737
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000000088f5f0
- (void)activate:(_Bool)arg1;	// IMP=0x000000000088f576
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000088f48c
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;	// IMP=0x000000000088f3d4
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x000000000088f35a
- (void)stopDiscoveringMediaAccessories;	// IMP=0x000000000088f2e9
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000088f26d
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000088f1f1
- (void)stopDiscoveringAccessories;	// IMP=0x000000000088f180
- (void)startDiscoveringMediaAccessories;	// IMP=0x000000000088f10f
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000088f093
- (void)startDiscoveringAccessories;	// IMP=0x000000000088f022
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000088efa6
- (void)startDiscoveringPairedAccessories;	// IMP=0x000000000088ef35
- (_Bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000088ed88
- (void)resetConfiguration;	// IMP=0x000000000088ed17
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;	// IMP=0x000000000088e7ad
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;	// IMP=0x000000000088dad9
- (void)_notifyDelegateOfReachabilityChange:(_Bool)arg1 forAccessoryWithIdentifier:(id)arg2;	// IMP=0x000000000088d931
- (void)__inactivate;	// IMP=0x000000000088d8c0
- (void)__activate;	// IMP=0x000000000088d84f
- (void)endActiveAssertion:(id)arg1;	// IMP=0x000000000088d62c
- (id)beginActiveAssertionWithReason:(id)arg1;	// IMP=0x000000000088d4bf
- (unsigned long long)numPairedIPAccessories;	// IMP=0x000000000088d476
- (_Bool)areThereAnyAssociatedAirPlayAccessories;	// IMP=0x000000000088d42e
- (id)identifiersOfAssociatedMediaAccessories;	// IMP=0x000000000088d417
- (_Bool)areThereAnyPairedBTLEAccessories;	// IMP=0x000000000088d3cf
- (id)identifiersOfPairedBTLEAccessories;	// IMP=0x000000000088d3b8
- (_Bool)areThereAnyPairedAccessories;	// IMP=0x000000000088d370
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;	// IMP=0x000000000088d146
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;	// IMP=0x000000000088d026
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;	// IMP=0x000000000088ce24
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;	// IMP=0x000000000088cc51
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;	// IMP=0x000000000088ca08
- (void)resetPairedAccessories;	// IMP=0x000000000088c9b3
- (void)removePairedAccessory:(id)arg1;	// IMP=0x000000000088c938
- (void)addPairedAccessory:(id)arg1;	// IMP=0x000000000088c6f5
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;	// IMP=0x000000000088c4e6
- (void)__addBrowsingConnection:(id)arg1;	// IMP=0x000000000088bdb2
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;	// IMP=0x000000000088b8f1
- (_Bool)__isMediaAccessoryBrowsingRequested;	// IMP=0x000000000088b701
- (_Bool)__isAccessoryBrowsingRequested;	// IMP=0x000000000088b6b9
- (void)__resetBrowsingConnections;	// IMP=0x000000000088b664
- (id)browsingConnections;	// IMP=0x000000000088b604
@property _Bool internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
- (id)dumpBrowsingConnections;	// IMP=0x000000000088b311
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;	// IMP=0x000000000088ae51
- (void)_handleRemovedAccessory:(id)arg1;	// IMP=0x000000000088ad1b
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x000000000088ac63
- (void)_handleAddedAccessory:(id)arg1;	// IMP=0x000000000088ab20
- (void)handleAddedAccessory:(id)arg1;	// IMP=0x000000000088aa68
@property(readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property(readonly, nonatomic) NSArray *unassociatedMediaAccessories;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;	// IMP=0x000000000088a7c5
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;	// IMP=0x000000000088a4a3
@property(readonly, copy) NSArray *unassociatedAccessories;
- (void)removeUnassociatedAccessory:(id)arg1;	// IMP=0x000000000088a0a2
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;	// IMP=0x0000000000889e17
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x0000000000889c66
- (void)_handleTestModeConfigRequest:(id)arg1;	// IMP=0x00000000008896bd
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(_Bool)arg2;	// IMP=0x0000000000889502
- (void)validateLinkTypes:(id)arg1;	// IMP=0x000000000088937b
- (void)dealloc;	// IMP=0x00000000008892d3
- (void)updateBroadcastKeyForIdentifier:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;	// IMP=0x00000000008891b9
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;	// IMP=0x000000000088912e
- (void)retrieveCurrentStateForIdentifier:(id)arg1 stateNumber:(id *)arg2 isReachable:(_Bool *)arg3 linkQuality:(unsigned long long *)arg4 lastSeen:(id *)arg5;	// IMP=0x000000000088909f
- (void)setQOS:(long long)arg1;	// IMP=0x0000000000889023
- (void)configureAccessory:(id)arg1 trackState:(_Bool)arg2 connectionPriority:(_Bool)arg3;	// IMP=0x0000000000888f62
- (void)configureWithHomeManager:(id)arg1 mediaBrowserFactory:(CDUnknownBlockType)arg2;	// IMP=0x0000000000888e84
- (void)configureWithHomeManager:(id)arg1;	// IMP=0x0000000000888e6b
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;	// IMP=0x0000000000888757
- (id)initWithMessageDispatcher:(id)arg1;	// IMP=0x00000000008886f3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

