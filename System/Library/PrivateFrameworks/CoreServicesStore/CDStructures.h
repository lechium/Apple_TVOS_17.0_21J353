//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSObject;

#pragma mark Named Structures

struct CSStoreAccessContext {
    struct variant<CSStore2::CSStoreNullAccessContext, CSStore2::CSStoreQueueAccessContext, CSStore2::CSStoreDebugQueueAccessContext, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> _impl;
};

struct CSStoreDebugQueueAccessContext {
    NSObject *_q;
    CDUnknownFunctionPointerType _assertQueue;
    CDUnknownFunctionPointerType _assertQueueBarrier;
};

struct CSStoreNullAccessContext;

struct CSStoreQueueAccessContext {
    NSObject *_q;
};

struct CSStoreSharedReadingAccessContext {
    struct os_unfair_lock_s _lock;
    struct unordered_set<_opaque_pthread_t *, std::hash<_opaque_pthread_t *>, std::equal_to<_opaque_pthread_t *>, std::allocator<_opaque_pthread_t *>> _threads;
};

struct CSStoreUnfairLockAccessContext {
    struct os_unfair_lock_s *_lock;
    _Bool _writeOK;
};

struct Data {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct Table _field8;
};

struct Pedigree {
    unsigned long long family;
    struct optional<unsigned int> generationAtCopyTime;
};

struct Store {
    id dataContainer;
    struct array<unsigned int, 64UL> tableOffsets;
    struct Table *arrayTable;
    struct Table *stringTable;
    struct Table *dictionaryTable;
    struct atomic<long long> enumerationState;
    struct atomic<long long> getNSDataCallCount;
    struct Pedigree pedigree;
    struct {
        unsigned int readonly:1;
    } flags;
};

struct Table {
    struct Unit _field1;
    char _field2[48];
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct Unit {
    unsigned int :30;
    unsigned int :2;
    unsigned int _field1;
    char _field2[0];
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct array<unsigned int, 64UL> {
    unsigned int __elems_[64];
};

struct atomic<long long> {
    struct __cxx_atomic_impl<long long, std::__cxx_atomic_base_impl<long long>> {
        _Atomic long long __a_value;
    } __a_;
};

struct optional<unsigned int> {
    union {
        char __null_state_;
        unsigned int __val_;
    } ;
    _Bool __engaged_;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_set<_opaque_pthread_t *, std::hash<_opaque_pthread_t *>, std::equal_to<_opaque_pthread_t *>, std::allocator<_opaque_pthread_t *>> {
    struct __hash_table<_opaque_pthread_t *, std::hash<_opaque_pthread_t *>, std::equal_to<_opaque_pthread_t *>, std::allocator<_opaque_pthread_t *>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*>, std::allocator<std::__hash_node<_opaque_pthread_t *, void *>>> {
            struct __hash_node_base<std::__hash_node<_opaque_pthread_t *, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::hash<_opaque_pthread_t *>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::equal_to<_opaque_pthread_t *>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct variant<CSStore2::CSStoreNullAccessContext, CSStore2::CSStoreQueueAccessContext, CSStore2::CSStoreDebugQueueAccessContext, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> {
    struct __impl<CSStore2::CSStoreNullAccessContext, CSStore2::CSStoreQueueAccessContext, CSStore2::CSStoreDebugQueueAccessContext, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> {
        union __union<std::__variant_detail::_Trait::_Available, 0UL, CSStore2::CSStoreNullAccessContext, CSStore2::CSStoreQueueAccessContext, CSStore2::CSStoreDebugQueueAccessContext, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> {
            char __dummy;
            struct __alt<0UL, CSStore2::CSStoreNullAccessContext> {
                struct CSStoreNullAccessContext __value;
            } __head;
            union __union<std::__variant_detail::_Trait::_Available, 1UL, CSStore2::CSStoreQueueAccessContext, CSStore2::CSStoreDebugQueueAccessContext, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> {
                char __dummy;
                struct __alt<1UL, CSStore2::CSStoreQueueAccessContext> {
                    struct CSStoreQueueAccessContext __value;
                } __head;
                union __union<std::__variant_detail::_Trait::_Available, 2UL, CSStore2::CSStoreDebugQueueAccessContext, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> {
                    char __dummy;
                    struct __alt<2UL, CSStore2::CSStoreDebugQueueAccessContext> {
                        struct CSStoreDebugQueueAccessContext __value;
                    } __head;
                    union __union<std::__variant_detail::_Trait::_Available, 3UL, CSStore2::CSStoreUnfairLockAccessContext, CSStore2::CSStoreSharedReadingAccessContext> {
                        char __dummy;
                        struct __alt<3UL, CSStore2::CSStoreUnfairLockAccessContext> {
                            struct CSStoreUnfairLockAccessContext __value;
                        } __head;
                        union __union<std::__variant_detail::_Trait::_Available, 4UL, CSStore2::CSStoreSharedReadingAccessContext> {
                            char __dummy;
                            struct __alt<4UL, CSStore2::CSStoreSharedReadingAccessContext> {
                                struct CSStoreSharedReadingAccessContext __value;
                            } __head;
                            union __union<std::__variant_detail::_Trait::_Available, 5UL> __tail;
                        } __tail;
                    } __tail;
                } __tail;
            } __tail;
        } __data;
        unsigned int __index;
    } __impl_;
};

