//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCRateController, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, VCAudioCaptionsCoordinator, VCControlChannelMultiWay, VCMediaRecorder, VCNetworkFeedbackController, VCRateControlMediaController, VCSecurityKeyManager, VCSessionBitrateArbiter, VCSessionConfiguration, VCSessionDownlinkBandwidthAllocator, VCSessionMessaging, VCSessionParticipant, VCSessionParticipantLocal, VCSessionParticipantRemote, VCSessionPresentationInfo, VCSessionStatsController, VCSwitchManager, VCTransportSession;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_nw_activity, VCConnectionProtocol, VCSessionDelegate;

__attribute__((visibility("hidden")))
@interface VCSession
{
    unsigned int _state;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_sessionQueue;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_notificationQueue;	// 104 = 0x68
    id <VCSessionDelegate> _delegate;	// 112 = 0x70
    NSString *_uuid;	// 120 = 0x78
    NSString *_idsDestination;	// 128 = 0x80
    VCControlChannelMultiWay *_controlChannel;	// 136 = 0x88
    VCSessionMessaging *_sessionMessaging;	// 144 = 0x90
    VCSessionConfiguration *_configuration;	// 152 = 0x98
    VCSessionParticipantLocal *_localParticipant;	// 160 = 0xa0
    NSMutableDictionary *_remoteParticipantsMapByUUID;	// 168 = 0xa8
    NSMutableDictionary *_remoteParticipantsMapByServerID;	// 176 = 0xb0
    int _reportUpdateInterval;	// 184 = 0xb8
    int _reportReportFrequency;	// 188 = 0xbc
    VCSessionStatsController *_sessionStatsController;	// 192 = 0xc0
    VCNetworkFeedbackController *_feedbackController;	// 200 = 0xc8
    NSMutableArray *_startingParticipants;	// 208 = 0xd0
    NSMutableSet *_stoppingParticipants;	// 216 = 0xd8
    NSMutableArray *_initializingParticipants;	// 224 = 0xe0
    VCSecurityKeyManager *_securityKeyManager;	// 232 = 0xe8
    VCTransportSession *_transportSession;	// 240 = 0xf0
    id <VCConnectionProtocol> _currentActiveConnection;	// 248 = 0xf8
    unsigned int _transportSessionID;	// 256 = 0x100
    _Bool _localSourceNeedsReset;	// 260 = 0x104
    struct _VCSessionOneToOneSettings _oneToOneSettings;	// 264 = 0x108
    _Bool _switchFromGFTToOneToOneEnabled;	// 304 = 0x130
    double _remoteMediaStallReconnectTimeout;	// 312 = 0x138
    double _oneToOneSwitchStartTime;	// 320 = 0x140
    _Bool _isOneToOneInitiator;	// 328 = 0x148
    _Bool _oneToOneModeEnabled;	// 329 = 0x149
    _Bool _isReconnectPending;	// 330 = 0x14a
    _Bool _isOneToOneRemoteMediaStalling;	// 331 = 0x14b
    unsigned short _maxConnectionMTU;	// 332 = 0x14c
    _Bool _useReducedSizeRTCP;	// 334 = 0x14e
    AVCRateController *_uplinkRateController;	// 336 = 0x150
    AVCRateController *_downlinkRateController;	// 344 = 0x158
    unsigned int _uplinkTargetBitrate;	// 352 = 0x160
    unsigned int _downlinkTargetBitrate;	// 356 = 0x164
    VCRateControlMediaController *_uplinkMediaController;	// 360 = 0x168
    unsigned int _basebandFlushTransactionID;	// 368 = 0x170
    VCSessionDownlinkBandwidthAllocator *_downlinkBandwidthAllocator;	// 376 = 0x178
    NSMutableDictionary *_optInDictionary;	// 384 = 0x180
    double _sessionStartTime;	// 392 = 0x188
    struct tagVCMediaQueue *_mediaQueue;	// 400 = 0x190
    struct {
        unsigned int numberOfInternalQueues;
        double maxWaitTimeToSchedulePackets;
        double queueSizeThreshold;
        double queueSizeThresholdForScreen;
        double queueSizeQuantizationStep;
        double queueSizeCallbackInterval;
        double instantPeakBitrateFactor;
        double packetSendPacingInterval;
        unsigned int packetBurstSize;
        unsigned int minBitrateWithoutThrottling;
        int schedulePolicy;
        int bundlePolicy;
        _Bool useExternalDataBuffer;
        char *dumpID;
        _Bool isDumpFileEnabled;
        struct opaqueRTCReporting *reportingAgent;
        _Bool isRTXEnabled;
        _Bool enableDynamicPeakBitrate;
    } _mediaQueueConfiguration;	// 408 = 0x198
    _Bool _forceDisableMediaPriority;	// 528 = 0x210
    NSError *_stopError;	// 536 = 0x218
    void *_spatialMetadata;	// 544 = 0x220
    _Bool _isGKVoiceChat;	// 552 = 0x228
    double _remoteMediaStallDisconnectTimeout;	// 560 = 0x230
    int _reportingModuleID;	// 568 = 0x238
    int _reportingClientType;	// 572 = 0x23c
    _Bool _shouldCreateSecondAggregator;	// 576 = 0x240
    VCAudioCaptionsCoordinator *_captionsCoordinator;	// 584 = 0x248
    _Bool _isECNEnabled;	// 592 = 0x250
    NSObject<OS_nw_activity> *_parentNWActivity;	// 600 = 0x258
    NSObject<OS_nw_activity> *_nwActivity;	// 608 = 0x260
    NSObject<OS_nw_activity> *_nwActivityActiveSession;	// 616 = 0x268
    VCSessionPresentationInfo *_presentationInfo;	// 624 = 0x270
    VCSessionBitrateArbiter *_bitrateArbiter;	// 632 = 0x278
    NSString *_conversationID;	// 640 = 0x280
    NSDate *_conversationTimeBase;	// 648 = 0x288
    NSDate *_conversationTimeBaseTruncated;	// 656 = 0x290
    _Bool _forceFixedEncryptionLabel;	// 664 = 0x298
    VCSwitchManager *_switchManager;	// 672 = 0x2a0
    int _currentConnectionType;	// 680 = 0x2a8
    _Bool _sharingEnabled;	// 684 = 0x2ac
    struct __CFDictionary *_mediaTypeToSpatialMetadataEntryMap;	// 688 = 0x2b0
    unsigned long long _siriSpatialAudioSourceID;	// 696 = 0x2b8
    NSObject<OS_dispatch_semaphore> *_stopCompletedSemaphore;	// 704 = 0x2c0
    _Bool _didServerDie;	// 712 = 0x2c8
    _Bool _isServerPacketRetransmissionForVideoEnabled;	// 713 = 0x2c9
    _Bool _isUplinkRetransmissionForVideoEnabled;	// 714 = 0x2ca
    _Bool _isSSRCCollisionDetectionEnabled;	// 715 = 0x2cb
    VCMediaRecorder *_mediaRecorder;	// 720 = 0x2d0
    _Bool _screenAndCameraMixingEnabled;	// 728 = 0x2d8
}

+ (_Bool)isUplinkRetransmissionEnabledForVideo;	// IMP=0x00100000002649c9
+ (_Bool)isServerPacketRetransmissionEnabledForVideo;	// IMP=0x0010000000264991
+ (void)cleanupControlChannelParticipantConfig:(CDStruct_c24deb19 *)arg1;	// IMP=0x001000000025bab9
+ (void)addUUIDToMutableData:(id)arg1 fromUUIDString:(id)arg2;	// IMP=0x001000000025b8b9
+ (int)deviceRoleForSessionMode:(long long)arg1;	// IMP=0x0010000000258174
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x001000000024f24a
+ (unsigned int)mediaStateForMediaStateMessageValue:(id)arg1;	// IMP=0x001000000041493f
+ (id)mediaStateMessageValueForMediaState:(unsigned int)arg1;	// IMP=0x0010000000414920
+ (unsigned int)mediaTypeForMediaStateMessageKey:(id)arg1;	// IMP=0x0010000000414830
+ (id)mediaStateMessageKeyForMediaType:(unsigned int)arg1;	// IMP=0x0010000000414804
+ (id)mediaStateMessageStreamGroupKeysForMediaType:(unsigned int)arg1;	// IMP=0x0010000000414617
@property(nonatomic) _Bool isOneToOneRemoteMediaStalling; // @synthesize isOneToOneRemoteMediaStalling=_isOneToOneRemoteMediaStalling;
@property(nonatomic) _Bool screenAndCameraMixingEnabled; // @synthesize screenAndCameraMixingEnabled=_screenAndCameraMixingEnabled;
@property(readonly, nonatomic) int reportingModuleID; // @synthesize reportingModuleID=_reportingModuleID;
@property(readonly, nonatomic) int reportingClientType; // @synthesize reportingClientType=_reportingClientType;
@property(nonatomic) _Bool sharingEnabled; // @synthesize sharingEnabled=_sharingEnabled;
@property(nonatomic) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(retain, nonatomic) NSObject<OS_nw_activity> *nwActivity; // @synthesize nwActivity=_nwActivity;
@property(nonatomic, setter=setParentNWActivity:) NSObject<OS_nw_activity> *parentNWActivity; // @synthesize parentNWActivity=_parentNWActivity;
@property(readonly, nonatomic) VCSessionStatsController *sessionStatsController; // @synthesize sessionStatsController=_sessionStatsController;
@property(retain, nonatomic) VCSessionMessaging *sessionMessaging; // @synthesize sessionMessaging=_sessionMessaging;
@property(readonly, nonatomic) AVCRateController *downlinkRateController; // @synthesize downlinkRateController=_downlinkRateController;
@property(readonly, nonatomic) VCTransportSession *transportSession; // @synthesize transportSession=_transportSession;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(retain, nonatomic) NSMutableDictionary *remoteParticipantsMapByServerID; // @synthesize remoteParticipantsMapByServerID=_remoteParticipantsMapByServerID;
@property(retain) NSMutableDictionary *optInDictionary; // @synthesize optInDictionary=_optInDictionary;
@property(retain, nonatomic) id <VCConnectionProtocol> currentActiveConnection; // @synthesize currentActiveConnection=_currentActiveConnection;
@property(readonly, nonatomic) unsigned int transportSessionID; // @synthesize transportSessionID=_transportSessionID;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(readonly, nonatomic) NSString *idsDestination; // @synthesize idsDestination=_idsDestination;
@property(readonly, nonatomic) VCSessionParticipant *localParticipant; // @synthesize localParticipant=_localParticipant;
- (void)additionalFlushCountToOneToOneRateController:(unsigned int)arg1;	// IMP=0x0000000000264ffd
- (void)updateMediaRecorderCapabillities:(unsigned int)arg1 imageType:(int)arg2 videoCodec:(int)arg3;	// IMP=0x0000000000264e44
- (void)didReceiveMomentsRequest:(id)arg1;	// IMP=0x0000000000264da6
- (void)mediaRecorder:(id)arg1 shouldProcessRequest:(id)arg2 recipientID:(id)arg3;	// IMP=0x0000000000264b0d
- (void)didLocalNetworkConditionChange:(_Bool)arg1 isLocalNetworkQualityDegraded:(_Bool)arg2 isRemoteNetworkQualityDegraded:(_Bool)arg3;	// IMP=0x0000000000264823
- (void)setIsUplinkRetransmissionEnabled:(_Bool)arg1;	// IMP=0x0000000000264687
- (void)mediaQualityDegraded:(_Bool)arg1;	// IMP=0x00000000002645d7
- (void)preWarmStateChanged:(_Bool)arg1;	// IMP=0x00000000002644d5
- (void)reportingIntervalChanged:(double)arg1;	// IMP=0x00000000002644b8
- (void)recommendedSettingsChanged:(id)arg1;	// IMP=0x000000000026447d
- (void)unregisterReportingTask;	// IMP=0x000000000026443b
- (void)registerReportingTask;	// IMP=0x0000000000264273
- (void)generateReportDictionary:(struct __CFDictionary *)arg1;	// IMP=0x000000000026337d
- (id)newNetworkBitrateString:(const CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000002632ed
- (void)dispatchedParticipant:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x0000000000263026
- (void)processDidStop;	// IMP=0x0000000000262e14
- (void)setupOneToOneVideoStreamDelegate;	// IMP=0x0000000000262be2
- (void)setupOneToOneVideoReceiverDelegate;	// IMP=0x0000000000262adc
- (void)dispatchedParticipant:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000261faa
- (void)stopAllParticipants;	// IMP=0x0000000000261e3b
- (void)dispatchedUpdateConfiguration:(id)arg1;	// IMP=0x00000000002616b5
- (void)tearDown;	// IMP=0x0000000000261560
- (void)dispatchedTransportStop;	// IMP=0x000000000026152a
- (void)dispatchedStopWithError:(id)arg1 didRemoteCancel:(_Bool)arg2;	// IMP=0x0000000000260c06
- (void)dispatchedStopWithError:(id)arg1;	// IMP=0x0000000000260bf2
- (void)stopMediaQueueOneToOne;	// IMP=0x0000000000260bb5
- (void)dispatchedStart;	// IMP=0x000000000025fde1
- (void)dispatchedRemoveParticipant:(id)arg1;	// IMP=0x000000000025f90f
- (void)dispatchedAddParticipantConfigurations:(id)arg1;	// IMP=0x000000000025f7e9
- (_Bool)configureRemoteParticipant:(id)arg1 withConfig:(id)arg2;	// IMP=0x000000000025f4f9
- (void)dispatchedAddParticipantWithConfig:(id)arg1;	// IMP=0x000000000025e24e
- (void)reportLocalRateControlExperimentConfiguration;	// IMP=0x000000000025e104
- (void)reportingSessionRemoteParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 value:(id)arg3;	// IMP=0x000000000025de68
- (void)collectSessionEventKeyFieldsAndSubtype:(struct __CFDictionary *)arg1 eventType:(unsigned short)arg2 withParticipant:(id)arg3 keyChangeReason:(id)arg4 newMKI:(id)arg5 withStreamID:(unsigned short)arg6 collectSubtype:(unsigned short *)arg7;	// IMP=0x000000000025d726
- (void)reportingMomentsToGreenTeaWithRequest:(id)arg1;	// IMP=0x000000000025d720
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 keyChangeReason:(id)arg3 newMKI:(id)arg4 withStreamID:(unsigned short)arg5;	// IMP=0x000000000025d380
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 keyChangeReason:(id)arg3 newMKI:(id)arg4;	// IMP=0x000000000025d35e
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 keyChangeReason:(id)arg2 newMKI:(id)arg3;	// IMP=0x000000000025d334
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2;	// IMP=0x000000000025d30c
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withStreamID:(unsigned short)arg2;	// IMP=0x000000000025d2e6
- (struct __CFDictionary *)getClientSpecificUserInfo;	// IMP=0x000000000025d225
- (id)computeConversationTimeBaseTruncated;	// IMP=0x000000000025d1c1
- (void)didEncryptionKeyRollTimeout;	// IMP=0x000000000025d14b
- (void)resetDecryptionTimeout;	// IMP=0x000000000025cfc3
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x000000000025ccaf
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x000000000025cca7
- (void)setupMultiwayABTesting;	// IMP=0x000000000025cb54
- (void)cleanupNwActivity;	// IMP=0x000000000025cb09
- (void)cleanupVCRC;	// IMP=0x000000000025cac8
- (void)setReportingClientExperimentSettings;	// IMP=0x000000000025ca44
- (void)sendSymptomsToRemoteParticipants:(id)arg1 symptom:(id)arg2 groupID:(id)arg3;	// IMP=0x000000000025c682
- (void)unregisterRemoteParticipantFromSession:(id)arg1;	// IMP=0x000000000025c474
- (void)removeDelegatesForRemoteParticipant:(id)arg1;	// IMP=0x000000000025c45d
- (_Bool)registerRemoteParticipantToSession:(id)arg1;	// IMP=0x000000000025c038
- (_Bool)isECNCapableWithRemoteParticipant:(id)arg1;	// IMP=0x000000000025be83
- (_Bool)composeControlChannelParticipantConfig:(CDStruct_c24deb19 *)arg1 withRemoteParticipant:(id)arg2;	// IMP=0x000000000025bb06
- (id)newEncryptionLabelWithLocalUUID:(id)arg1 remoteUUID:(id)arg2;	// IMP=0x000000000025b961
- (void)broadcastInitialMediaState;	// IMP=0x000000000025b6e5
- (void)messageMediaInitialStateToParticipant:(id)arg1;	// IMP=0x000000000025b474
- (void)setDelegatesForRemoteParticipant:(id)arg1;	// IMP=0x000000000025b459
- (void)handleMembershipChangeInfoEvent:(id)arg1;	// IMP=0x000000000025b349
- (void)handleEncryptionInfoEvent:(id)arg1;	// IMP=0x000000000025b084
- (_Bool)detectSSRCCollisionWithRemoteMediaStream:(id)arg1 remoteBlobCreationTime:(union tagNTP)arg2 resetNeeded:(_Bool *)arg3;	// IMP=0x000000000025aec0
- (_Bool)detectSSRCCollision:(id)arg1 resetNeeded:(_Bool *)arg2;	// IMP=0x000000000025ac12
- (void)optOutStreamWithIDSStreamIDs:(id)arg1;	// IMP=0x000000000025ab54
- (void)optInStreamWithIDSStreamIDs:(id)arg1;	// IMP=0x000000000025aa96
- (void)updateLocalStreamConfiguration;	// IMP=0x000000000025a77f
- (void)updateLocalVideoCaptureFrameRate;	// IMP=0x0000000000259f11
- (int)maxRemoteParticipants30fps;	// IMP=0x0000000000259e93
- (void)setMediaQueuePeakBitrateWithTargetBitrate:(unsigned int)arg1;	// IMP=0x0000000000259dac
- (void)handleMediaQueueSizeExceedThresholdWithQueueSize:(double)arg1 mediaQueueStreamId:(unsigned int)arg2 type:(int)arg3;	// IMP=0x000000000025994e
- (void)createMediaQueue;	// IMP=0x0000000000259620
- (void)setupUplinkBitrateCaps;	// IMP=0x00000000002595b7
- (void)startRateControllersMultiwayFromOneToOne:(_Bool)arg1;	// IMP=0x00000000002593ff
- (void)updateMultiwayRateControllerWithActiveConnection:(id)arg1 isScreenEnabled:(_Bool)arg2 isLocal:(_Bool)arg3;	// IMP=0x00000000002592c0
- (void)cleanupSpatialAudio;	// IMP=0x0000000000259128
- (int)reserveAudioChannelForMediaType:(unsigned int)arg1 spatialAudioSourceID:(unsigned long long)arg2;	// IMP=0x0000000000258f50
- (int)setupSpatialAudio;	// IMP=0x0000000000258ab0
- (void)didRemoveSpatialMetadataEntry;	// IMP=0x0000000000258a25
- (void)setupRateControllersMultiway;	// IMP=0x0000000000258850
- (id)vcrcServerBagWithOperatingMode:(int)arg1;	// IMP=0x000000000025869b
- (void)setSessionInfoSynchronizerPeerSubscribedStreamsCallback;	// IMP=0x00000000002584d4
- (void)setSessionInfoSynchronizerErrorResponseCallback;	// IMP=0x00000000002581c0
- (void)setSessionInfoSynchronizerCallbacks;	// IMP=0x0000000000258192
- (void)reportingSessionStopEventWithError:(id)arg1;	// IMP=0x0000000000257ed8
- (void)reportingSessionDownlinkOptInEvent:(id)arg1 selectedMediaEntriesForParticipants:(id)arg2;	// IMP=0x0000000000257995
- (void)distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:(_Bool)arg1;	// IMP=0x00000000002570fa
- (void)updateParticipantConfigurations:(id)arg1;	// IMP=0x0000000000256aac
- (void)updateParticipantWindowState;	// IMP=0x0000000000256853
- (void)sendNetworkCapabilitiesMessageToParticipant:(id)arg1;	// IMP=0x0000000000256615
- (_Bool)isTLEEnabledOnPrimaryConnection;	// IMP=0x00000000002565ab
- (void)applySpatialMetadata;	// IMP=0x0000000000255fc3
- (void)updatePresentationInfo:(id)arg1;	// IMP=0x0000000000255c63
- (int)flushBasebandWithPayloads:(id)arg1;	// IMP=0x0000000000255c5b
- (void)mediaController:(void *)arg1 mediaSuggestionDidChange:(struct VCRateControlMediaSuggestion)arg2;	// IMP=0x0000000000255bfc
- (void)rateController:(id)arg1 isECNEnabled:(_Bool)arg2;	// IMP=0x0000000000255ac1
- (int)learntBitrateForSegment:(id)arg1 defaultValue:(int)arg2;	// IMP=0x0000000000255a97
- (void)rateController:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;	// IMP=0x00000000002554fa
- (void)updateNetworkFeedbackControllerReport:(CDStruct_4b4d87a1 *)arg1;	// IMP=0x000000000025534f
- (void)didReceivedSessionStatsAtTime:(double)arg1;	// IMP=0x00000000002552b6
- (void)serverDidDie;	// IMP=0x000000000025518b
- (void)vcSessionParticipantDidStopReacting:(id)arg1;	// IMP=0x0000000000254e7a
- (void)vcSessionParticipant:(id)arg1 reactionDidStart:(id)arg2;	// IMP=0x0000000000254b05
- (void)vcSessionParticipant:(id)arg1 mediaMixingDidChangeForMediaType:(unsigned int)arg2 mixingMediaType:(unsigned int)arg3;	// IMP=0x00000000002547e4
- (void)vcSessionParticipant:(id)arg1 remoteMediaStateDidChange:(unsigned int)arg2 forMediaType:(unsigned int)arg3;	// IMP=0x0000000000254666
- (void)vcSessionParticipant:(id)arg1 mediaStateDidChange:(unsigned int)arg2 forMediaType:(unsigned int)arg3 didSucceed:(_Bool)arg4 error:(id)arg5;	// IMP=0x0000000000254333
- (void)vcSessionParticipant:(id)arg1 didDetectError:(id)arg2;	// IMP=0x000000000025425c
- (void)vcSessionParticipant:(id)arg1 oneToOneModeDidChange:(_Bool)arg2;	// IMP=0x000000000025416e
- (void)vcSessionParticipantDidRemoteMediaStallTimeout:(id)arg1 duration:(double)arg2;	// IMP=0x0000000000253d8c
- (void)vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:(id)arg1;	// IMP=0x00000000002539a1
- (void)vcSessionParticipantDidMediaDecryptionTimeOut:(id)arg1;	// IMP=0x00000000002535f5
- (void)vcSessionParticipantDidChangeReceivingStreams:(id)arg1;	// IMP=0x0000000000253540
- (void)vcSessionParticipantDidChangeSendingStreams:(id)arg1;	// IMP=0x000000000025348b
- (void)vcSessionParticipant:(id)arg1 didRequestVideoRedundancy:(_Bool)arg2;	// IMP=0x0000000000253382
- (void)vcSessionParticipant:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;	// IMP=0x00000000002532e3
- (void)vcSessionParticipant:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 streamGroupID:(unsigned int)arg3 firType:(int)arg4;	// IMP=0x00000000002530d3
- (void)vcSessionParticipant:(id)arg1 didChangeActualNetworkBitrateForStreamGroupID:(unsigned int)arg2;	// IMP=0x00000000002530b6
- (void)vcSessionParticipant:(id)arg1 didChangeMediaPriority:(unsigned char)arg2 description:(id)arg3;	// IMP=0x0000000000252ed2
- (void)vcSessionParticipant:(id)arg1 remoteVideoPausedDidChange:(_Bool)arg2;	// IMP=0x0000000000252d2e
- (void)vcSessionParticipant:(id)arg1 remoteAudioPausedDidChange:(_Bool)arg2;	// IMP=0x0000000000252bde
- (void)vcSessionParticipant:(id)arg1 videoPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x000000000025283b
- (void)vcSessionParticipant:(id)arg1 audioPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000252456
- (void)vcSessionParticipant:(id)arg1 remoteScreenEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000252271
- (void)vcSessionParticipant:(id)arg1 remoteVideoEnabledDidChange:(_Bool)arg2;	// IMP=0x00000000002520fb
- (void)vcSessionParticipant:(id)arg1 remoteAudioEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000251fdd
- (void)vcSessionParticipantFetchStreamGroupState:(id)arg1;	// IMP=0x0000000000251ef7
- (void)vcSessionParticipant:(id)arg1 screenEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x00000000002519a7
- (void)vcSessionParticipant:(id)arg1 videoEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000251552
- (void)updateOneToOneVideoReceiverDelegate:(_Bool)arg1;	// IMP=0x0000000000251521
- (void)vcSessionParticipant:(id)arg1 audioEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x000000000025117e
- (void)vcSessionParticipant:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x00000000002510b3
- (void)vcSessionParticipant:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000250fd4
- (void)setOneToOneVideoStreamBandwidthProbing:(_Bool)arg1;	// IMP=0x0000000000250f2c
- (unsigned int)calculateExpectedTotalNetworkBitrateUplink;	// IMP=0x0000000000250e46
- (unsigned int)calculateExpectedTotalNetworkBitrateDownlink;	// IMP=0x0000000000250b87
- (void)handlePreferredInterfaceForDuplicationUpdate:(unsigned char)arg1 notifyPeer:(_Bool)arg2 enableDuplication:(_Bool)arg3 isMediaUnrecoverableSignal:(_Bool)arg4;	// IMP=0x0000000000250a28
- (void)handleActiveConnectionChangeForMultiway:(id)arg1;	// IMP=0x00000000002507a9
- (void)dispatchedSetRemoteScreenControlEnabled:(_Bool)arg1 isLocal:(_Bool)arg2;	// IMP=0x00000000002507a3
- (void)dispatchedHandleActiveConnectionChange:(id)arg1;	// IMP=0x0000000000250532
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x000000000025049c
- (void)handleCellularMTUChanged:(unsigned short)arg1 connection:(id)arg2;	// IMP=0x0000000000250442
- (void)handlePrimaryConnectionChanged:(id)arg1;	// IMP=0x000000000025027c
- (void)handleCellTechChange:(int)arg1 connection:(id)arg2;	// IMP=0x0000000000250179
- (void)notifyRemoteOfCellTechChange:(id)arg1 remoteParticipant:(id)arg2;	// IMP=0x0000000000250018
- (void)applyRemoteLinkConstrains:(id)arg1;	// IMP=0x000000000024ff6a
- (void)applyLinkConstrains:(id)arg1;	// IMP=0x000000000024fe58
- (void)setTransportSessionEventHandler;	// IMP=0x000000000024f25e
- (void)sendStreamGroupStateToParticipant:(id)arg1;	// IMP=0x000000000024f19b
- (void)dispatchedSetScreenAndCameraMixingEnabled:(_Bool)arg1;	// IMP=0x000000000024ede6
- (void)dispatchedSetSharingEnabled:(_Bool)arg1;	// IMP=0x000000000024e7d1
- (void)setOneToOneModeEnabledFromRemoteSignal:(_Bool)arg1;	// IMP=0x000000000024e610
- (void)generateKeyFrameWithReceivedMessage:(id)arg1 forParticipant:(id)arg2;	// IMP=0x000000000024e2b2
- (void)setRemoteScreenControlEnabled:(_Bool)arg1;	// IMP=0x000000000024e21b
- (void)reportingSetUserInfo;	// IMP=0x000000000024e0b2
- (struct __CFString *)configurationSpecificReportingServiceName;	// IMP=0x000000000024e02f
@property(readonly, nonatomic) NSArray *remoteParticipants;
- (void)mediaStateChangedForParticipant:(id)arg1;	// IMP=0x000000000024debd
- (id)participantForID:(id)arg1;	// IMP=0x000000000024dd07
- (void)updateConfiguration:(id)arg1;	// IMP=0x000000000024dc50
- (void)stopWithError:(id)arg1 didRemoteCancel:(_Bool)arg2;	// IMP=0x000000000024dbb2
- (void)stopWithError:(id)arg1;	// IMP=0x000000000024db79
- (void)start;	// IMP=0x000000000024dad7
@property(readonly, nonatomic) VCSessionParticipantRemote *oneToOneRemoteParticipant;
- (void)removeParticipant:(id)arg1;	// IMP=0x000000000024da16
- (void)addParticipantConfigurations:(id)arg1;	// IMP=0x000000000024d97d
@property(readonly, nonatomic) id <VCSessionDelegate> delegate;
- (id)participantsToString;	// IMP=0x000000000024d922
@property(readonly, copy) NSString *description;
- (char *)sessionStateToString:(unsigned int)arg1;	// IMP=0x000000000024d860
- (void)setState:(unsigned int)arg1;	// IMP=0x000000000024d5f4
- (void)setupTransportSessionWithDestination:(id)arg1;	// IMP=0x000000000024d413
- (int)selectDataPath;	// IMP=0x000000000024d2d3
- (void)setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:(id)arg1 remoteFrameworkVersion:(id)arg2;	// IMP=0x000000000024d266
@property(readonly, nonatomic) NSDictionary *transportMetadata;
@property(readonly, nonatomic) NSDictionary *capabilities;
- (void)startDeallocTimer;	// IMP=0x000000000024ce9d
- (void)stopTimeoutTimer;	// IMP=0x000000000024ce39
- (void)setReportingConfig:(CDStruct_acd50889 *)arg1;	// IMP=0x000000000024c9e2
- (void)dealloc;	// IMP=0x000000000024c378
- (id)initWithIDSDestination:(id)arg1 configurationDict:(id)arg2 negotiationData:(id)arg3 delegate:(id)arg4 processId:(int)arg5 isGKVoiceChat:(_Bool)arg6;	// IMP=0x000000000024a9a8
- (void)configureOneToOneReportingOnVideoEnabled;	// IMP=0x0000000000405002
- (void)handleActiveConnectionChangeForOneToOne:(id)arg1;	// IMP=0x0000000000404de6
- (void)notifyDelegateActiveConnectionDidChange;	// IMP=0x0000000000404c01
- (void)reportActiveConnectionOneToOne;	// IMP=0x0000000000404aa4
- (void)startOneToOne;	// IMP=0x0000000000403ebe
- (void)setupOneToOneABTesting;	// IMP=0x000000000040256d
- (void)applyNegotiatedOneToOneFaceTimeSettings;	// IMP=0x0000000000402434
- (void)dispatchedSetOneToOneModeEnabled:(_Bool)arg1 isLocal:(_Bool)arg2;	// IMP=0x0000000000401710
- (void)completionHandlerOneToOneEnabled:(_Bool)arg1 didSucceed:(_Bool)arg2;	// IMP=0x000000000040125b
- (_Bool)completeTransitionToOneToOneEnabled:(_Bool)arg1;	// IMP=0x0000000000400fe3
- (_Bool)addOneToOneParticipant:(id)arg1;	// IMP=0x0000000000400600
- (unsigned int)vcrcServerBagProfileNumber;	// IMP=0x0000000000400394
- (void)configureOneToOneRateController:(id)arg1 isUsingCamera:(_Bool)arg2 isUsingScreen:(_Bool)arg3;	// IMP=0x00000000003fff75
- (_Bool)negotiateOneToOneWithRemoteParticipant:(id)arg1;	// IMP=0x00000000003ff718
- (void)setupOneToOneAdaptiveLearning;	// IMP=0x00000000003ff3b9
- (void)renewOneToOneMediaQueue;	// IMP=0x00000000003ff350
- (void)startReportingForOneToOneEnabled:(_Bool)arg1;	// IMP=0x00000000003feed3
- (void)cleanUpOneToOneVideoStreamDelegate;	// IMP=0x00000000003fee67
- (void)cleanupOneToOneVideoReceiverDelegate;	// IMP=0x00000000003fee23
- (void)cleanupOneToOneDelegates;	// IMP=0x00000000003fedf5
- (void)cleanupOneToOne;	// IMP=0x00000000003fed4a
- (void)cleanupOneToOneMediaQueue;	// IMP=0x00000000003fecf9
- (_Bool)switchFromMultiwayToOneToOne;	// IMP=0x00000000003fe98b
- (_Bool)multiwayToOneToOneSwitchConfigure;	// IMP=0x00000000003fe4b6
- (void)multiwayToOneToOneSwitchResume;	// IMP=0x00000000003fe3d6
- (void)multiwayToOneToOneSwitchSuspend;	// IMP=0x00000000003fe2f5
- (void)messageExistingParticipantsPostOneToOneModeSwitch;	// IMP=0x00000000003fe190
- (_Bool)switchFromOneToOneToMultiway;	// IMP=0x00000000003fdf74
- (void)oneToOneToMultiwaySwitchConfigure;	// IMP=0x00000000003fdc04
- (void)oneToOneToMultiwaySwitchResume;	// IMP=0x00000000003fda9a
- (void)oneToOneToMultiwaySwitchSuspend;	// IMP=0x00000000003fda2d
- (void)reportSwitchingError:(_Bool)arg1 errorEvent:(unsigned int)arg2;	// IMP=0x00000000003fd983
- (void)reportCompletedSwitchingToOneToOne:(_Bool)arg1;	// IMP=0x00000000003fd6a8
- (void)reportStartedSwitchingToOneToOne:(_Bool)arg1;	// IMP=0x00000000003fd689
- (void)reportExistingParticipantsAnew;	// IMP=0x00000000003fd3a7
- (_Bool)configureRemoteParticipantForOneToOne:(id)arg1;	// IMP=0x00000000003fcda3
- (_Bool)isOneToOneRemoteParticipantUsingScreen;	// IMP=0x00000000003fcd35
- (_Bool)isOneToOneUsingScreen;	// IMP=0x00000000003fccd6
- (_Bool)isOneToOneUsingVideo;	// IMP=0x00000000003fcc77
- (void)stopRateControllerOneToOne;	// IMP=0x00000000003fcc57
- (void)startRateControllerOneToOne;	// IMP=0x00000000003fcbb7
- (id)newParticipantOneToOneConfigWithIDSParticipantID:(unsigned long long)arg1 isLocal:(_Bool)arg2 mediaControlInfoVersion:(unsigned char)arg3 videoEnabled:(_Bool)arg4 screenEnabled:(_Bool)arg5 remoteParticipant:(id)arg6;	// IMP=0x00000000003fc698
- (int)setupOneToOneMediaControlInfoGeneratorsWithVersion:(unsigned char)arg1 oneToOneConfig:(id)arg2 videoEnabled:(_Bool)arg3;	// IMP=0x00000000003fc258
- (_Bool)configureLocalParticipantWithOneToOneRemoteParticipant:(id)arg1 isInitialConfiguration:(_Bool)arg2;	// IMP=0x00000000003fbbe0
- (void)cleanupRateControllerOneToOne;	// IMP=0x00000000003fbb9d
- (void)initWithRelevantStorebagEntries;	// IMP=0x00000000003fbaf3
- (void)updateOneToOneRateControllerForVideoEnabled:(_Bool)arg1;	// IMP=0x00000000003fbab5
- (void)updateOneToOneRateControllerForVideoEnabled:(_Bool)arg1 screenEnabled:(_Bool)arg2;	// IMP=0x00000000003fb97b
- (int)setupRateControllerOneToOne;	// IMP=0x00000000003fb0dd
- (_Bool)setOneToOneConfigOnRemoteParticipant:(id)arg1;	// IMP=0x00000000003fae6f
- (id)newNegotiatorForOneToOneWithRemoteParticipant:(id)arg1;	// IMP=0x00000000003fa6d4
- (int)setupOneToOneMediaQueue;	// IMP=0x00000000003fa34c
- (int)setupOneToOne;	// IMP=0x00000000003fa02e
- (void)processMediaTypeMixingList:(id)arg1 forRemoteParticipant:(id)arg2;	// IMP=0x00000000004170d3
- (void)processMediaStateMessage:(id)arg1 remoteParticipantID:(id)arg2;	// IMP=0x000000000041673f
- (void)processMediaTypeStatesWithMessage:(id)arg1 mediaTypeStates:(id)arg2;	// IMP=0x0000000000416275
- (void)processStreamGroupStateMessageKey:(id)arg1 value:(id)arg2 mediaTypeStates:(id)arg3;	// IMP=0x0000000000415d50
- (void)setupMediaStateUpdateMessage;	// IMP=0x0000000000415c5b
- (_Bool)validateStreamGroup:(id)arg1 state:(id)arg2;	// IMP=0x0000000000415bf3
- (void)sendMediaStateUpdateMessageToRemoteParticipant:(id)arg1;	// IMP=0x0000000000415b78
- (void)broadcastMediaStateUpdateMessage;	// IMP=0x00000000004155af
- (void)appendMediaTypeMixingListToMessageDictionary:(id)arg1;	// IMP=0x000000000041520a
- (id)stateMessageWithSupportsNestedDictionary:(_Bool)arg1;	// IMP=0x00000000004149f2
- (void)updateStateMessage:(id)arg1 stateState:(unsigned int)arg2 streamGroupKey:(id)arg3;	// IMP=0x0000000000414960
- (void)setupReactionMessages;	// IMP=0x0000000000413f70
- (void)setupLinkConstrainsChangedMessages;	// IMP=0x0000000000413e26
- (void)setupCellTechChangeMessages;	// IMP=0x0000000000413bdb
- (void)remoteCellTechStateUpdate:(int)arg1 maxRemoteBitrate:(unsigned int)arg2;	// IMP=0x0000000000413988
- (void)setupNetworkCapabilityMessage;	// IMP=0x0000000000413819
- (void)handleNetworkCapabilityMessage:(id)arg1 forParticipantId:(id)arg2;	// IMP=0x0000000000413351
- (void)setupNetworkQualityDegradedMessage;	// IMP=0x0000000000412fdb
- (void)setupMediaQualityDegradedMessage;	// IMP=0x0000000000412c65
- (void)setupDisconnectMessage;	// IMP=0x0000000000412a2f
- (void)setupPiPStateChangeMessage;	// IMP=0x000000000041270e
- (void)setupPreferredInterfaceMessage;	// IMP=0x0000000000412373
- (void)setupVideoRedundancyMessages;	// IMP=0x0000000000412127
- (void)setupMomentsMessages;	// IMP=0x0000000000411ef2
- (void)setupWRMAlertUpdateMessage;	// IMP=0x0000000000411b7c
- (void)setupSymptomEnabledMessages;	// IMP=0x00000000004118f9
- (void)processSymptomFromMessage:(id)arg1 participantID:(id)arg2 isLocalInitiated:(_Bool)arg3 isLocalSideOnly:(_Bool)arg4;	// IMP=0x00000000004115cc
- (void)setupKeyFrameGenerationMessages;	// IMP=0x00000000004114d0
- (void)setupVideoPausedMessages;	// IMP=0x000000000041124e
- (void)setupOneToOneEnabledMessages;	// IMP=0x0000000000410fc1
- (void)setupAudioPausedMessages;	// IMP=0x0000000000410d3f
- (void)setupStreamGroupStateFetchMessage;	// IMP=0x00000000004109f7
- (void)setupVideoEnabledMessages;	// IMP=0x000000000041077e
- (void)setupAudioEnabledMessages;	// IMP=0x0000000000410503
- (void)broadcastSingleStateMessage:(id)arg1 withTopic:(id)arg2;	// IMP=0x000000000041034b
- (void)broadcastMessageDictionary:(id)arg1 withTopic:(id)arg2;	// IMP=0x00000000004101c0
- (void)broadcastMessage:(id)arg1 withTopic:(id)arg2;	// IMP=0x0000000000410035
- (void)stopSessionMessaging;	// IMP=0x000000000040ffc9
- (void)startSessionMessaging;	// IMP=0x000000000040ff82
- (void)destroySessionMessaging;	// IMP=0x000000000040ff2a
- (void)createSessionMessaging;	// IMP=0x000000000040fd88

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

