//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class VCRateControlBandwidthEstimatorMap, VCRateControlOWRDEstimator, VCRateControlServerBag, VCStatisticsCollectorQueue, VCStatisticsHistory;

__attribute__((visibility("hidden")))
@interface AVCStatisticsCollector : NSObject
{
    struct tagVCStatisticsCollection *_statisticsCollection;	// 8 = 0x8
    VCRateControlBandwidthEstimatorMap *_bandwidthEstimatorMap;	// 16 = 0x10
    VCRateControlOWRDEstimator *_owrdEstimator;	// 24 = 0x18
    VCStatisticsHistory *_history;	// 32 = 0x20
    VCStatisticsCollectorQueue *_queue;	// 40 = 0x28
    int _forceQueueWaitTimeMs;	// 48 = 0x30
    double _previousProcessTime;	// 56 = 0x38
    unsigned int _radioAccessTechnology;	// 64 = 0x40
    unsigned int _mode;	// 68 = 0x44
    _Bool _useExternalThread;	// 72 = 0x48
    _Bool _isStarted;	// 73 = 0x49
    unsigned int _sharedEstimatedBandwidth;	// 76 = 0x4c
    unsigned int _sharedEstimatedBandwidthUncapped;	// 80 = 0x50
    unsigned int _sharedRemoteEstimatedBandwidth;	// 84 = 0x54
    unsigned int _maxVideoLocalBurstyLoss;	// 88 = 0x58
    unsigned int _maxAudioLocalBurstyLoss;	// 92 = 0x5c
    unsigned int _remotePacketReceivedAudio;	// 96 = 0x60
    unsigned int _remotePacketReceivedVideo;	// 100 = 0x64
    unsigned int _estimatedBandwidthCap;	// 104 = 0x68
    unsigned int _expectedBitrate;	// 108 = 0x6c
    unsigned char _mediaControlInfoFECFeedbackVersion;	// 112 = 0x70
    _Bool _fastSuddenBandwidthDetectionEnabled;	// 113 = 0x71
    VCRateControlServerBag *_serverBag;	// 120 = 0x78
    double _packetReceivedOWRD;	// 128 = 0x80
    unsigned int _feedbackOutOfOrderTotalCount;	// 136 = 0x88
    _Bool _resetRemoteAudioPacketReceived;	// 140 = 0x8c
    struct _opaque_pthread_rwlock_t _statisticsCollectionLock;	// 144 = 0x90
    struct __CFAllocator *_statisticsChangeHandlerEntryAllocator;	// 344 = 0x158
    unsigned int _nextChangeHandlerIdentifier;	// 352 = 0x160
    struct _VCSingleLinkedList _statisticsChangeHandlers[14];	// 360 = 0x168
    struct _opaque_pthread_rwlock_t _statisticsChangeHandlersLock;	// 808 = 0x328
    struct __CFAllocator *_changeHandlerRequestAllocator;	// 1008 = 0x3f0
    struct tagAVCStatisticsCollectorChangedHandlerRequest _changeHandlerRequests;	// 1016 = 0x3f8
    struct os_unfair_lock_s _changeHandlerRequestsLock;	// 1048 = 0x418
    struct _opaque_pthread_mutex_t _startMutex;	// 1056 = 0x420
}

@property(readonly, nonatomic) _Bool isStarted; // @synthesize isStarted=_isStarted;
@property(readonly, nonatomic) _Bool fastSuddenBandwidthDetectionEnabled; // @synthesize fastSuddenBandwidthDetectionEnabled=_fastSuddenBandwidthDetectionEnabled;
@property(retain, nonatomic) VCRateControlServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(nonatomic) unsigned char mediaControlInfoFECFeedbackVersion; // @synthesize mediaControlInfoFECFeedbackVersion=_mediaControlInfoFECFeedbackVersion;
@property(nonatomic) unsigned int expectedBitrate; // @synthesize expectedBitrate=_expectedBitrate;
@property(nonatomic) unsigned int estimatedBandwidthCap; // @synthesize estimatedBandwidthCap=_estimatedBandwidthCap;
@property(readonly, nonatomic) unsigned int sharedRemoteEstimatedBandwidth; // @synthesize sharedRemoteEstimatedBandwidth=_sharedRemoteEstimatedBandwidth;
@property(readonly, nonatomic) unsigned int sharedEstimatedBandwidthUncapped; // @synthesize sharedEstimatedBandwidthUncapped=_sharedEstimatedBandwidthUncapped;
@property(readonly, nonatomic) unsigned int sharedEstimatedBandwidth; // @synthesize sharedEstimatedBandwidth=_sharedEstimatedBandwidth;
@property(nonatomic) unsigned int radioAccessTechnology; // @synthesize radioAccessTechnology=_radioAccessTechnology;
@property(nonatomic) unsigned int mode; // @synthesize mode=_mode;
- (struct tagVCStatisticsMessage)getVCStatisticsWithType:(int)arg1 time:(double)arg2;	// IMP=0x000000000003edf7
- (_Bool)shouldProcessAtTime:(double)arg1;	// IMP=0x000000000003edb8
- (void)unregisterAllStatisticsChangeHandlers;	// IMP=0x000000000003eb33
- (_Bool)unregisterStatisticsChangeHandlerWithType:(int)arg1 handlerIndex:(int)arg2;	// IMP=0x000000000003eab0
- (int)registerStatisticsChangeHandlerWithType:(int)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003e6f2
- (id)getStatistics:(id)arg1;	// IMP=0x000000000003e48e
- (void)setStatistics:(id)arg1;	// IMP=0x000000000003e2ae
- (void)stop;	// IMP=0x000000000003dfa6
- (void)start;	// IMP=0x000000000003d38b
- (void)dealloc;	// IMP=0x000000000003d0f1
- (id)initForSimulation:(_Bool)arg1 useExternalThread:(_Bool)arg2;	// IMP=0x000000000003cd3e
- (id)init;	// IMP=0x000000000003cd28

@end

