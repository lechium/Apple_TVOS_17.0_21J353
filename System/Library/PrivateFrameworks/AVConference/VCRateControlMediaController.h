//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVCStatisticsCollector, SenderLargeFrameInfo, VCRateControlServerBag;

__attribute__((visibility("hidden")))
@interface VCRateControlMediaController : NSObject
{
    id _mediaControllerDelegate;	// 8 = 0x8
    AVCStatisticsCollector *_statisticsCollector;	// 16 = 0x10
    struct tagHANDLE *_hMediaQueue;	// 24 = 0x18
    struct tagVCMediaQueue *_vcMediaQueue;	// 32 = 0x20
    unsigned int _videoSendingBitrate;	// 40 = 0x28
    unsigned int _audioSendingBitrate;	// 44 = 0x2c
    unsigned int _minTargetBitrate;	// 48 = 0x30
    unsigned int _targetBitrate;	// 52 = 0x34
    _Bool _isVideoStoppedByVCRateControl;	// 56 = 0x38
    _Bool _isVideoStoppedByBaseband;	// 57 = 0x39
    _Bool _isVideoPausedByUser;	// 58 = 0x3a
    _Bool _isAudioOnly;	// 59 = 0x3b
    _Bool _isBasebandFlushing;	// 60 = 0x3c
    _Bool _isAudioStall;	// 61 = 0x3d
    _Bool _isInThrottlingMode;	// 62 = 0x3e
    _Bool _allowVideoStop;	// 63 = 0x3f
    _Bool _isRemoteAudioPaused;	// 64 = 0x40
    int _audioFractionTier;	// 68 = 0x44
    double _lastAudioFractionChangeTime;	// 72 = 0x48
    double _lastAudioEnoughRateTime;	// 80 = 0x50
    unsigned char _videoPayloadType;	// 88 = 0x58
    unsigned int _videoRefreshFrameTimestamp;	// 92 = 0x5c
    unsigned int _videoRefreshFramePacketCount;	// 96 = 0x60
    double _lastVideoRefreshFrameTime;	// 104 = 0x68
    double _lastVideoKeyFrameTime;	// 112 = 0x70
    SenderLargeFrameInfo *_senderLargeFrameInfo;	// 120 = 0x78
    unsigned int _probingLargeFrameSize;	// 128 = 0x80
    unsigned int _probingLargeFrameSizeCap;	// 132 = 0x84
    unsigned int _probingSequencePacketSize;	// 136 = 0x88
    unsigned int _probingSequencePacketCount;	// 140 = 0x8c
    _Bool _shouldDisableLargeFrameRequestsWhenInitialRampUp;	// 144 = 0x90
    _Bool _isRateLimitedMaxTimeExceeded;	// 145 = 0x91
    _Bool _isSenderProbingEnabled;	// 146 = 0x92
    _Bool _enableAggressiveProbingSequence;	// 147 = 0x93
    VCRateControlServerBag *_serverBag;	// 152 = 0x98
    double _minProbingSpacingAggressive;	// 160 = 0xa0
    int _basebandFlushCount;	// 168 = 0xa8
    int _basebandFlushedVideoCount;	// 172 = 0xac
    int _basebandFlushedAudioCount;	// 176 = 0xb0
    double _lastBasebandFlushCountChangeTime;	// 184 = 0xb8
    double _lastBasebandFlushAudioTime;	// 192 = 0xc0
    double _lastBasebandFlushVideoTime;	// 200 = 0xc8
    unsigned short _videoFlushTransactionID;	// 208 = 0xd0
    unsigned int _audioStallBitrate;	// 212 = 0xd4
    double _lastAudioStallFlushTime;	// 216 = 0xd8
    _Bool _isRTPFlushBasebandFromVCRateControl;	// 224 = 0xe0
    unsigned int _basebandAverageBitrate;	// 228 = 0xe4
    unsigned int _basebandAverageBitrateShort;	// 232 = 0xe8
    unsigned int _basebandTotalQueueDepth;	// 236 = 0xec
    unsigned int _basebandFlushableQueueDepth;	// 240 = 0xf0
    double _basebandExpectedQueuingDelay;	// 248 = 0xf8
    double _basebandNBDCD;	// 256 = 0x100
    double _lastBasebandHighNBDCDTime;	// 264 = 0x108
    _Bool _isBasebandQueuingDelayHigh;	// 272 = 0x110
    void *_logBasebandDump;	// 280 = 0x118
    void *_logBWEDump;	// 288 = 0x120
    unsigned int _afrcRemoteEstimatedBandwidth;	// 296 = 0x128
    _Bool _fromSmartBrake;	// 300 = 0x12c
}

@property(nonatomic) double lastBasebandFlushCountChangeTime; // @synthesize lastBasebandFlushCountChangeTime=_lastBasebandFlushCountChangeTime;
@property(nonatomic) struct tagVCMediaQueue *vcMediaQueue; // @synthesize vcMediaQueue=_vcMediaQueue;
@property(nonatomic) struct tagHANDLE *mediaQueue; // @synthesize mediaQueue=_hMediaQueue;
@property(retain, nonatomic) VCRateControlServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(nonatomic) _Bool enableAggressiveProbingSequence; // @synthesize enableAggressiveProbingSequence=_enableAggressiveProbingSequence;
@property(readonly, nonatomic) double lastVideoRefreshFrameTime; // @synthesize lastVideoRefreshFrameTime=_lastVideoRefreshFrameTime;
@property(readonly, nonatomic) int audioFractionTier; // @synthesize audioFractionTier=_audioFractionTier;
@property(nonatomic) _Bool isRTPFlushBasebandFromVCRateControl; // @synthesize isRTPFlushBasebandFromVCRateControl=_isRTPFlushBasebandFromVCRateControl;
@property(nonatomic) unsigned int afrcRemoteEstimatedBandwidth; // @synthesize afrcRemoteEstimatedBandwidth=_afrcRemoteEstimatedBandwidth;
@property(nonatomic) _Bool allowVideoStop; // @synthesize allowVideoStop=_allowVideoStop;
@property(nonatomic) _Bool isRemoteAudioPaused; // @synthesize isRemoteAudioPaused=_isRemoteAudioPaused;
@property(readonly, nonatomic) _Bool isInThrottlingMode; // @synthesize isInThrottlingMode=_isInThrottlingMode;
@property(nonatomic) _Bool isAudioOnly; // @synthesize isAudioOnly=_isAudioOnly;
@property(nonatomic) _Bool isSenderProbingEnabled; // @synthesize isSenderProbingEnabled=_isSenderProbingEnabled;
@property(readonly, nonatomic) _Bool isVideoStoppedByVCRateControl; // @synthesize isVideoStoppedByVCRateControl=_isVideoStoppedByVCRateControl;
@property(readonly, nonatomic) int basebandFlushedAudioCount; // @synthesize basebandFlushedAudioCount=_basebandFlushedAudioCount;
@property(readonly, nonatomic) int basebandFlushedVideoCount; // @synthesize basebandFlushedVideoCount=_basebandFlushedVideoCount;
@property(nonatomic) int basebandFlushCount; // @synthesize basebandFlushCount=_basebandFlushCount;
@property(readonly, nonatomic) unsigned int targetBitrate; // @synthesize targetBitrate=_targetBitrate;
@property(nonatomic) unsigned int videoSendingBitrate; // @synthesize videoSendingBitrate=_videoSendingBitrate;
@property(retain, nonatomic) AVCStatisticsCollector *statisticsCollector; // @synthesize statisticsCollector=_statisticsCollector;
- (void)updateLargeFrameSizeWithBandwidth:(unsigned int)arg1;	// IMP=0x0000000000134705
- (void)updateProbingLargeFrameSizeCap;	// IMP=0x000000000013464a
- (_Bool)isProbingLargeFrameRequiredAtTime:(double)arg1;	// IMP=0x0000000000134255
- (void)printLargeFrameStatsAtTime:(double)arg1 timestamp:(unsigned int)arg2 timeSinceLastProbingSequence:(double)arg3 frameSize:(unsigned int)arg4 wastedBytes:(unsigned int)arg5 fecRatio:(double)arg6 isFrameRequested:(_Bool)arg7;	// IMP=0x0000000000134096
- (void)scheduleProbingSequenceAtTime:(double)arg1;	// IMP=0x0000000000133f9c
- (_Bool)increaseFlushCountForVideoRefresh:(int)arg1 transactionID:(unsigned short)arg2;	// IMP=0x0000000000133f2b
- (void)recordVideoRefreshFrameWithTimestamp:(unsigned int)arg1 payloadType:(unsigned char)arg2 packetCount:(unsigned int)arg3 isKeyFrame:(_Bool)arg4;	// IMP=0x0000000000133e96
- (void)scheduleProbingSequenceWithFrameSize:(unsigned int)arg1 paddingBytes:(unsigned int)arg2 timestamp:(unsigned int)arg3 fecRatio:(double)arg4 isProbingSequenceScheduled:(_Bool *)arg5;	// IMP=0x0000000000133ce0
@property(readonly, nonatomic) unsigned int probingSequencePacketSize; // @synthesize probingSequencePacketSize=_probingSequencePacketSize;
@property(readonly, nonatomic) unsigned int probingSequencePacketCount; // @synthesize probingSequencePacketCount=_probingSequencePacketCount;
@property(readonly, nonatomic) unsigned int probingLargeFrameSize; // @synthesize probingLargeFrameSize=_probingLargeFrameSize;
- (_Bool)rampUpAudioFraction;	// IMP=0x0000000000133a3b
- (void)setTargetBitrate:(unsigned int)arg1;	// IMP=0x000000000013323c
- (_Bool)didMediaGetFlushedWithPayloadType:(unsigned char)arg1 transactionID:(unsigned short)arg2 packetDropped:(unsigned short)arg3 sequenceNumberArray:(unsigned short *)arg4;	// IMP=0x00000000001330dc
- (void)decreaseFlushCount:(int)arg1;	// IMP=0x0000000000132faa
- (void)pauseVideoByUser:(_Bool)arg1;	// IMP=0x00000000001325da
- (void)enableBasebandLogDump:(void *)arg1;	// IMP=0x00000000001306e6
- (void)dealloc;	// IMP=0x0000000000130664
- (id)initWithMediaQueue:(struct tagHANDLE *)arg1 delegate:(id)arg2;	// IMP=0x0000000000130526

@end

