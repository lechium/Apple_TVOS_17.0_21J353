//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCBasebandCongestionDetector, AVCRateControlFeedbackController, AVCStatisticsCollector, NSArray, NSError, NSMutableArray, NSObject, NSString, VCCallInfoBlob, VCConnection, VCDatagramChannelIDS, VCMediaKeyIndex, VCMediaStreamConfig, VCMediaStreamRateAdaptation, VCMediaStreamTransport, VCNetworkFeedbackController, VCRateSharingGroup, VCTransportSession, VCWeakObjectHolder;
@protocol OS_dispatch_queue, OS_dispatch_source, RTCPReportProvider, VCMediaStreamDelegate, VCMediaStreamNotification, VCMomentsCollectorDelegate;

__attribute__((visibility("hidden")))
@interface VCMediaStream
{
    NSObject<OS_dispatch_queue> *_delegateNotificationQueue;	// 88 = 0x58
    struct _opaque_pthread_mutex_t _streamLock;	// 96 = 0x60
    VCDatagramChannelIDS *_datagramChannel;	// 160 = 0xa0
    NSString *_idsDestination;	// 168 = 0xa8
    id <VCMediaStreamDelegate> _delegate;	// 176 = 0xb0
    struct tagVCMediaStreamDelegateRealtimeInstanceVTable _delegateFunctions;	// 184 = 0xb8
    id <VCMomentsCollectorDelegate> _momentsCollectorDelegate;	// 192 = 0xc0
    NSString *_callID;	// 200 = 0xc8
    NSString *_clientSessionID;	// 208 = 0xd0
    NSString *_clientName;	// 216 = 0xd8
    _Bool _isSRTPInitialized;	// 224 = 0xe0
    _Bool _useRandomTS;	// 225 = 0xe1
    _Bool _isReportingAgentOwner;	// 226 = 0xe2
    double _rtpTimeoutEnabledTime;	// 232 = 0xe8
    double _rtcpTimeoutEnabledTime;	// 240 = 0xf0
    double _decryptionTimeoutEnabledTime;	// 248 = 0xf8
    NSObject<OS_dispatch_source> *_rtcpSendHeartbeat;	// 256 = 0x100
    NSObject<OS_dispatch_source> *_timeoutHeartbeat;	// 264 = 0x108
    _Bool _rtcpHeartbeatCancelled;	// 272 = 0x110
    _Bool _rtcpDidTimeout;	// 273 = 0x111
    double _lastRTPTimeoutReportTime;	// 280 = 0x118
    double _lastRTCPTimeoutReportTime;	// 288 = 0x120
    double _lastDecryptionTimeoutReportTime;	// 296 = 0x128
    double _lastDecryptionMKMRecoveryTime;	// 304 = 0x130
    double _decryptionErrorStartTime;	// 312 = 0x138
    unsigned int _localSSRC;	// 320 = 0x140
    unsigned int _transportSessionID;	// 324 = 0x144
    int _state;	// 328 = 0x148
    int _clientPID;	// 332 = 0x14c
    VCWeakObjectHolder *_notificationDelegate;	// 336 = 0x150
    VCWeakObjectHolder *_rtcpReportProvider;	// 344 = 0x158
    int _operatingMode;	// 352 = 0x160
    struct _VCMediaStreamTransportSetupInfo _transportSetupInfo;	// 360 = 0x168
    NSMutableArray *_transportArray;	// 464 = 0x1d0
    CDUnknownFunctionPointerType _vcMediaCallback;	// 472 = 0x1d8
    struct tagVCMediaQueue *_mediaQueue;	// 480 = 0x1e0
    VCMediaKeyIndex *_lastReceivedMKI;	// 488 = 0x1e8
    VCCallInfoBlob *_remoteEndpointInfo;	// 496 = 0x1f0
    VCTransportSession *_transportSession;	// 504 = 0x1f8
    NSError *_cachedError;	// 512 = 0x200
    CDUnknownFunctionPointerType _notificationHandler;	// 520 = 0x208
    CDUnknownFunctionPointerType _packetEventHandler;	// 528 = 0x210
    struct tagVCNWConnectionMonitor *_nwMonitor;	// 536 = 0x218
    long long _streamToken;	// 544 = 0x220
    void *_mediaControlInfoGenerator;	// 552 = 0x228
    void *_oneToOneControlInfoGenerator;	// 560 = 0x230
    unsigned int _mediaControlInfoGeneratorType;	// 568 = 0x238
    AVCRateControlFeedbackController *_feedbackController;	// 576 = 0x240
    AVCRateControlFeedbackController *_oneToOneFeedbackController;	// 584 = 0x248
    _Bool _mediaControlInfoCallbacksRegistered;	// 592 = 0x250
    CDUnknownFunctionPointerType _statisticsHandler;	// 600 = 0x258
    VCNetworkFeedbackController *_networkFeedbackController;	// 608 = 0x260
    _Bool _isWRMinitialized;	// 616 = 0x268
    _Bool _isRTTBasedFIRThrottlingEnabled;	// 617 = 0x269
    _Bool _isServerPacketRetransmissionEnabled;	// 618 = 0x26a
    _Bool _isUplinkRetransmissionEnabled;	// 619 = 0x26b
    _Bool _isNWMonitorSignalEnabled;	// 620 = 0x26c
    VCMediaStreamRateAdaptation *_rateAdaptation;	// 624 = 0x270
    VCConnection *_connection;	// 632 = 0x278
    VCRateSharingGroup *_rateSharingGroup;	// 640 = 0x280
    NSArray *_compoundStreamIDs;	// 648 = 0x288
    _Bool _areStatisticsRegistered;	// 656 = 0x290
    AVCStatisticsCollector *_statisticsCollector;	// 664 = 0x298
    int _nwMonitorHandlerIndex;	// 672 = 0x2a0
    int _rttMonitorHandlerIndex;	// 676 = 0x2a4
    int _channelSequenceCountWithInactiveSlots;	// 680 = 0x2a8
    struct os_unfair_lock_s _nwMonitorLock;	// 684 = 0x2ac
    AVCBasebandCongestionDetector *_basebandCongestionDetector;	// 688 = 0x2b0
}

+ (_Bool)isSameSRTPKey:(id)arg1 newKey:(id)arg2;	// IMP=0x00100000002ce9f0
@property(nonatomic) struct tagVCMediaStreamDelegateRealtimeInstanceVTable delegateFunctions; // @synthesize delegateFunctions=_delegateFunctions;
@property(readonly, nonatomic) int state; // @synthesize state=_state;
@property(nonatomic, setter=setUplinkRetransmissionEnabled:) _Bool isUplinkRetransmissionEnabled; // @synthesize isUplinkRetransmissionEnabled=_isUplinkRetransmissionEnabled;
@property(retain, nonatomic) VCNetworkFeedbackController *networkFeedbackController; // @synthesize networkFeedbackController=_networkFeedbackController;
@property(copy) NSArray *compoundStreamIDs; // @synthesize compoundStreamIDs=_compoundStreamIDs;
@property(retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector; // @synthesize basebandCongestionDetector=_basebandCongestionDetector;
@property(readonly, nonatomic) NSArray *transportArray; // @synthesize transportArray=_transportArray;
@property(readonly, nonatomic) unsigned int mediaControlInfoGeneratorType; // @synthesize mediaControlInfoGeneratorType=_mediaControlInfoGeneratorType;
@property(readonly, nonatomic) void *mediaControlInfoGenerator; // @synthesize mediaControlInfoGenerator=_mediaControlInfoGenerator;
@property(readonly, retain, nonatomic) AVCRateControlFeedbackController *feedbackController; // @synthesize feedbackController=_feedbackController;
@property(readonly, nonatomic) long long streamToken; // @synthesize streamToken=_streamToken;
@property(nonatomic) int operatingMode; // @synthesize operatingMode=_operatingMode;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(readonly, nonatomic) unsigned int localSSRC; // @synthesize localSSRC=_localSSRC;
- (int)handleMediaCallbackNotification:(int)arg1 inData:(void *)arg2 outData:(void *)arg3;	// IMP=0x00000000002df847
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000002df7e6
- (_Bool)shouldReportNetworkInterfaceType;	// IMP=0x00000000002df7de
- (void)collectTxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000002df77d
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000002df71c
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;	// IMP=0x00000000002df6bb
@property(readonly, nonatomic) double rtcpHeartbeatLeeway;
@property(readonly, nonatomic) double lastReceivedRTCPPacketTime;
@property(readonly, nonatomic) double lastReceivedRTPPacketTime;
- (void)onRTCPTimeout;	// IMP=0x00000000002df537
- (void)onRTPTimeout;	// IMP=0x00000000002df4d6
- (void)onSendRTCPPacket;	// IMP=0x00000000002df475
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002df414
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002df3b3
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002df352
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002df2f1
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002df290
- (id)supportedPayloads;	// IMP=0x00000000002df22f
- (void)onCallIDChanged;	// IMP=0x00000000002df1ce
@property(nonatomic) id <VCMediaStreamNotification> notificationDelegate;
- (void)stopTimeoutHeartbeat;	// IMP=0x00000000002ded29
- (void)startTimeoutHeartbeat;	// IMP=0x00000000002de393
- (void)timeoutHeartbeat;	// IMP=0x00000000002ddf86
- (void)checkRTCPPacketTimeoutAgainstTime:(double)arg1 lastReceivedPacketTime:(double)arg2;	// IMP=0x00000000002dd6a0
- (void)checkRTPPacketTimeoutAgainstTime:(double)arg1 lastReceivedPacketTime:(double)arg2;	// IMP=0x00000000002dd3e0
- (double)computeNextTimoutWithEnabledTime:(double)arg1 timeoutInterval:(double)arg2 lastReceivedPacketTime:(double)arg3 currentTime:(double)arg4 lastTimeoutReportTime:(double)arg5;	// IMP=0x00000000002dd35e
- (void)resetTimeoutHeartbeatWithRTPTimeout:(double)arg1 rtcpTimeout:(double)arg2 decryptionTimeout:(double)arg3 currentTime:(double)arg4;	// IMP=0x00000000002dcf5a
- (void)resetTimeoutHeartbeatTimer:(unsigned long long)arg1;	// IMP=0x00000000002dcf31
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x00000000002dced0
- (void)destroyNWMonitor;	// IMP=0x00000000002dce82
- (void)createNWMonitor;	// IMP=0x00000000002dce12
- (void)stopRTCPSendHeartbeat;	// IMP=0x00000000002dcc20
- (void)startRTCPSendHeartbeat;	// IMP=0x00000000002dc42a
- (void)rtcpSendHeartbeat;	// IMP=0x00000000002dc123
- (void)resetRTCPSendHeartbeatTimer:(unsigned long long)arg1;	// IMP=0x00000000002dc057
- (unsigned int)getExtendedSequenceNumberForSequenceNumber:(unsigned short)arg1;	// IMP=0x00000000002dc028
- (unsigned int)getRTCPReportNTPTimeMiddle32ForReportId:(unsigned char)arg1;	// IMP=0x00000000002dbff9
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000002dbc5f
@property(nonatomic) id <RTCPReportProvider> rtcpReportProvider;
- (struct __CFDictionary *)composeClientUserInfo:(int)arg1;	// IMP=0x00000000002dbb7b
- (void)setRtcpSendInterval:(double)arg1;	// IMP=0x00000000002db640
- (void)setDecryptionTimeOutInterval:(double)arg1;	// IMP=0x00000000002db354
- (void)setRtcpTimeOutInterval:(double)arg1;	// IMP=0x00000000002db056
- (void)setRtpTimeOutInterval:(double)arg1;	// IMP=0x00000000002dad58
- (void)setDecryptionTimeOutEnabled:(_Bool)arg1;	// IMP=0x00000000002daa5e
- (void)setRtcpTimeOutEnabled:(_Bool)arg1;	// IMP=0x00000000002da764
- (void)setRtpTimeOutEnabled:(_Bool)arg1;	// IMP=0x00000000002da46a
- (void)processDecryptionTimeoutSettingChange;	// IMP=0x00000000002da414
- (void)processRTCPTimeoutSettingChange;	// IMP=0x00000000002da3be
- (void)processRTPTimeoutSettingChange;	// IMP=0x00000000002da368
- (_Bool)isRTCPSendEnabled;	// IMP=0x00000000002da33d
- (_Bool)isDecryptionTimeoutEnabled;	// IMP=0x00000000002da312
- (_Bool)isRTCPTimeoutEnabled;	// IMP=0x00000000002da2e7
- (_Bool)isRTPTimeoutEnabled;	// IMP=0x00000000002da2bc
- (void)setRtcpEnabled:(_Bool)arg1;	// IMP=0x00000000002da031
- (void)sendControlPacketWithParameters:(struct _RTCP_SEND_CONTROL_PARAMETERS *)arg1;	// IMP=0x00000000002d9ed1
- (long long)streamDirection;	// IMP=0x00000000002d9d4e
- (void)setStreamDirection:(long long)arg1;	// IMP=0x00000000002d9ac8
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x00000000002d9710
- (void)setPause:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000002d8ffe
- (id)getInvalidParamErrorForSetPause:(_Bool)arg1 didSucceed:(_Bool)arg2;	// IMP=0x00000000002d8be3
- (id)setPause:(_Bool)arg1;	// IMP=0x00000000002d8841
- (void)stopInternalWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002d7d44
- (id)stop;	// IMP=0x00000000002d7800
- (void)stopMediaTransports;	// IMP=0x00000000002d76fd
- (_Bool)startMediaTransportsWithError:(id *)arg1;	// IMP=0x00000000002d754d
- (void)notifyDelegateDidReceiveRTCPPackets:(struct _RTCPPacketList *)arg1;	// IMP=0x00000000002d7377
- (void)handleStartDidSucceed:(_Bool)arg1 withError:(id)arg2;	// IMP=0x00000000002d70c1
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x00000000002d70bb
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x00000000002d70b5
- (void)setState:(int)arg1;	// IMP=0x00000000002d6e07
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002d64aa
- (id)start;	// IMP=0x00000000002d611f
- (_Bool)setStreamConfig:(id)arg1 withError:(id *)arg2;	// IMP=0x00000000002d5989
- (void)setMediaQueueInStreamConfig:(id)arg1;	// IMP=0x00000000002d56b9
- (void)setMediaQueueInRateControlConfig:(id)arg1;	// IMP=0x00000000002d5670
- (id)getSharingGroupWithPolicy:(unsigned int)arg1;	// IMP=0x00000000002d5623
- (_Bool)updateRemoteAddressWithConfig:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002d526c
- (int)updateConnectionWithConfig:(id)arg1;	// IMP=0x00000000002d4bf1
- (void)didEncryptionKeyRollTimeout;	// IMP=0x00000000002d4beb
- (void)resetDecryptionTimeout;	// IMP=0x00000000002d4a2a
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x00000000002d43d5
- (void)unregisterMediaControlInfoGenerator;	// IMP=0x00000000002d3f95
- (void)registerCallbacksForMediaControlInfoGenerator:(void *)arg1 forDirection:(long long)arg2 options:(unsigned int)arg3;	// IMP=0x00000000002d3b78
- (void)createLocalMediaControlInfoGeneratorWithType:(unsigned int)arg1 version:(unsigned char)arg2;	// IMP=0x00000000002d3a0f
- (id)getMediaStreamConfigForControlInfoGenerator:(id)arg1;	// IMP=0x00000000002d38a5
- (void)registerMediaControlInfoGeneratorWithConfigs:(id)arg1;	// IMP=0x00000000002d2d7d
- (_Bool)shouldStopReportingTimer;	// IMP=0x00000000002d2d5a
- (void)unregisterWRMCallback;	// IMP=0x00000000002d2cd6
- (void)initializeWRMUsingRtpHandle:(struct tagHANDLE *)arg1;	// IMP=0x00000000002d2c0b
- (void)registerStatistics:(id)arg1;	// IMP=0x00000000002d2b0d
- (int)registerStatisticsHandler:(id)arg1 statisticType:(int)arg2;	// IMP=0x00000000002d2930
- (void)unregisterStatistics;	// IMP=0x00000000002d28bd
- (id)createTransportWithStreamConfig:(id)arg1 ssrc:(unsigned int)arg2;	// IMP=0x00000000002d2569
- (struct tagHANDLE *)createRTPHandleWithStreamConfig:(id)arg1 payloadType:(int)arg2 localSSRC:(unsigned int)arg3;	// IMP=0x00000000002d20f9
- (char *)streamStateToString:(int)arg1;	// IMP=0x00000000002d20d3
- (void)unlock;	// IMP=0x00000000002d20bc
- (void)lock;	// IMP=0x00000000002d20a5
- (void)dealloc;	// IMP=0x00000000002d1d41
- (void)setupMediaStream;	// IMP=0x00000000002d19bb
- (id)initWithTransportSessionID:(unsigned int)arg1 localSSRC:(unsigned int)arg2;	// IMP=0x00000000002d1929
- (id)initWithTransportSessionID:(unsigned int)arg1;	// IMP=0x00000000002d1899
- (id)init;	// IMP=0x00000000002d181b
- (void)collectChannelSequenceMetrics:(id)arg1;	// IMP=0x00000000002d155a
- (void)updateTransportsWithConstantConnectionOverhead:(unsigned int)arg1;	// IMP=0x00000000002d1432
- (void)reportTransportInfo;	// IMP=0x00000000002d12ff
- (id)setupRTPWithIPInfo:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002d10ee
- (_Bool)initializeTransportSetupInfoWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002d0c3c
- (_Bool)initializeTransportSessionWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002d0bcf
- (id)setupRTPWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002d09a1
- (id)setupRTPForIDS;	// IMP=0x00000000002d0795
- (id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002d0637
- (void)setupCallbacksWithNWConnectionMonitor:(struct tagVCNWConnectionMonitor *)arg1;	// IMP=0x00000000002d059a
- (_Bool)setupNWConnectionWithID:(id)arg1;	// IMP=0x00000000002cff4b
- (void)dupNWConnectionBackingSocket:(int *)arg1;	// IMP=0x00000000002cfd7a
- (id)setupRTPWithNWConnection:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002cfa39
- (_Bool)initializeTransportSessionWithRTPNWConnectionID:(id)arg1 rtcpNWConnectionID:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002cf844
- (_Bool)shouldUseNWConnectionBackingSocket;	// IMP=0x00000000002cf83c
- (void)cleanupNWConnection:(id *)arg1;	// IMP=0x00000000002cf801
- (void)initializeTransportSetupInfoWithRTPSocket:(int)arg1 RTCPSocket:(int)arg2;	// IMP=0x00000000002cf6df
- (void)initializeTransportSetupInfoWithSocketDictionary:(id)arg1;	// IMP=0x00000000002cf66d
- (_Bool)initializeTransportSessionWithSocketDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002cf5ca
- (void)handleTransportSessionEvent:(unsigned int)arg1 info:(id)arg2;	// IMP=0x00000000002cf342
- (_Bool)initializeTransportSetupInfoWithTransportSession:(id *)arg1;	// IMP=0x00000000002cf13c
- (id)setupRTPWithSocketDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002cefa7
- (void)decryptionStatusChanged:(_Bool)arg1;	// IMP=0x00000000002cedb2
@property(readonly, nonatomic) _Bool isSendingMedia;
@property(readonly, nonatomic) VCMediaStreamConfig *oneToOneStreamConfig;
@property(readonly, nonatomic) VCMediaStreamConfig *defaultStreamConfig;
@property(readonly, nonatomic) VCMediaStreamTransport *defaultTransport;
@property(nonatomic) id <VCMomentsCollectorDelegate> momentsCollectorDelegate; // @synthesize momentsCollectorDelegate=_momentsCollectorDelegate;
@property(nonatomic) id <VCMediaStreamDelegate> delegate;
- (id)copyDelegate;	// IMP=0x00000000002cea26

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

