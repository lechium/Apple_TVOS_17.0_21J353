//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIKeyboardLayout.h"

@class CADisplayLink, NSArray, NSDate, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, TUIKeyplaneView, UIButton, UIDelayedAction, UIGestureKeyboardIntroduction, UIImageView, UIKBBackgroundView, UIKBKeyViewAnimator, UIKBKeyplaneView, UIKBRenderConfig, UIKBResizingKeyplaneCoordinator, UIKBTree, UIKeyboardEmojiKeyDisplayController, UIKeyboardPathEffectView, UIKeyboardPinchGestureRecognizer, UIKeyboardSplitTransitionView, UISwipeGestureRecognizer, UIView, _UIKeyboardTypingSpeedLogger;
@protocol UIKeyboardKeyplaneTransitionDelegate, UIKeyboardLayoutStarDelegate, UITextCursorAssertion;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;	// 192 = 0xc0
    UIKBTree *_keyplane;	// 200 = 0xc8
    NSString *_keyboardName;	// 208 = 0xd0
    NSString *_keyplaneName;	// 216 = 0xd8
    long long _appearance;	// 224 = 0xe0
    UIKBTree *_activeKey;	// 232 = 0xe8
    UIKBTree *_inactiveLanguageIndicator;	// 240 = 0xf0
    UIKBKeyplaneView *_keyplaneView;	// 248 = 0xf8
    UIKBBackgroundView *_backgroundView;	// 256 = 0x100
    UIKBKeyViewAnimator *_keyViewAnimator;	// 264 = 0x108
    UIKeyboardEmojiKeyDisplayController *_emojiKeyManager;	// 272 = 0x110
    double _prevTouchUpTime;	// 280 = 0x118
    double _prevTouchUpFinishedTime;	// 288 = 0x120
    double _prevTouchDownTime;	// 296 = 0x128
    unsigned long long _prevUpActions;	// 304 = 0x130
    NSMutableDictionary *_keyboards;	// 312 = 0x138
    NSMutableDictionary *_allKeyplaneViews;	// 320 = 0x140
    NSMutableSet *_allKeyplaneKeycaps;	// 328 = 0x148
    NSMutableSet *_validInputStrings;	// 336 = 0x150
    NSString *_localizedInputKey;	// 344 = 0x158
    int _preferredTrackingChangeCount;	// 352 = 0x160
    int _shiftTrackingChangeCount;	// 356 = 0x164
    NSMutableSet *_accentInfo;	// 360 = 0x168
    NSMutableSet *_hasAccents;	// 368 = 0x170
    id _spaceTarget;	// 376 = 0x178
    SEL _spaceAction;	// 384 = 0x180
    SEL _spaceLongAction;	// 392 = 0x188
    id _returnTarget;	// 400 = 0x190
    SEL _returnAction;	// 408 = 0x198
    SEL _returnLongAction;	// 416 = 0x1a0
    id _deleteTarget;	// 424 = 0x1a8
    SEL _deleteAction;	// 432 = 0x1b0
    SEL _deleteLongAction;	// 440 = 0x1b8
    _Bool _shift;	// 448 = 0x1c0
    _Bool _autoshift;	// 449 = 0x1c1
    _Bool _settingShift;	// 450 = 0x1c2
    _Bool _holdingShift;	// 451 = 0x1c3
    _Bool _didLongPress;	// 452 = 0x1c4
    NSString *_preTouchKeyplaneName;	// 456 = 0x1c8
    _Bool _revertKeyplaneAfterTouch;	// 464 = 0x1d0
    _Bool _wasShifted;	// 465 = 0x1d1
    _Bool _swipeDetected;	// 466 = 0x1d2
    _Bool _showIntlKey;	// 467 = 0x1d3
    _Bool _showDictationKey;	// 468 = 0x1d4
    _Bool _suppressDeactivateKeys;	// 469 = 0x1d5
    _Bool _suppressShiftKeyplaneAnimation;	// 470 = 0x1d6
    _Bool _isTrackpadMode;	// 471 = 0x1d7
    _Bool _shiftLockReady;	// 472 = 0x1d8
    double _shiftLockFirstTapTime;	// 480 = 0x1e0
    UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 488 = 0x1e8
    UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 496 = 0x1f0
    UISwipeGestureRecognizer *_upSwipeRecognizer;	// 504 = 0x1f8
    UIKeyboardPinchGestureRecognizer *_pinchGestureRecognizer;	// 512 = 0x200
    UIKeyboardSplitTransitionView *_transitionView;	// 520 = 0x208
    double _initialSplitProgress;	// 528 = 0x210
    double _finalSplitProgress;	// 536 = 0x218
    double _autoSplitLastUpdate;	// 544 = 0x220
    double _autoSplitElapsedTime;	// 552 = 0x228
    CADisplayLink *_displayLink;	// 560 = 0x230
    _Bool _ghostKeysEnabled;	// 568 = 0x238
    UIDelayedAction *_delayedCentroidUpdate;	// 576 = 0x240
    _Bool _isRebuilding;	// 584 = 0x248
    long long _currentHandBias;	// 592 = 0x250
    NSString *_layoutTag;	// 600 = 0x258
    _Bool _preRotateShift;	// 608 = 0x260
    NSString *_preRotateKeyplaneName;	// 616 = 0x268
    _Bool _preRotateTrackpadMode;	// 624 = 0x270
    UIDelayedAction *_multitapAction;	// 632 = 0x278
    _Bool _unshiftAfterMultitap;	// 640 = 0x280
    int _multitapCount;	// 644 = 0x284
    UIKBTree *_multitapKey;	// 648 = 0x288
    UIView *_flickPopupView;	// 656 = 0x290
    NSMutableDictionary *_compositeImages;	// 664 = 0x298
    NSTimer *_flickPopuptimer;	// 672 = 0x2a0
    id _touchInfo;	// 680 = 0x2a8
    UIView *_dimKeyboardImageView;	// 688 = 0x2b0
    _Bool _keyboardImageViewIsDim;	// 696 = 0x2b8
    _Bool _isOutOfBounds;	// 697 = 0x2b9
    UIDelayedAction *_dismissModalDoubleConsonantKeys;	// 704 = 0x2c0
    _Bool _inDealloc;	// 712 = 0x2c8
    NSMutableSet *_keysUnderIndicator;	// 720 = 0x2d0
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;	// 728 = 0x2d8
    UIKBRenderConfig *_passcodeRenderConfig;	// 736 = 0x2e0
    long long _setKeyplaneViewCount;	// 744 = 0x2e8
    _Bool _inputTraitsPreventInitialReuse;	// 752 = 0x2f0
    _Bool _settingFloat;	// 753 = 0x2f1
    NSMutableSet *_leftKeySet;	// 760 = 0x2f8
    NSMutableSet *_rightKeySet;	// 768 = 0x300
    struct CGPoint _leftDriftOffset;	// 776 = 0x308
    struct CGPoint _rightDriftOffset;	// 792 = 0x318
    NSMutableArray *_leftSideReachability;	// 808 = 0x328
    NSMutableArray *_rightSideReachability;	// 816 = 0x330
    NSNumber *_homeRowHint;	// 824 = 0x338
    double _touchDownTimeSpan;	// 832 = 0x340
    NSDate *_prevTouchMoreKeyTime;	// 840 = 0x348
    NSDate *_prevProgressiveCandidateRequestTime;	// 848 = 0x350
    NSTimer *_progressiveCandidateUpdateTimer;	// 856 = 0x358
    NSString *_lastInputMode;	// 864 = 0x360
    _Bool _pendingDictationReload;	// 872 = 0x368
    _Bool _hasPeekedGestureKey;	// 873 = 0x369
    _Bool _lastInputIsGestureKey;	// 874 = 0x36a
    UIGestureKeyboardIntroduction *_gestureKeyboardIntroduction;	// 880 = 0x370
    _Bool _dictationUsingServerManualEndpointing;	// 888 = 0x378
    _Bool _splitTransitionNeedsRebuild;	// 889 = 0x379
    _Bool _selectedVariantIndexChanged;	// 890 = 0x37a
    NSMutableDictionary *_extendedTouchInfoMap;	// 896 = 0x380
    UIKBResizingKeyplaneCoordinator *_resizingKeyplaneCoordinator;	// 904 = 0x388
    UIButton *_biasEscapeButton;	// 912 = 0x390
    NSLayoutConstraint *_biasEscapeButtonLeftConstraint;	// 920 = 0x398
    NSLayoutConstraint *_biasEscapeButtonRightConstraint;	// 928 = 0x3a0
    NSMutableSet *_keyplaneTransformations;	// 936 = 0x3a8
    UIImageView *_pathEffectGlowView;	// 944 = 0x3b0
    UIKeyboardPathEffectView *_pathEffectView;	// 952 = 0x3b8
    NSArray *_pathEffectViewConstraints;	// 960 = 0x3c0
    _Bool _isContinuousPathUnderway;	// 968 = 0x3c8
    UIView *_keyplaneTransformationAreaView;	// 976 = 0x3d0
    _Bool _externalDictationAndInternationalKeys;	// 984 = 0x3d8
    _Bool _showsPunctuationKeysOnPrimaryKeyplane;	// 985 = 0x3d9
    TUIKeyplaneView *_liveKeyplaneView;	// 992 = 0x3e0
    _Bool _layoutSupportsCrescendo;	// 1000 = 0x3e8
    NSArray *_liveKeyplaneConstraints;	// 1008 = 0x3f0
    _Bool _preventPaddlesForPointerTouches;	// 1016 = 0x3f8
    _Bool _muteNextKeyClickSound;	// 1017 = 0x3f9
    int playKeyClickSoundOn;	// 1020 = 0x3fc
    UIKBRenderConfig *_renderConfig;	// 1024 = 0x400
    UIView *_modalDisplayView;	// 1032 = 0x408
    id <UIKeyboardLayoutStarDelegate> _delegate;	// 1040 = 0x410
    double _lastTwoFingerTapTimestamp;	// 1048 = 0x418
    id <UITextCursorAssertion> _blinkAssertion;	// 1056 = 0x420
    id <UIKeyboardKeyplaneTransitionDelegate> _splitKeyplaneTransitionDelegate;	// 1064 = 0x428
}

+ (id)sharedPunctuationCharacterSet;	// IMP=0x0010000000abd5c7
+ (id)sharedRivenKeyplaneGenerator;	// IMP=0x0010000000a9b1eb
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000a958ef
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000a95627
+ (id)keyboardFromFactoryWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000a9535c
+ (void)accessibilitySensitivityChanged;	// IMP=0x0010000000a94a44
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x0010000000a943fd
- (void).cxx_destruct;	// IMP=0x0000000000ad06bb
@property(nonatomic) __weak id <UIKeyboardKeyplaneTransitionDelegate> splitKeyplaneTransitionDelegate; // @synthesize splitKeyplaneTransitionDelegate=_splitKeyplaneTransitionDelegate;
@property(retain, nonatomic) id <UITextCursorAssertion> blinkAssertion; // @synthesize blinkAssertion=_blinkAssertion;
@property(nonatomic) _Bool muteNextKeyClickSound; // @synthesize muteNextKeyClickSound=_muteNextKeyClickSound;
@property(nonatomic) _Bool preventPaddlesForPointerTouches; // @synthesize preventPaddlesForPointerTouches=_preventPaddlesForPointerTouches;
@property(nonatomic) double lastTwoFingerTapTimestamp; // @synthesize lastTwoFingerTapTimestamp=_lastTwoFingerTapTimestamp;
@property(nonatomic) id <UIKeyboardLayoutStarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *modalDisplayView; // @synthesize modalDisplayView=_modalDisplayView;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(readonly, nonatomic) _Bool showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) _Bool showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
@property(nonatomic) _Bool didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) _Bool autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) _Bool shift; // @synthesize shift=_shift;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (void)typingStyleEstimator:(id)arg1 didChangeTypingStyleEstimate:(unsigned long long)arg2;	// IMP=0x0000000000ad033b
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x0000000000ad01fb
- (_Bool)is10KeyRendering;	// IMP=0x0000000000ad0183
- (_Bool)isEmojiKeyplane;	// IMP=0x0000000000ad013e
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x0000000000ad00b8
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x0000000000ad0073
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x0000000000acfef5
- (id)currentKeyplaneView;	// IMP=0x0000000000acfee0
- (id)currentKeyplane;	// IMP=0x0000000000acfecb
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x0000000000acfd9b
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x0000000000acfa41
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x0000000000acf8b3
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;	// IMP=0x0000000000acf649
- (void)switchKeyplane:(id)arg1;	// IMP=0x0000000000acf57e
- (void)changeToKeyplane:(id)arg1;	// IMP=0x0000000000acf4b0
- (id)keyplaneNamed:(id)arg1;	// IMP=0x0000000000acf436
- (id)keyplaneForKey:(id)arg1;	// IMP=0x0000000000acf3bc
- (id)baseKeyForString:(id)arg1;	// IMP=0x0000000000aceaf2
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x0000000000acea16
- (_Bool)shouldRetestTouchDraggedFromKey:(id)arg1;	// IMP=0x0000000000acea01
- (void)didRotate;	// IMP=0x0000000000ace808
- (void)willRotate;	// IMP=0x0000000000ace6ff
- (void)updateKeyCentroids;	// IMP=0x0000000000acdd8f
- (void)divideKeysIntoLeft:(id)arg1 right:(id)arg2;	// IMP=0x0000000000acd6bd
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x0000000000acd694
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x0000000000acd656
- (void)updateUndoKeyState;	// IMP=0x0000000000acd57a
- (void)setMultitapReverseKeyState;	// IMP=0x0000000000acd3d5
- (void)updateShiftKeyState;	// IMP=0x0000000000accb5b
- (int)stateForShiftKey:(id)arg1;	// IMP=0x0000000000acc8af
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000acc888
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000acc861
- (_Bool)isKanaPlane;	// IMP=0x0000000000acc844
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000acc81d
- (_Bool)ignoresShiftState;	// IMP=0x0000000000acc7f6
- (_Bool)usesAutoShift;	// IMP=0x0000000000acc7cf
- (void)upActionShift;	// IMP=0x0000000000acc6bc
- (void)downActionShiftWithKey:(id)arg1;	// IMP=0x0000000000acc3af
- (void)refreshDualStringKeys;	// IMP=0x0000000000acc218
- (unsigned long long)upActionFlagsForKey:(id)arg1;	// IMP=0x0000000000acbe14
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000acb875
- (_Bool)keyHasAccentedVariants:(id)arg1;	// IMP=0x0000000000acb466
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x0000000000acb2b7
- (id)activeTouchInfoForShift;	// IMP=0x0000000000acb08f
- (id)touchInfoForKey:(id)arg1;	// IMP=0x0000000000acae9a
- (void)clearAllTouchInfo;	// IMP=0x0000000000acad3e
- (void)clearInfoForTouch:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000acac56
- (void)clearInfoForTouch:(id)arg1;	// IMP=0x0000000000acac42
- (void)cancelTouchIfNecessaryForInfo:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000aca952
- (id)generateInfoForTouch:(id)arg1;	// IMP=0x0000000000aca873
- (id)infoForTouch:(id)arg1;	// IMP=0x0000000000aca811
- (id)infoForTouchUUID:(id)arg1;	// IMP=0x0000000000aca7d8
- (void)swipeDetected:(id)arg1;	// IMP=0x0000000000aca728
- (void)uninstallGestureRecognizers;	// IMP=0x0000000000aca589
- (void)installGestureRecognizers;	// IMP=0x0000000000aca583
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000aca562
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000aca491
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000aca354
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000aca1f7
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x0000000000ac9c97
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000ac9c80
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000ac8c64
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000ac7b1f
- (_Bool)shouldSendStringForFlick:(id)arg1;	// IMP=0x0000000000ac7986
- (_Bool)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;	// IMP=0x0000000000ac7876
- (void)presentModalDisplayForKey:(id)arg1;	// IMP=0x0000000000ac75aa
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;	// IMP=0x0000000000ac4911
- (void)_recordKeystrokeStatisticForKeyPress;	// IMP=0x0000000000ac48b4
- (_Bool)shouldSendTouchUpToInputManager:(id)arg1;	// IMP=0x0000000000ac478e
- (void)handleKeyboardMenusForTouch:(id)arg1;	// IMP=0x0000000000ac43af
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000ac36b2
- (_Bool)shouldRetestTouchUp:(id)arg1;	// IMP=0x0000000000ac310d
- (void)handleDelayedCentroidUpdate;	// IMP=0x0000000000ac2f90
- (void)cancelDelayedCentroidUpdate;	// IMP=0x0000000000ac2f58
- (void)refreshGhostKeyState;	// IMP=0x0000000000ac2e92
- (_Bool)performSpaceAction;	// IMP=0x0000000000ac2e31
- (_Bool)performReturnAction;	// IMP=0x0000000000ac2dd0
- (void)resetPanAlternativesForEndedTouch:(id)arg1;	// IMP=0x0000000000ac2d3d
- (void)updatePanAlternativesForTouchInfo:(id)arg1;	// IMP=0x0000000000ac2980
- (void)updateSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;	// IMP=0x0000000000ac253f
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x0000000000ac2401
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;	// IMP=0x0000000000ac0e84
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abf4a0
- (void)touchDragged:(id)arg1;	// IMP=0x0000000000abf38e
- (_Bool)touchPassesDragThreshold:(id)arg1;	// IMP=0x0000000000abf01f
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x0000000000abef15
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abedf6
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000abdee8
- (_Bool)showGestureKeyboardIntroductionIfNeeded;	// IMP=0x0000000000abdc29
- (_Bool)shouldShowGestureKeyboardIntroduction;	// IMP=0x0000000000abdb36
- (id)synthesizeTouchUpEventForKey:(id)arg1;	// IMP=0x0000000000abda0b
- (id)keyplaneNameForRevertAfterTouch;	// IMP=0x0000000000abd998
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000abd76c
- (void)incrementPunctuationIfNeeded:(id)arg1;	// IMP=0x0000000000abd62c
- (_Bool)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;	// IMP=0x0000000000abd57a
- (void)touchDownWithKey:(id)arg1 withTouchInfo:(id)arg2 atPoint:(struct CGPoint)arg3 executionContext:(id)arg4;	// IMP=0x0000000000abc136
- (void)_cleanUpBlinkAssertionIfNecessary;	// IMP=0x0000000000abc0dc
- (_Bool)isKeyScriptSwitchKey:(id)arg1;	// IMP=0x0000000000abc056
- (_Bool)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000abbf9c
- (void)playKeyClickSoundOnUpForKey:(id)arg1;	// IMP=0x0000000000abbf8a
- (void)playKeyClickSoundOnDownForKey:(id)arg1;	// IMP=0x0000000000abbf3f
- (void)playKeyClickSoundForKey:(id)arg1;	// IMP=0x0000000000abbe3a
- (void)playKeyReleaseSoundForKey:(id)arg1;	// IMP=0x0000000000abbe34
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abb749
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abaeea
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;	// IMP=0x0000000000aba941
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000aba8f1
- (_Bool)_pointAllowedInStaticHitBuffer:(struct CGPoint)arg1;	// IMP=0x0000000000aba646
- (double)hitBuffer;	// IMP=0x0000000000aba5b5
- (struct CGRect)_paddedKeyUnionFrame;	// IMP=0x0000000000aba2e7
- (_Bool)_handleTouchForEmojiInputView;	// IMP=0x0000000000aba1cf
- (void)prepareForFloatingTransition:(_Bool)arg1;	// IMP=0x0000000000aba0e6
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000ab9f36
- (void)_autoSplit:(id)arg1;	// IMP=0x0000000000ab9df4
- (void)setSplitProgress:(double)arg1;	// IMP=0x0000000000ab9c87
- (void)pinchHandler:(id)arg1;	// IMP=0x0000000000ab9bf1
- (void)pinchDidConsumeTouch:(id)arg1;	// IMP=0x0000000000ab9b4e
- (void)didDetectPinchWithSeparation:(double)arg1;	// IMP=0x0000000000ab9aa9
- (_Bool)pinchCanBeginWithTouches:(id)arg1 andScale:(double)arg2;	// IMP=0x0000000000ab97c1
- (_Bool)pinchSplitGestureEnabled;	// IMP=0x0000000000ab977e
- (_Bool)pinchDetected;	// IMP=0x0000000000ab9761
- (void)finishSplitTransitionWithProgress:(double)arg1;	// IMP=0x0000000000ab9743
- (void)finishSplitTransitionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000ab946b
- (void)finishSplitTransition;	// IMP=0x0000000000ab9457
- (void)finishSplitWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000ab9011
- (void)showSplitTransitionView:(_Bool)arg1;	// IMP=0x0000000000ab8e63
- (void)prepareForSplitTransition;	// IMP=0x0000000000ab8d1a
- (id)splitTransitionDelegate;	// IMP=0x0000000000ab8c14
- (id)hostViewForResizingKeyplane:(id)arg1;	// IMP=0x0000000000ab8c0b
- (void)resizeKeyplaneAndRedraw:(_Bool)arg1;	// IMP=0x0000000000ab85af
- (_Bool)keyplaneSupportsResizingGesture;	// IMP=0x0000000000ab8576
- (_Bool)keyplaneUsesResizingOffset;	// IMP=0x0000000000ab8440
- (void)_didTapBiasEscapeButton:(id)arg1;	// IMP=0x0000000000ab8393
- (void)_setBiasEscapeButtonVisible:(_Bool)arg1;	// IMP=0x0000000000ab7caa
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x0000000000ab7b92
- (long long)currentHandBias;	// IMP=0x0000000000ab7ad2
- (double)biasedKeyboardWidthRatio;	// IMP=0x0000000000ab7a53
- (void)calculateReachabilityScoreWithKey:(id)arg1 keyError:(struct CGPoint)arg2;	// IMP=0x0000000000ab7495
- (void)resetHRRLayoutState;	// IMP=0x0000000000ab7454
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x0000000000ab73ff
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x0000000000ab73e2
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x0000000000ab6fe1
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x0000000000ab6e8c
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x0000000000ab6d37
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x0000000000ab6bf9
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x0000000000ab6bdf
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x0000000000ab6990
- (id)handRestRecognizerGetHomeRowHint;	// IMP=0x0000000000ab67ce
- (id)getSortedKeysForDisplayRowHint:(int)arg1;	// IMP=0x0000000000ab64db
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x0000000000ab601a
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000ab5dbf
- (void)layoutSubviews;	// IMP=0x0000000000ab5cc2
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000ab5c91
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000ab5c89
- (void)fadeActivationIndicatorWithDuration:(double)arg1 withDelay:(double)arg2;	// IMP=0x0000000000ab5c83
- (id)activationIndicatorView;	// IMP=0x0000000000ab3ef0
- (void)setHideKeysUnderIndicator:(_Bool)arg1;	// IMP=0x0000000000ab3e3e
- (_Bool)shouldShowIndicator;	// IMP=0x0000000000ab3dcc
- (void)showPopupVariantsForKey:(id)arg1;	// IMP=0x0000000000ab22a1
- (void)preparePopupVariantsForKey:(id)arg1 onKeyplane:(id)arg2;	// IMP=0x0000000000ab21b2
- (id)_variantsOfCurrencyKey:(id)arg1 language:(id)arg2;	// IMP=0x0000000000ab1f21
- (id)_variantsByAppendingDualStringKey:(id)arg1 toVariants:(id)arg2;	// IMP=0x0000000000ab1b7f
- (id)_appendingSecondaryStringToVariantsTop:(id)arg1 secondaryString:(id)arg2 withDirection:(id)arg3;	// IMP=0x0000000000ab1aa1
- (id)_keyplaneVariantsKeyForString:(id)arg1;	// IMP=0x0000000000ab1a16
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x0000000000ab175c
- (void)longPressAction;	// IMP=0x0000000000ab08e5
- (void)showMenu:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000ab0813
- (_Bool)shouldShowInternationalMenuForKey:(id)arg1;	// IMP=0x0000000000ab07a6
- (_Bool)isLongPressedKey:(id)arg1;	// IMP=0x0000000000ab06f3
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x0000000000ab0520
- (void)restoreDefaultsForAllKeys;	// IMP=0x0000000000ab04d6
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x0000000000ab040e
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000ab03d9
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000ab03a4
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000ab031b
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000aafc3b
- (void)updateLayoutTags;	// IMP=0x0000000000aaf50d
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (void)didClearInput;	// IMP=0x0000000000aaf456
- (void)touchMultitapTimer;	// IMP=0x0000000000aaf378
- (void)cancelMultitapTimer;	// IMP=0x0000000000aaf340
- (_Bool)isMultitapKey:(id)arg1;	// IMP=0x0000000000aaf259
- (void)handleMultitapTimerFired;	// IMP=0x0000000000aaf0dc
- (void)multitapExpired;	// IMP=0x0000000000aaf08a
- (void)endMultitapForKey:(id)arg1;	// IMP=0x0000000000aaf069
- (void)multitapInterrupted;	// IMP=0x0000000000aaee76
- (_Bool)canMultitap;	// IMP=0x0000000000aaedc7
- (id)multitapForwardKeys;	// IMP=0x0000000000aaeda3
- (id)multitapCompleteKeys;	// IMP=0x0000000000aaed7f
- (id)activeMultitapCompleteKey;	// IMP=0x0000000000aaea40
- (_Bool)hasAccentKey;	// IMP=0x0000000000aae9fb
- (_Bool)hasCandidateKeys;	// IMP=0x0000000000aae9b6
- (id)candidateList;	// IMP=0x0000000000aae8fc
- (void)logHandwritingData;	// IMP=0x0000000000aae82e
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;	// IMP=0x0000000000aae749
- (void)clearHandwritingStrokesIfNeededAndNotify:(_Bool)arg1;	// IMP=0x0000000000aae666
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 inputFlags:(int)arg3;	// IMP=0x0000000000aadfe4
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 touchInfo:(id)arg3 inputFlags:(int)arg4;	// IMP=0x0000000000aadf0f
- (id)currentRepresentedStringForDualDisplayKey:(id)arg1;	// IMP=0x0000000000aadd76
- (void)updatePhysicalKeyboardEvent:(id)arg1 withMarkedInput:(id)arg2;	// IMP=0x0000000000aada8f
- (_Bool)isDeadkeyInput:(id)arg1;	// IMP=0x0000000000aada1f
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;	// IMP=0x0000000000aacec3
- (void)playKeyFeedbackIfNecessaryForTouchDownOnKey:(id)arg1 touchInfo:(id)arg2;	// IMP=0x0000000000aacdaa
- (id)unprocessedTouchEventsForTouchInfo:(id)arg1 touchStage:(int)arg2 forcedKeyCode:(int)arg3;	// IMP=0x0000000000aaca41
- (int)keycodeForKey:(id)arg1;	// IMP=0x0000000000aac9cb
- (_Bool)shouldIgnoreDistantKey;	// IMP=0x0000000000aac938
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x0000000000aac923
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x0000000000aac817
- (id)keyHitTest:(struct CGPoint)arg1;	// IMP=0x0000000000aac790
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;	// IMP=0x0000000000aac66f
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x0000000000aac368
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000aac2e7
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;	// IMP=0x0000000000aac0f8
- (id)keyViewHitTestForPoint:(struct CGPoint)arg1;	// IMP=0x0000000000aabe8f
- (_Bool)shouldHitTestKey:(id)arg1;	// IMP=0x0000000000aabe16
- (void)finishSliderBehaviorFeedback;	// IMP=0x0000000000aabe10
- (void)provideSliderBehaviorFeedback;	// IMP=0x0000000000aabe0a
- (void)prepareSliderBehaviorFeedback;	// IMP=0x0000000000aabe04
- (_Bool)isTrackpadMode;	// IMP=0x0000000000aabdf4
- (void)deactivateActiveKey;	// IMP=0x0000000000aabd5f
- (void)deactivateActiveKeys;	// IMP=0x0000000000aabccd
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x0000000000aabae9
- (void)cleanupPreviousKeyboardWithNewInputTraits:(id)arg1;	// IMP=0x0000000000aaba4b
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;	// IMP=0x0000000000aab555
- (_Bool)shouldUseDefaultShiftStateFromLayout;	// IMP=0x0000000000aab54d
- (void)setToInitialKeyplane;	// IMP=0x0000000000aab4d1
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000aab4aa
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000aab483
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5 reload:(_Bool)arg6;	// IMP=0x0000000000aab02b
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5;	// IMP=0x0000000000aab00f
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;	// IMP=0x0000000000aab007
- (void)updateCachedKeyplaneKeycaps;	// IMP=0x0000000000aaad4f
- (id)cacheTokenForKeyplane:(id)arg1 caseAlternates:(_Bool)arg2;	// IMP=0x0000000000aaaabd
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;	// IMP=0x0000000000aaa9e5
@property(readonly, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager; // @synthesize emojiKeyManager=_emojiKeyManager;
- (id)keyViewAnimator;	// IMP=0x0000000000aaa943
- (void)updateState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000aaa8e1
- (void)setState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000aaa7c7
- (int)stateForKey:(id)arg1;	// IMP=0x0000000000aaa758
- (id)viewForKey:(id)arg1;	// IMP=0x0000000000aaa6db
- (id)keyplaneFactory;	// IMP=0x0000000000aaa687
- (void)refreshForDictationAvailablityDidChange;	// IMP=0x0000000000aaa533
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000aaa0d4
- (id)inputModeToMergeCapsLockKey;	// IMP=0x0000000000aaa063
- (_Bool)canAddRomanSwitchKey;	// IMP=0x0000000000aa9f4a
- (void)relayoutForWriteboardKey;	// IMP=0x0000000000aa9d79
- (void)transitionToModalContinuousPathKeyplane;	// IMP=0x0000000000aa9c49
- (void)updateReturnKeysIfNeeded;	// IMP=0x0000000000aa9b80
- (void)updateMoreAndInternationalKeys;	// IMP=0x0000000000aa9262
- (void)recenterMonolithKeyplaneSwitchKeys;	// IMP=0x0000000000aa903f
- (void)_transformCarPlayIfNecessary;	// IMP=0x0000000000aa8f42
- (void)_transformFloatingKeyboardIfNecessary;	// IMP=0x0000000000aa8e55
- (void)_addResizeTransformationsIfNecessary;	// IMP=0x0000000000aa8cc9
- (void)_addExtraControlKeysIfNecessary;	// IMP=0x0000000000aa8bdc
- (id)_currentKeyplaneTransformationContext;	// IMP=0x0000000000aa89f6
- (_Bool)_shouldAttemptToAddSupplementaryControlKeys;	// IMP=0x0000000000aa8820
- (void)_updateSupplementaryKeys;	// IMP=0x0000000000aa840c
- (void)_swapGlobeAndMoreKeysIfNecessary;	// IMP=0x0000000000aa7f9c
- (_Bool)_shouldSwapGlobeAndMore;	// IMP=0x0000000000aa7c9d
- (void)mergeKeysIfNeeded;	// IMP=0x0000000000aa7bc7
- (id)keylistContainingKey:(id)arg1;	// IMP=0x0000000000aa7893
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000aa7653
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x0000000000aa70b1
- (unsigned long long)textEditingKeyMask;	// IMP=0x0000000000aa6e9e
- (int)stateForManipulationKey:(id)arg1;	// IMP=0x0000000000aa6c2b
- (id)highlightedVariantListForStylingKey:(id)arg1;	// IMP=0x0000000000aa6b3d
- (int)stateForStylingKey:(id)arg1;	// IMP=0x0000000000aa6a23
- (_Bool)supportStylingWithKey:(id)arg1;	// IMP=0x0000000000aa68f9
- (int)stateForDictationKey:(id)arg1;	// IMP=0x0000000000aa673e
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x0000000000aa6733
- (int)stateForMultitapForwardKey:(id)arg1;	// IMP=0x0000000000aa6721
- (int)stateForMultitapReverseKey:(id)arg1;	// IMP=0x0000000000aa6628
- (int)displayTypeHintForShiftKey;	// IMP=0x0000000000aa6598
- (int)displayTypeHintForMoreKey;	// IMP=0x0000000000aa64e8
- (void)setPercentSignKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000aa5d1c
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000aa56a1
- (void)updateCurrencySymbolForKey:(id)arg1 withCurrencyString:(id)arg2;	// IMP=0x0000000000aa5406
- (_Bool)_stringContainsCurrencyCharacters:(id)arg1;	// IMP=0x0000000000aa522e
- (void)_setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000aa4e79
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000aa4da4
- (void)updateTransitionWithFlags:(unsigned long long)arg1;	// IMP=0x0000000000aa4d1c
- (void)clearKeyAnnotationsIfNecessary;	// IMP=0x0000000000aa4925
- (void)annotateWriteboardDisplayTypeHintForKeyIfNeeded;	// IMP=0x0000000000aa45e0
- (_Bool)useUndoForMessagesWriteboard;	// IMP=0x0000000000aa4556
- (_Bool)useDismissForMessagesWriteboard;	// IMP=0x0000000000aa4108
- (_Bool)ignoreWriteboard;	// IMP=0x0000000000aa4084
- (void)annotateKeysWithDeveloperPunctuation;	// IMP=0x0000000000aa3abe
- (void)updateStateForKey:(id)arg1;	// IMP=0x0000000000aa3621
- (void)updateAllKeyStates;	// IMP=0x0000000000aa314b
- (void)createLayoutFromName:(id)arg1;	// IMP=0x0000000000a9e250
- (_Bool)useCrescendoLayout;	// IMP=0x0000000000a9e240
- (void)reloadCurrentKeyplane;	// IMP=0x0000000000a9e1cc
- (_Bool)_allowPaddle;	// IMP=0x0000000000a9e128
- (_Bool)_allowContinuousPathUI;	// IMP=0x0000000000a9df92
- (_Bool)shouldIgnoreContinuousPathRequirements;	// IMP=0x0000000000a9deb0
- (_Bool)_allowStartingContinuousPathForTouchInfo:(id)arg1 alreadyActiveKeyExisting:(_Bool)arg2;	// IMP=0x0000000000a9dbfa
- (unsigned long long)keyplaneShiftState;	// IMP=0x0000000000a9dafd
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x0000000000a9daa2
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x0000000000a9da00
- (struct CGSize)stretchFactor;	// IMP=0x0000000000a9d7e2
- (double)stretchFactorHeight;	// IMP=0x0000000000a9d64c
- (_Bool)stretchKeyboardToFitKeyplane:(id)arg1;	// IMP=0x0000000000a9d519
- (_Bool)stretchKeyboardToFit;	// IMP=0x0000000000a9d4fc
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x0000000000a9d3af
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x0000000000a9ce8f
- (void)updateGlobeKeyDisplayString;	// IMP=0x0000000000a9cddb
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x0000000000a9cdc9
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x0000000000a9c920
- (_Bool)isResized;	// IMP=0x0000000000a9c8d4
- (_Bool)isResizing;	// IMP=0x0000000000a9c8b7
- (_Bool)supportsEmoji;	// IMP=0x0000000000a9c8af
- (_Bool)canReuseKeyplaneView;	// IMP=0x0000000000a9c6a6
- (_Bool)shouldShowDictationKey;	// IMP=0x0000000000a9c358
- (void)updateBackgroundIfNeeded;	// IMP=0x0000000000a9c12d
- (void)updateBackgroundCorners;	// IMP=0x0000000000a9c08b
- (_Bool)isHandwritingPlane;	// IMP=0x0000000000a9bfdd
- (void)setTrackpadMode:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000a9ba2a
- (void)didEndTrackpadModeForServerSideDictation;	// IMP=0x0000000000a9ba14
- (void)willBeginTrackpadModeForServerSideDictation;	// IMP=0x0000000000a9b9fb
- (void)didEndIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000a9b9b0
- (_Bool)isDeveloperGestureKeybaord;	// IMP=0x0000000000a9b95a
- (void)didEndIndirectSelectionGesture;	// IMP=0x0000000000a9b943
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x0000000000a9b8f8
- (void)willBeginIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000a9b8aa
- (void)willBeginIndirectSelectionGesture;	// IMP=0x0000000000a9b893
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x0000000000a9b75d
- (void)didTriggerDestructiveRenderConfigChange;	// IMP=0x0000000000a9b6ec
- (void)setRenderConfig:(id)arg1 updateKeyplane:(_Bool)arg2;	// IMP=0x0000000000a9b440
- (void)traitCollectionDidChange;	// IMP=0x0000000000a9b240
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(_Bool)arg2;	// IMP=0x0000000000a9b15e
- (struct CGImage *)renderedImageWithToken:(id)arg1;	// IMP=0x0000000000a9ade0
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;	// IMP=0x0000000000a9acf1
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;	// IMP=0x0000000000a9a9a8
- (void)rebuildSplitTransitionView;	// IMP=0x0000000000a9a66f
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x0000000000a9a667
- (void)updateLocalizedKeysForKeyplane:(id)arg1 updateAllKeyplanes:(_Bool)arg2;	// IMP=0x0000000000a9a357
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x0000000000a9a31f
- (void)updateInputModeLocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000a99772
- (void)updateLocalizedDisplayStringsForKeys:(id)arg1;	// IMP=0x0000000000a98ba2
- (void)updateAutolocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000a98a5d
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;	// IMP=0x0000000000a98208
- (void)nextToUseInputModeDidChange:(id)arg1;	// IMP=0x0000000000a9812b
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x0000000000a980b3
- (void)updateLocalizedDisplayStringOnEmojiInternationalWithKeyplane:(id)arg1 withInputMode:(id)arg2;	// IMP=0x0000000000a97c22
- (_Bool)canProduceString:(id)arg1;	// IMP=0x0000000000a97516
@property(readonly, nonatomic) _Bool hasActiveKeys;
- (double)lastTouchDownTimestamp;	// IMP=0x0000000000a97492
- (double)lastTouchUpTimestamp;	// IMP=0x0000000000a97480
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x0000000000a97042
- (id)keyForKeyboardName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0000000000a96fc1
- (void)updateKeyboardForKeyplane:(id)arg1;	// IMP=0x0000000000a96e64
- (struct UIEdgeInsets)keyplanePadding;	// IMP=0x0000000000a96df1
- (struct CGSize)sizeForKeyplane:(id)arg1;	// IMP=0x0000000000a96ab0
- (_Bool)allKeyplanesHaveSameHeight;	// IMP=0x0000000000a968ac
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x0000000000a965c3
- (int)visualStyleForKeyboardIfSplit:(_Bool)arg1;	// IMP=0x0000000000a96500
- (void)refreshForRivenPreferences;	// IMP=0x0000000000a96364
- (void)tearDownSplitTransitionView;	// IMP=0x0000000000a962c3
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x0000000000a9611d
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;	// IMP=0x0000000000a96092
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x0000000000a95e6c
- (id)defaultKeyplaneForKeyplane:(id)arg1;	// IMP=0x0000000000a95ddb
- (id)splitNameForKeyplane:(id)arg1;	// IMP=0x0000000000a95d1a
- (id)splitNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000a95cc3
- (id)defaultNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000a95ca0
@property(readonly, nonatomic) NSString *localizedInputMode;
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x0000000000a952e9
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000a95057
- (void)removeFromSuperview;	// IMP=0x0000000000a94fb9
- (void)clearTransientState;	// IMP=0x0000000000a94ee1
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x0000000000a94b3b
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000a94aad
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000a94a5d
- (void)accessibilitySensitivityChanged;	// IMP=0x0000000000a94a27
- (void)removePathEffectViewConstraintsIfNeeded;	// IMP=0x0000000000a949de
- (void)dealloc;	// IMP=0x0000000000a9472b
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000a9440e
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;	// IMP=0x0000000000ad16d7
- (id)popupKeyViews;	// IMP=0x0000000000ad1478
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;	// IMP=0x0000000000ad122c
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;	// IMP=0x0000000000ad0d9a
- (id)keyWithRepresentedString:(id)arg1;	// IMP=0x0000000000ad0b3b
- (id)keyplaneView:(id)arg1 containingViewForActiveKey:(id)arg2;	// IMP=0x0000000000ad325b
- (void)_didChangeKeyplaneWithContext:(id)arg1;	// IMP=0x0000000000ad31d5
- (void)showPopupView:(long long)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;	// IMP=0x0000000000ad30fe
- (void)setKeyboardDim:(_Bool)arg1;	// IMP=0x0000000000ad2ed8
- (void)setPreferredHeight:(double)arg1;	// IMP=0x0000000000ad2d58
- (void)setDisableInteraction:(_Bool)arg1;	// IMP=0x0000000000ad2d0f
- (void)setKeyboardDim:(_Bool)arg1 amount:(double)arg2 withDuration:(double)arg3;	// IMP=0x0000000000ad295c
- (void)dismissGestureKeyboardIntroduction;	// IMP=0x0000000000ad291a
- (void)handleDismissFlickView;	// IMP=0x0000000000ad28a8
- (void)handleDismissFlickView:(id)arg1;	// IMP=0x0000000000ad269e
- (void)handlePopupView;	// IMP=0x0000000000ad2581
- (void)handlePopupView:(id)arg1;	// IMP=0x0000000000ad240c
- (void)showFlickView:(long long)arg1 withKey:(id)arg2 flickString:(id)arg3;	// IMP=0x0000000000ad238d
- (_Bool)handleFlick:(id)arg1;	// IMP=0x0000000000ad1e83
- (void)populateFlickPopupsForKey:(id)arg1;	// IMP=0x0000000000ad1934
- (id)flickStringForInputKey:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000000ad176d
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;	// IMP=0x0000000000ad16ef
- (void)cancelModalDoubleConsonantKeysTimer;	// IMP=0x0000000000ad4b81
- (void)handleDoubleConsonantKeysTimerFired;	// IMP=0x0000000000ad49e8
- (void)touchModalDoubleConsonantKeysTimer;	// IMP=0x0000000000ad48d5
- (void)finishContinuousPathView:(_Bool)arg1;	// IMP=0x0000000000ad46a5
- (void)clearContinuousPathView;	// IMP=0x0000000000ad45b0
- (void)addContinuousPathPoint:(struct CGPoint)arg1 withTimestamp:(double)arg2;	// IMP=0x0000000000ad444c
- (void)didBeginContinuousPath;	// IMP=0x0000000000ad4084
- (void)transitionToPunctuationKeysVisible:(_Bool)arg1;	// IMP=0x0000000000ad3c07
- (void)_transitionToContinuousPathState:(long long)arg1 forTouchInfo:(id)arg2;	// IMP=0x0000000000ad3b6a
@property(retain, nonatomic) UIKeyboardPathEffectView *pathEffectView;
- (void)didMoveToWindow;	// IMP=0x0000000000ad348d
- (_Bool)_continuousPathModalPunctuationPlaneEnabled;	// IMP=0x0000000000ad33dc
- (_Bool)_continuousPathSpotlightEffectEnabled;	// IMP=0x0000000000ad3387

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

