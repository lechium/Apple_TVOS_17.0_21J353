//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class VCPImageMotionFlowAnalyzer, VCPMotionFlowRequest;

__attribute__((visibility("hidden")))
@interface VCPMotionFlowSubtleMotionAnalyzer
{
    float *_flow;	// 8 = 0x8
    float *_block;	// 16 = 0x10
    _Bool _scale;	// 24 = 0x18
    struct Scaler _scaler;	// 32 = 0x20
    VCPImageMotionFlowAnalyzer *_motionFlowAnalyzer;	// 64 = 0x40
    VCPMotionFlowRequest *_moflowRequest;	// 72 = 0x48
    struct vector<__CVBuffer *, std::allocator<__CVBuffer *>> _frameArray;	// 80 = 0x50
    struct OpaqueVTPixelTransferSession *_transferSession;	// 104 = 0x68
    int _frameWidth;	// 112 = 0x70
    int _frameHeight;	// 116 = 0x74
    int _downScaleWidth;	// 120 = 0x78
    int _downScaleHeight;	// 124 = 0x7c
    int _flowWidth;	// 128 = 0x80
    int _flowHeight;	// 132 = 0x84
    int _blockSize;	// 136 = 0x88
    int _frameNum;	// 140 = 0x8c
    int _sceneType;	// 144 = 0x90
    _Bool _initialized;	// 148 = 0x94
    _Bool _useR2D2;	// 149 = 0x95
    float _subtleMotionScore;	// 152 = 0x98
}

+ (_Bool)enableR2D2;	// IMP=0x00600000002290fa
- (id).cxx_construct;	// IMP=0x000000000022a75b
- (void).cxx_destruct;	// IMP=0x000000000022a6f1
@property(readonly) float subtleMotionScore; // @synthesize subtleMotionScore=_subtleMotionScore;
- (int)analyzePixelBuffer:(struct __CVBuffer *)arg1 withFrame:(void *)arg2 withTimestamp:(CDStruct_1b6d18a9)arg3 andDuration:(CDStruct_1b6d18a9)arg4 hasSubtleScene:(int)arg5 cancel:(CDUnknownBlockType)arg6;	// IMP=0x000000000022a4cf
- (int)generateSubleMotionScore:(void *)arg1;	// IMP=0x0000000000229fe0
- (int)generateMotionFlow;	// IMP=0x0000000000229c0e
- (int)preProcessing:(struct __CVBuffer *)arg1;	// IMP=0x00000000002299b2
- (int)convertPixelBuffer:(struct __CVBuffer *)arg1 toPixelBuffer:(struct __CVBuffer **)arg2 withPixelFormat:(int)arg3;	// IMP=0x000000000022990b
- (int)createPixelBufferWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 pixelFormat:(int)arg3 pixelBuffer:(struct __CVBuffer **)arg4;	// IMP=0x0000000000229827
- (int)convertFlow:(struct __CVBuffer *)arg1;	// IMP=0x000000000022961e
- (int)prepareAnalyzerWithCVPixelBuffer:(struct __CVBuffer *)arg1 cancel:(CDUnknownBlockType)arg2;	// IMP=0x000000000022923b
- (void)dealloc;	// IMP=0x000000000022911c
- (id)init;	// IMP=0x0000000000228f90

@end

